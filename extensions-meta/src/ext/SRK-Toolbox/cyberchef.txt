"{\"categories\":[{\"name\":\"收藏\",\"ops\":[\"Base64编码\",\"Base64解码\",\"字符转十六进制\",\"十六进制转字符\",\"转换到Hexdump\",\"从Hexdump提取\",\"URL解码\",\"正则表达式\",\"熵\",\"Fork\",\"Magic\"]},{\"name\":\"数据格式转换\",\"ops\":[\"转换到Hexdump\",\"从Hexdump提取\",\"字符转十六进制\",\"十六进制转字符\",\"转换为字符码\",\"从字符码提取\",\"字符转十进制\",\"十进制转字符\",\"字符转浮点数\",\"浮点数转字符\",\"字符转二进制\",\"二进制转字符\",\"字符转八进制\",\"八进制转字符\",\"Base32编码\",\"Base32解码\",\"Base45编码\",\"Base45解码\",\"Base58编码\",\"Base58解码\",\"Base62编码\",\"Base62解码\",\"Base64编码\",\"Base64解码\",\"显示Base64偏移形式\",\"Base85编码\",\"Base85解码\",\"Base92编码\",\"Base92解码\",\"十进制数转其它进制\",\"其它进制数转十进制\",\"BCD码编码\",\"BCD码解码\",\"HTML实体编码\",\"HTML实体解码\",\"URL编码\",\"URL解码\",\"Unicode字符转义\",\"Unicode转义恢复\",\"Unicode正规化\",\"QP编码\",\"QP解码\",\"Punycode编码\",\"Punycode解码\",\"AMF编码\",\"AMF解码\",\"Snort Content编码\",\"Snort Content解码\",\"PEM转十六进制\",\"十六进制转PEM\",\"解析ASN.1十六进制字符串\",\"IP地址格式转换\",\"文本编码\",\"文本解码\",\"文本编码暴力破解\",\"端序转换\",\"MessagePack编码\",\"MessagePack解码\",\"盲文编码\",\"盲文解码\",\"解析TLV\",\"CSV转JSON\",\"JSON转CSV\",\"Avro转JSON\",\"CBOR编码\",\"CBOR解码\",\"Caret/M-解码\",\"Rison编码\",\"Rison解码\"]},{\"name\":\"加密算法\",\"ops\":[\"AES加密\",\"AES解密\",\"Blowfish加密\",\"Blowfish解密\",\"DES加密\",\"DES解密\",\"3DES加密\",\"3DES解密\",\"Fernet加密\",\"Fernet解密\",\"LS47加密\",\"LS47解密\",\"RC2加密\",\"RC2解密\",\"RC4\",\"RC4 Drop\",\"ChaCha\",\"Salsa20\",\"XSalsa20\",\"Rabbit\",\"SM4加密\",\"SM4解密\",\"GOST加密\",\"GOST解密\",\"GOST签名\",\"GOST验证\",\"GOST密钥包装\",\"GOST密钥解包装\",\"ROT13\",\"ROT13暴力破解\",\"ROT47\",\"ROT47暴力破解\",\"ROT8000\",\"XOR\",\"XOR暴力破解\",\"维吉尼亚密码加密\",\"维吉尼亚密码解密\",\"摩尔斯电码编码\",\"摩尔斯电码解码\",\"培根密码加密\",\"培根密码解密\",\"双密码加密\",\"双密码解密\",\"恺撒箱密码\",\"仿射密码加密\",\"仿射密码解密\",\"A1Z26密码加密\",\"A1Z26密码解密\",\"篱笆密码加密\",\"篱笆密码解密\",\"阿特巴希密码\",\"CipherSaber2加密\",\"CipherSaber2解密\",\"鲸豚密码加密\",\"鲸豚密码解密\",\"替换密码\",\"派生PBKDF2密钥\",\"派生EVP密钥\",\"派生HKDF密钥\",\"Bcrypt\",\"Scrypt\",\"JWT签名\",\"JWT验证\",\"JWT解码\",\"Citrix CTX1编码\",\"Citrix CTX1解码\",\"AES密钥包装\",\"AES密钥解包装\",\"伪随机数生成器\",\"Enigma\",\"Bombe\",\"Multiple Bombe\",\"Typex\",\"Lorenz\",\"Colossus\",\"SIGABA\",\"XXTEA\"]},{\"name\":\"公钥\",\"ops\":[\"解析X.509证书\",\"解析ASN.1十六进制字符串\",\"PEM转十六进制\",\"十六进制转PEM\",\"OID转十六进制\",\"十六进制转OID\",\"生成PGP密钥对\",\"PGP加密\",\"PGP解密\",\"PGP验证\",\"PGP加密并签名\",\"PGP解密并验证\",\"生成RSA密钥对\",\"RSA签名\",\"RSA验证\",\"RSA加密\",\"RSA解密\",\"解析SSH主机密钥\",\"解析CSR\"]},{\"name\":\"算术 / 逻辑\",\"ops\":[\"并集\",\"交集\",\"补集\",\"对称差\",\"笛卡儿积\",\"幂集\",\"XOR\",\"XOR暴力破解\",\"OR\",\"NOT\",\"AND\",\"ADD\",\"SUB\",\"求和\",\"求差\",\"求积\",\"求商\",\"求平均\",\"求中位数\",\"求标准差\",\"按位左移\",\"按位右移\",\"循环左移\",\"循环右移\",\"ROT13\",\"ROT8000\"]},{\"name\":\"网络\",\"ops\":[\"HTTP请求\",\"DNS over HTTPS\",\"删除HTTP头部\",\"合并HTTP响应分块\",\"解析User Agent\",\"解析IP范围\",\"解析IPv6地址\",\"解析IPv4首部\",\"解析TCP\",\"解析UDP\",\"解析SSH主机密钥\",\"解析URI\",\"URL编码\",\"URL解码\",\"Protobuf编码\",\"Protobuf解码\",\"VarInt编码\",\"VarInt解码\",\"JA3指纹\",\"JA3S指纹\",\"JA4指纹\",\"HASSH客户端指纹\",\"HASSH服务器指纹\",\"MAC地址格式化\",\"IP地址格式转换\",\"IP地址分组\",\"NetBIOS名称编码\",\"NetBIOS名称解码\",\"URL无效化\",\"URL无效化恢复\",\"IP地址无效化\"]},{\"name\":\"语言\",\"ops\":[\"文本编码\",\"文本解码\",\"Unicode文本格式\",\"移除变音符号\",\"Unicode转义恢复\",\"转换为北约音标字母\"]},{\"name\":\"工具\",\"ops\":[\"Diff\",\"移除空白字符\",\"移除空字节\",\"转换为大写\",\"转换为小写\",\"大小写互换\",\"转换为大小写不敏感正则\",\"从大小写不敏感正则恢复\",\"添加行号\",\"移除行号\",\"大小写穷举\",\"转换为表格\",\"反转\",\"排序\",\"乱序\",\"去重\",\"拆分\",\"过滤\",\"Head\",\"Tail\",\"计数\",\"扩写字母范围\",\"删除字节\",\"提取字节\",\"填充行\",\"查找/替换\",\"正则表达式\",\"模糊匹配\",\"偏移检测\",\"汉明距离\",\"莱文斯坦距离\",\"单位转换：距离\",\"单位转换：面积\",\"单位转换：质量\",\"单位转换：速度\",\"单位转换：数据\",\"坐标格式转换\",\"在地图上显示\",\"解析UNIX文件权限\",\"解析ObjectID时间戳\",\"端序转换\",\"解析颜色代码\",\"转义字符串\",\"字符串转义恢复\",\"伪随机数生成器\",\"Sleep\",\"文件树\"]},{\"name\":\"日期 / 时间\",\"ops\":[\"解析DateTime\",\"转换DateTime格式\",\"从UNIX时间戳提取\",\"转换到UNIX时间戳\",\"Windows Filetime转UNIX时间戳\",\"UNIX时间戳转Windows Filetime\",\"DateTime推算\",\"提取日期\",\"获取当前时间\",\"Sleep\"]},{\"name\":\"提取器\",\"ops\":[\"Strings\",\"提取IP地址\",\"提取Email地址\",\"提取MAC地址\",\"提取URL\",\"提取域名\",\"提取文件路径\",\"提取日期\",\"提取哈希\",\"正则表达式\",\"XPath表达式\",\"JPath表达式\",\"CSS选择器\",\"提取EXIF\",\"提取ID3\",\"提取文件\",\"RAKE\"]},{\"name\":\"压缩算法\",\"ops\":[\"Raw Deflate\",\"Raw Inflate\",\"Zlib Deflate\",\"Zlib Inflate\",\"Gzip\",\"Gunzip\",\"Zip\",\"Unzip\",\"Bzip2压缩\",\"Bzip2解压\",\"Tar\",\"Untar\",\"LZString压缩\",\"LZString解压\",\"LZMA压缩\",\"LZMA解压\",\"LZ4压缩\",\"LZ4解压\",\"LZNT1解压\"]},{\"name\":\"哈希\",\"ops\":[\"哈希分析\",\"哈希生成\",\"MD2\",\"MD4\",\"MD5\",\"MD6\",\"SHA0\",\"SHA1\",\"SHA2\",\"SHA3\",\"SM3\",\"Keccak\",\"Shake\",\"RIPEMD\",\"HAS-160\",\"Whirlpool\",\"Snefru\",\"BLAKE2b\",\"BLAKE2s\",\"GOST哈希\",\"Streebog\",\"SSDEEP\",\"CTPH\",\"比较SSDEEP哈希值\",\"比较CTPH哈希值\",\"HMAC\",\"CMAC\",\"Bcrypt\",\"Bcrypt比较\",\"Bcrypt解析\",\"Argon2\",\"Argon2比较\",\"Scrypt\",\"NT哈希\",\"LM哈希\",\"MurmurHash3\",\"Fletcher-8校验和\",\"Fletcher-16校验和\",\"Fletcher-32校验和\",\"Fletcher-64校验和\",\"Adler-32校验和\",\"Luhn校验和\",\"CRC-8校验和\",\"CRC-16校验和\",\"CRC-32校验和\",\"TCP/IP校验和\"]},{\"name\":\"代码清理\",\"ops\":[\"语法高亮\",\"通用代码美化\",\"JavaScript解析\",\"JavaScript美化\",\"JavaScript压缩\",\"JSON美化\",\"JSON压缩\",\"XML美化\",\"XML压缩\",\"SQL美化\",\"SQL压缩\",\"CSS美化\",\"CSS压缩\",\"XPath表达式\",\"JPath表达式\",\"CSS选择器\",\"PHP反序列化\",\"Microsoft Script解码\",\"移除HTML标签\",\"Diff\",\"转换为Snake case\",\"转换为Camel case\",\"转换为Kebab case\",\"BSON序列化\",\"BSON反序列化\",\"MessagePack编码\",\"MessagePack解码\",\"渲染Markdown\"]},{\"name\":\"鉴定\",\"ops\":[\"检测文件类型\",\"扫描嵌入文件\",\"提取文件\",\"YARA规则\",\"移除EXIF\",\"提取EXIF\",\"提取RGBA\",\"查看位平面\",\"色板随机化\",\"提取LSB\",\"ELF信息\"]},{\"name\":\"多媒体\",\"ops\":[\"渲染图像\",\"播放媒体文件\",\"生成图像\",\"光学字符识别\",\"移除EXIF\",\"提取EXIF\",\"色彩通道分离\",\"旋转图像\",\"图像尺寸修改\",\"模糊图像\",\"抖动图像\",\"图像反色\",\"图像翻转\",\"裁剪图像\",\"图像亮度/对比度\",\"图像透明度\",\"图像滤镜\",\"容纳图像\",\"覆盖图像\",\"图像色调/饱和度/明度\",\"锐化图像\",\"图像归一化\",\"图像格式转换\",\"图像加字\",\"六边形密度图\",\"散点图\",\"折线图\",\"热图\"]},{\"name\":\"其他\",\"ops\":[\"熵\",\"频率分布\",\"重合因子\",\"卡方分布\",\"P-list查看器\",\"x86反汇编\",\"伪随机数生成器\",\"生成德布鲁因序列\",\"生成UUID\",\"生成TOTP\",\"生成HOTP\",\"生成二维码\",\"解析二维码\",\"半正矢距离\",\"HTML转文本\",\"生成Lorem Ipsum\",\"Numberwang\",\"XKCD Random Number\"]},{\"name\":\"流程控制\",\"ops\":[\"Magic\",\"Fork\",\"Subsection\",\"Merge\",\"Register\",\"Label\",\"Jump\",\"Conditional Jump\",\"Return\",\"Comment\",\"Sleep\"]},{\"name\":\"SRK Toolbox 专属\",\"ops\":[\"身份证校验位验证\",\"兽音译者加密\",\"兽音译者解密\",\"转换为大写数字\"]}],\"operations\":{\"A1Z26密码解密\":{\"module\":\"Ciphers\",\"description\":\"把字母表序数转换成对应的字母。<br><br>例： <code>1</code> 解密为 <code>a</code> ， <code>2</code> 解密为 <code>b</code>。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}],\"checks\":[{\"pattern\":\"^\\\\s*([12]?[0-9] )+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"Space\"]},{\"pattern\":\"^\\\\s*([12]?[0-9],)+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"Comma\"]},{\"pattern\":\"^\\\\s*([12]?[0-9];)+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"Semi-colon\"]},{\"pattern\":\"^\\\\s*([12]?[0-9]:)+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"Colon\"]},{\"pattern\":\"^\\\\s*([12]?[0-9]\\\\n)+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"Line feed\"]},{\"pattern\":\"^\\\\s*([12]?[0-9]\\\\r\\\\n)+[12]?[0-9]\\\\s*$\",\"flags\":\"\",\"args\":[\"CRLF\"]}]},\"A1Z26密码加密\":{\"module\":\"Ciphers\",\"description\":\"把字母转换为在字母表中对应的位置序数。<br><br>例： <code>a</code> 加密为 <code>1</code> ， <code>b</code> 加密为 <code>2</code>。<br><br>不在26个字母中的其他字符会被忽略。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}]},\"ADD\":{\"module\":\"Default\",\"description\":\"使用给定的Key对输入进行ADD（按位加）操作。(e.g. <code>fe023da5</code>), MOD 255\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bitwise_operators\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Decimal\",\"Binary\",\"Base64\",\"UTF8\",\"Latin1\"]}]},\"AES解密\":{\"module\":\"Ciphers\",\"description\":\"高级加密标准(AES)是美国联邦政府采用的一种区块加密标准(FIPS)。十五种不同算法，经过五年的甄选流程，Rijndael加密法脱颖而出，成为有效标准。<br><br><b>Key：</b>根据Key的长度，会应用以下不同算法：<ul><li>16字节 = AES-128</li><li>24字节 = AES-192</li><li>32字节 = AES-256</li></ul>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV：</b> 初始化向量的长度是16字节。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。<br><br><b>GCM Tag:</b>非GCM模式中忽略。\",\"infoURL\":\"https://wikipedia.org/wiki/Advanced_Encryption_Standard\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Mode\",\"type\":\"argSelector\",\"value\":[{\"name\":\"CBC\",\"off\":[5,6]},{\"name\":\"CFB\",\"off\":[5,6]},{\"name\":\"OFB\",\"off\":[5,6]},{\"name\":\"CTR\",\"off\":[5,6]},{\"name\":\"GCM\",\"on\":[5,6]},{\"name\":\"ECB\",\"off\":[5,6]},{\"name\":\"CBC/NoPadding\",\"off\":[5,6]},{\"name\":\"ECB/NoPadding\",\"off\":[5,6]}]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始数据\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"原始数据\",\"十六进制\"]},{\"name\":\"GCM Tag\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"额外鉴权数据\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]}]},\"AES加密\":{\"module\":\"Ciphers\",\"description\":\"高级加密标准(AES)是美国联邦政府采用的一种区块加密标准(FIPS)。十五种不同算法，经过五年的甄选流程，Rijndael加密法脱颖而出，成为有效标准。<br><br><b>Key：</b>根据Key的长度，会应用以下不同算法：<ul><li>16字节 = AES-128</li><li>24字节 = AES-192</li><li>32字节 = AES-256</li></ul>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV：</b> 初始化向量的长度是16字节。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/Advanced_Encryption_Standard\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"argSelector\",\"value\":[{\"name\":\"CBC\",\"off\":[5]},{\"name\":\"CFB\",\"off\":[5]},{\"name\":\"OFB\",\"off\":[5]},{\"name\":\"CTR\",\"off\":[5]},{\"name\":\"GCM\",\"on\":[5]},{\"name\":\"ECB\",\"off\":[5]}]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]},{\"name\":\"额外鉴权数据\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]}]},\"AES密钥解包装\":{\"module\":\"Ciphers\",\"description\":\"解密使用AES密钥包装算法（由RFC3394定义）的密文。AES密钥包装算法用于在非可信存储和通信环境中保护密钥。<br><br>此算法使用AES key（KEK: key-encryption key）和64位长度的IV来解密64位长度的块。\",\"infoURL\":\"https://wikipedia.org/wiki/Key_wrap\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key (KEK)\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"a6a6a6a6a6a6a6a6\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"Raw\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"Raw\"]}]},\"AES密钥包装\":{\"module\":\"Ciphers\",\"description\":\"使用AES加密的密钥包装算法（由RFC3394定义），用于在非可信存储和通信环境中保护密钥。<br><br>此算法使用AES key（KEK: key-encryption key）和64位长度的IV来加密64位长度的块。\",\"infoURL\":\"https://wikipedia.org/wiki/Key_wrap\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key (KEK)\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"a6a6a6a6a6a6a6a6\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]}]},\"AMF解码\":{\"module\":\"Encodings\",\"description\":\"Action Message Format (AMF) 是一种用于序列化对象图（例如ActionScript对象和XML）的二进制格式，通常用于Adobe Flash客户端与服务器（Flash Media Server或其它第三方替代品）的消息传递。\",\"infoURL\":\"https://wikipedia.org/wiki/Action_Message_Format\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"格式\",\"type\":\"option\",\"value\":[\"AMF0\",\"AMF3\"],\"defaultIndex\":1}]},\"AMF编码\":{\"module\":\"Encodings\",\"description\":\"Action Message Format (AMF) 是一种用于序列化对象图（例如ActionScript对象和XML）的二进制格式，通常用于Adobe Flash客户端与服务器（Flash Media Server或其它第三方替代品）的消息传递。\",\"infoURL\":\"https://wikipedia.org/wiki/Action_Message_Format\",\"inputType\":\"JSON\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"格式\",\"type\":\"option\",\"value\":[\"AMF0\",\"AMF3\"],\"defaultIndex\":1}]},\"AND\":{\"module\":\"Default\",\"description\":\"使用给定的key对输入进行按位与（AND）操作。<br>例如： <code>fe023da5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#AND\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Decimal\",\"Binary\",\"Base64\",\"UTF8\",\"Latin1\"]}]},\"添加行号\":{\"module\":\"Default\",\"description\":\"在输出内容添加行号。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"图像加字\":{\"module\":\"Image\",\"description\":\"往图像上添加文字。<br><br>文字可以水平或纵向排列，也可以自定义位置。<br>仅限使用Roboto字体家族，字体大小和颜色不限。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"文字\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"水平对齐\",\"type\":\"option\",\"value\":[\"无\",\"左对齐\",\"居中\",\"右对齐\"]},{\"name\":\"垂直对齐\",\"type\":\"option\",\"value\":[\"无\",\"顶端\",\"中部\",\"底端\"]},{\"name\":\"X坐标\",\"type\":\"number\",\"value\":0},{\"name\":\"Y坐标\",\"type\":\"number\",\"value\":0},{\"name\":\"大小\",\"type\":\"number\",\"value\":32,\"min\":8},{\"name\":\"字体\",\"type\":\"option\",\"value\":[\"Roboto\",\"Roboto Black\",\"Roboto Mono\",\"Roboto Slab\"]},{\"name\":\"红\",\"type\":\"number\",\"value\":255,\"min\":0,\"max\":255},{\"name\":\"绿\",\"type\":\"number\",\"value\":255,\"min\":0,\"max\":255},{\"name\":\"蓝\",\"type\":\"number\",\"value\":255,\"min\":0,\"max\":255},{\"name\":\"Alpha\",\"type\":\"number\",\"value\":255,\"min\":0,\"max\":255}]},\"Adler-32校验和\":{\"module\":\"Crypto\",\"description\":\"Adler-32是一种校验算法，由马克·阿德勒在1995年发明，是对Fletcher校验的一种改进。与相同长度的循环冗余校验相比，它以可靠性换取速度（更倾向于后者）。Adler-32比Fletcher-16更加可靠，比Fletcher-32可靠性稍差。\",\"infoURL\":\"https://wikipedia.org/wiki/Adler-32\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"仿射密码解密\":{\"module\":\"Ciphers\",\"description\":\"仿射密码（Affine cipher）为单表加密的一种，字母系统中所有字母都藉一简单数学方程加密，对应至数值，或转回字母。\",\"infoURL\":\"https://wikipedia.org/wiki/Affine_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"a\",\"type\":\"number\",\"value\":1},{\"name\":\"b\",\"type\":\"number\",\"value\":0}]},\"仿射密码加密\":{\"module\":\"Ciphers\",\"description\":\"仿射密码（Affine cipher）为单表加密的一种，字母系统中所有字母都藉一简单数学方程加密（<code>(ax + b) % 26</code>），对应至数值，或转回字母。\",\"infoURL\":\"https://wikipedia.org/wiki/Affine_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"a\",\"type\":\"number\",\"value\":1},{\"name\":\"b\",\"type\":\"number\",\"value\":0}]},\"哈希分析\":{\"module\":\"Crypto\",\"description\":\"根据给定哈希值的长度猜测可能的哈希算法。\",\"infoURL\":\"https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Argon2\":{\"module\":\"Crypto\",\"description\":\"Argon2是2015年7月Password Hashing Competition大赛中密钥派生算法的胜出者。算法由卢森堡大学的Alex Biryukov、Daniel Dinu和Dmitry Khovratovich设计。<br><br>在输入框输入密码来生成对应的哈希。\",\"infoURL\":\"https://wikipedia.org/wiki/Argon2\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"盐\",\"type\":\"toggleString\",\"value\":\"somesalt\",\"toggleValues\":[\"UTF8\",\"十六进制\",\"Base64\",\"Latin1\"]},{\"name\":\"迭代次数\",\"type\":\"number\",\"value\":3},{\"name\":\"内存 (KiB)\",\"type\":\"number\",\"value\":4096},{\"name\":\"并行\",\"type\":\"number\",\"value\":1},{\"name\":\"哈希长度 (字节)\",\"type\":\"number\",\"value\":32},{\"name\":\"类型\",\"type\":\"option\",\"value\":[\"Argon2i\",\"Argon2d\",\"Argon2id\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"编码哈希\",\"十六进制哈希\",\"原始哈希\"]}]},\"Argon2比较\":{\"module\":\"Crypto\",\"description\":\"检测输入的密码是否和给定的Argon2哈希一致。想要同时检测多个密码，使用“Fork”操作。\",\"infoURL\":\"https://wikipedia.org/wiki/Argon2\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码哈希\",\"type\":\"string\",\"value\":\"\"}]},\"阿特巴希密码\":{\"module\":\"Ciphers\",\"description\":\"阿特巴希密码（Atbash Cipher）是一种开始由希伯来字母使用的简易替换密码。此处进行了修改用于拉丁字母。\",\"infoURL\":\"https://wikipedia.org/wiki/Atbash\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Avro转JSON\":{\"module\":\"Serialise\",\"description\":\"将Apache Avro编码格式转换为JSON。\",\"infoURL\":\"https://wikipedia.org/wiki/Apache_Avro\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"强制有效JSON\",\"type\":\"boolean\",\"value\":true}]},\"BLAKE2b\":{\"module\":\"Hashing\",\"description\":\"计算输入内容的BLAKE2b哈希值。\\n        <br><br>BLAKE2b是BLAKE哈希算法的一种，为64位平台优化，产生1到64字节长度的哈希。\\n        <br><br>支持可选的Key。\",\"infoURL\":\"https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2b_algorithm\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"512\",\"384\",\"256\",\"160\",\"128\"]},{\"name\":\"输出编码\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"十进制\",\"Base64\",\"十六进制\",\"Latin1\"]}]},\"BLAKE2s\":{\"module\":\"Hashing\",\"description\":\"计算输入内容的BLAKE2s哈希值。\\n        <br><br>BLAKE2s是BLAKE哈希算法的一种，为8到32位平台优化，产生1到32字节长度的哈希。\\n        <br><br>支持可选的Key。\",\"infoURL\":\"https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"256\",\"160\",\"128\"]},{\"name\":\"输出编码\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"十进制\",\"Base64\",\"十六进制\",\"Latin1\"]}]},\"BSON反序列化\":{\"module\":\"Serialise\",\"description\":\"BSON是一种计算机数据交换格式，主要被用作MongoDB数据库中的数据存储和网络传输格式。它是一种二进制表示形式，能用来表示简单数据结构、关联数组（MongoDB中称为“对象”或“文档”）以及MongoDB中的各种数据类型。BSON之名缘于JSON，含义为Binary JSON（二进制JSON）。<br><br>输入数据需要为原始字节数据。\",\"infoURL\":\"https://wikipedia.org/wiki/BSON\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"BSON序列化\":{\"module\":\"Serialise\",\"description\":\"BSON是一种计算机数据交换格式，主要被用作MongoDB数据库中的数据存储和网络传输格式。它是一种二进制表示形式，能用来表示简单数据结构、关联数组（MongoDB中称为“对象”或“文档”）以及MongoDB中的各种数据类型。BSON之名缘于JSON，含义为Binary JSON（二进制JSON）。<br><br>输入必须是合法的JSON。\",\"infoURL\":\"https://wikipedia.org/wiki/BSON\",\"inputType\":\"string\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"培根密码解密\":{\"module\":\"Default\",\"description\":\"培根密码，又名倍康尼密码（英语：Bacon's cipher）是由弗朗西斯·培根发明的一种隐写术。密文用一段其它文字的形式表现，而不是使用它本身的内容。\",\"infoURL\":\"https://wikipedia.org/wiki/Bacon%27s_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"用字符\",\"type\":\"option\",\"value\":[\"标准 (I=J, U=V)\",\"完全\"]},{\"name\":\"翻译方式\",\"type\":\"option\",\"value\":[\"0/1\",\"A/B\",\"大小写\",\"A-M/N-Z首字母\"]},{\"name\":\"反向翻译（0/A换成1/B，1/B换成0/A）\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^\\\\s*([01]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"标准 (I=J, U=V)\",\"0/1\",false]},{\"pattern\":\"^\\\\s*([01]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"标准 (I=J, U=V)\",\"0/1\",true]},{\"pattern\":\"^\\\\s*([AB]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"标准 (I=J, U=V)\",\"A/B\",false]},{\"pattern\":\"^\\\\s*([AB]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"标准 (I=J, U=V)\",\"A/B\",true]},{\"pattern\":\"^\\\\s*([01]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"完全\",\"0/1\",false]},{\"pattern\":\"^\\\\s*([01]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"完全\",\"0/1\",true]},{\"pattern\":\"^\\\\s*([AB]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"完全\",\"A/B\",false]},{\"pattern\":\"^\\\\s*([AB]{5}\\\\s?)+$\",\"flags\":\"\",\"args\":[\"完全\",\"A/B\",true]}]},\"培根密码加密\":{\"module\":\"Default\",\"description\":\"培根密码，又名倍康尼密码（英语：Bacon's cipher）是由弗朗西斯·培根发明的一种隐写术。密文用一段其它文字的形式表现，而不是使用它本身的内容。\",\"infoURL\":\"https://wikipedia.org/wiki/Bacon%27s_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"option\",\"value\":[\"标准 (I=J, U=V)\",\"完全\"]},{\"name\":\"翻译方式\",\"type\":\"option\",\"value\":[\"0/1\",\"A/B\"]},{\"name\":\"保留无法编码的其它字符\",\"type\":\"boolean\",\"value\":false},{\"name\":\"反向翻译（0/A换成1/B，1/B换成0/A）\",\"type\":\"boolean\",\"value\":false}]},\"Bcrypt\":{\"module\":\"Crypto\",\"description\":\"bcrypt是一个由美国计算机科学家尼尔斯·普罗沃斯（Niels Provos）以及大卫·马齐耶（David Mazières）根据Blowfish加密算法所设计的密码散列函数，于1999年在USENIX中展示。实现中bcrypt会使用一个加盐的流程以防御彩虹表攻击，同时bcrypt还是适应性函数，它可以借由增加迭代之次数来抵御日益增进的电脑运算能力透过暴力法破解。<br><br>在输入区输入口令来生成对应的哈希值。\",\"infoURL\":\"https://wikipedia.org/wiki/Bcrypt\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"迭代次数\",\"type\":\"number\",\"value\":10}]},\"Bcrypt比较\":{\"module\":\"Crypto\",\"description\":\"测试输入内容是否符合给定的bcrypt哈希值。若需要测试多个可能的密码，使用“Fork”操作。\",\"infoURL\":\"https://wikipedia.org/wiki/Bcrypt\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"哈希值\",\"type\":\"string\",\"value\":\"\"}]},\"Bcrypt解析\":{\"module\":\"Crypto\",\"description\":\"解析bcrypt哈希值，计算轮数、盐和密码哈希。\",\"infoURL\":\"https://wikipedia.org/wiki/Bcrypt\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"双密码解密\":{\"module\":\"Ciphers\",\"description\":\"双密码（Bifid cipher）是使用了换位后的波利比奥斯方阵（Polybius square）的加密方式，在不知道加密关键词的情况下难以手工破解。\",\"infoURL\":\"https://wikipedia.org/wiki/Bifid_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"加密关键词\",\"type\":\"string\",\"value\":\"\"}]},\"双密码加密\":{\"module\":\"Ciphers\",\"description\":\"双密码（Bifid cipher）是使用了换位后的波利比奥斯方阵（Polybius square）的加密方式，在不知道加密关键词的情况下难以手工破解。\",\"infoURL\":\"https://wikipedia.org/wiki/Bifid_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"加密关键词\",\"type\":\"string\",\"value\":\"\"}]},\"按位左移\":{\"module\":\"Default\",\"description\":\"按照给定的偏移量对输入值进行按位左移操作。\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":1}]},\"按位右移\":{\"module\":\"Default\",\"description\":\"按照给定的偏移量对输入值进行按位右移操作。<br><br><i>逻辑移位：</i> 左侧最高位插入0 <br><i>算术移位：</i> 保留最高有效位，从而保证计算前后的数字符号一致（即正负一致）\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":1},{\"name\":\"类型\",\"type\":\"option\",\"value\":[\"逻辑移位\",\"算术移位\"]}]},\"Blowfish解密\":{\"module\":\"Ciphers\",\"description\":\"Blowfish是一个对称密钥加密分组密码算法，由布鲁斯·施奈尔于1993年设计，现已应用在多种加密产品。Blowfish算法由于分组长度太小已被认为不安全，施奈尔更建议在现代应用中使用Twofish密码。<br><br><b>IV：</b> 初始化向量必须是8字节长度。\",\"infoURL\":\"https://wikipedia.org/wiki/Blowfish_(cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]}]},\"Blowfish加密\":{\"module\":\"Ciphers\",\"description\":\"Blowfish是一个对称密钥加密分组密码算法，由布鲁斯·施奈尔于1993年设计，现已应用在多种加密产品。Blowfish算法由于分组长度太小已被认为不安全，施奈尔更建议在现代应用中使用Twofish密码。<br><br><b>IV：</b> 初始化向量必须是8字节长度。\",\"infoURL\":\"https://wikipedia.org/wiki/Blowfish_(cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]}]},\"模糊图像\":{\"module\":\"Image\",\"description\":\"给图像应用模糊效果。<br><br>高斯模糊比快速模糊运算速度慢很多，但效果较好。\",\"infoURL\":\"https://wikipedia.org/wiki/Gaussian_blur\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"模糊量\",\"type\":\"number\",\"value\":5,\"min\":1},{\"name\":\"类型\",\"type\":\"option\",\"value\":[\"快速\",\"高斯\"]}]},\"Bombe\":{\"module\":\"Bletchley\",\"description\":\"Emulation of the Bombe machine used at Bletchley Park to attack Enigma, based on work by Polish and British cryptanalysts.<br><br>To run this you need to have a 'crib', which is some known plaintext for a chunk of the target ciphertext, and know the rotors used. (See the 'Bombe (multiple runs)' operation if you don't know the rotors.) The machine will suggest possible configurations of the Enigma. Each suggestion has the rotor start positions (left to right) and known plugboard pairs.<br><br>Choosing a crib: First, note that Enigma cannot encrypt a letter to itself, which allows you to rule out some positions for possible cribs. Secondly, the Bombe does not simulate the Enigma's middle rotor stepping. The longer your crib, the more likely a step happened within it, which will prevent the attack working. However, other than that, longer cribs are generally better. The attack produces a 'menu' which maps ciphertext letters to plaintext, and the goal is to produce 'loops': for example, with ciphertext ABC and crib CAB, we have the mappings A&lt;-&gt;C, B&lt;-&gt;A, and C&lt;-&gt;B, which produces a loop A-B-C-A. The more loops, the better the crib. The operation will output this: if your menu has too few loops or is too short, a large number of incorrect outputs will usually be produced. Try a different crib. If the menu seems good but the right answer isn't produced, your crib may be wrong, or you may have overlapped the middle rotor stepping - try a different crib.<br><br>Output is not sufficient to fully decrypt the data. You will have to recover the rest of the plugboard settings by inspection. And the ring position is not taken into account: this affects when the middle rotor steps. If your output is correct for a bit, and then goes wrong, adjust the ring and start position on the right-hand rotor together until the output improves. If necessary, repeat for the middle rotor.<br><br>By default this operation runs the checking machine, a manual process to verify the quality of Bombe stops, on each stop, discarding stops which fail. If you want to see how many times the hardware actually stops for a given input, disable the checking machine.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Bombe\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Model\",\"type\":\"argSelector\",\"value\":[{\"name\":\"3-rotor\",\"off\":[1]},{\"name\":\"4-rotor\",\"on\":[1]}]},{\"name\":\"Left-most (4th) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Beta\",\"value\":\"LEYJVCNIXWPBQMDRTAKZGFUHOS\"},{\"name\":\"Gamma\",\"value\":\"FSOKANUERHMBTIYCWLQPZXVGJD\"}]},{\"name\":\"Left-hand rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}]},{\"name\":\"Middle rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}],\"defaultIndex\":1},{\"name\":\"Right-hand rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}],\"defaultIndex\":2},{\"name\":\"Reflector\",\"type\":\"editableOption\",\"value\":[{\"name\":\"B\",\"value\":\"AY BR CU DH EQ FS GL IP JX KN MO TZ VW\"},{\"name\":\"C\",\"value\":\"AF BV CP DJ EI GO HY KR LZ MX NW TQ SU\"},{\"name\":\"B Thin\",\"value\":\"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV\"},{\"name\":\"C Thin\",\"value\":\"AR BD CO EJ FN GT HK IV LM PW QZ SX UY\"}]},{\"name\":\"Crib\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Crib offset\",\"type\":\"number\",\"value\":0},{\"name\":\"Use checking machine\",\"type\":\"boolean\",\"value\":true}]},\"Bzip2压缩\":{\"module\":\"Compression\",\"description\":\"Bzip2 是由 Julian Seward (of GHC fame) 开发的压缩算法库，使用 Burrows-Wheeler 算法。仅支持压缩单个文件且速度较慢，但比 Deflate (.gz & .zip) 算法压缩率更高。\",\"infoURL\":\"https://wikipedia.org/wiki/Bzip2\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"块大小 (多少个100kb)\",\"type\":\"number\",\"value\":9,\"min\":1,\"max\":9},{\"name\":\"Work factor\",\"type\":\"number\",\"value\":30}]},\"Bzip2解压\":{\"module\":\"Compression\",\"description\":\"解压使用 Bzip2 算法压缩的数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Bzip2\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"使用低内存占用但更慢的解压算法\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^\\\\x42\\\\x5a\\\\x68\",\"flags\":\"\",\"args\":[]}]},\"CBOR解码\":{\"module\":\"Serialise\",\"description\":\"简明二进制对象展现（CBOR，Concise Binary Object Representation）是一种提供良好压缩性，扩展性强，不需要进行版本协商的二进制数据交换形式。这些特性使它有别于早期的ASN.1和MessagePack等二进制序列化方式。IETF RFC 8949定义了详细的CBOR格式与说明。\",\"infoURL\":\"https://wikipedia.org/wiki/CBOR\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CBOR编码\":{\"module\":\"Serialise\",\"description\":\"简明二进制对象展现（CBOR，Concise Binary Object Representation）是一种提供良好压缩性，扩展性强，不需要进行版本协商的二进制数据交换形式。这些特性使它有别于早期的ASN.1和MessagePack等二进制序列化方式。IETF RFC 8949定义了详细的CBOR格式与说明。\",\"infoURL\":\"https://wikipedia.org/wiki/CBOR\",\"inputType\":\"JSON\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CMAC\":{\"module\":\"Crypto\",\"description\":\"CMAC是基于块加密算法的消息验证码算法。<br><br>RFC4493定义AES-CMAC，使用128位key的AES加密算法。<br>NIST SP 800-38B建议使用其它key长度的AES算法或3DES。\",\"infoURL\":\"https://wikipedia.org/wiki/CMAC\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"加密算法\",\"type\":\"option\",\"value\":[\"AES\",\"3DES\"]}]},\"身份证校验位验证\":{\"module\":\"Default\",\"description\":\"验证中国大陆18位身份证号码最后一位是否正确。\",\"infoURL\":\"https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%85%AC%E6%B0%91%E8%BA%AB%E4%BB%BD%E5%8F%B7%E7%A0%81\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CRC-16校验和\":{\"module\":\"Crypto\",\"description\":\"循环冗余校验（英语：Cyclic redundancy check，通称“CRC”）是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。<br><br>此方法是由W. Wesley Peterson于1961年发表。\",\"infoURL\":\"https://wikipedia.org/wiki/Cyclic_redundancy_check\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CRC-32校验和\":{\"module\":\"Crypto\",\"description\":\"循环冗余校验（英语：Cyclic redundancy check，通称“CRC”）是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。<br><br>此方法是由W. Wesley Peterson于1961年发表。用于以太网和很多其它标准的32位CRC算法于1975年发布，是多位研究员的工作成果。\",\"infoURL\":\"https://wikipedia.org/wiki/Cyclic_redundancy_check\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CRC-8校验和\":{\"module\":\"Crypto\",\"description\":\"循环冗余校验（英语：Cyclic redundancy check，通称“CRC”）是一种根据网络数据包或电脑文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。<br><br>此方法是由W. Wesley Peterson于1961年发表。\",\"infoURL\":\"https://wikipedia.org/wiki/Cyclic_redundancy_check\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"算法\",\"type\":\"option\",\"value\":[\"CRC-8\",\"CRC-8/CDMA2000\",\"CRC-8/DARC\",\"CRC-8/DVB-S2\",\"CRC-8/EBU\",\"CRC-8/I-CODE\",\"CRC-8/ITU\",\"CRC-8/MAXIM\",\"CRC-8/ROHC\",\"CRC-8/WCDMA\"]}]},\"CSS美化\":{\"module\":\"Code\",\"description\":\"为Cascading Style Sheets (CSS)代码添加缩进与美化。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩进\",\"type\":\"binaryShortString\",\"value\":\"\\\\t\"}]},\"CSS压缩\":{\"module\":\"Code\",\"description\":\"压缩Cascading Style Sheets (CSS)代码（Minify/Uglify）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"保留注释\",\"type\":\"boolean\",\"value\":false}]},\"CSS选择器\":{\"module\":\"Code\",\"description\":\"从HTML文档中使用CSS选择器提取内容。\",\"infoURL\":\"https://wikipedia.org/wiki/Cascading_Style_Sheets#Selector\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"CSS选择器\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"提取内容分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\"}]},\"CSV转JSON\":{\"module\":\"Default\",\"description\":\"把CSV文件转成JSON格式。\",\"infoURL\":\"https://wikipedia.org/wiki/Comma-separated_values\",\"inputType\":\"string\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"单元格分隔符\",\"type\":\"binaryShortString\",\"value\":\",\"},{\"name\":\"行分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\r\\\\n\"},{\"name\":\"格式\",\"type\":\"option\",\"value\":[\"字典数组\",\"数组数组\"]}]},\"CTPH\":{\"module\":\"Crypto\",\"description\":\"CTPH也被叫做模糊哈希，可以用来检测数据同源性。例如几段具有相同内容片段的数据，相同片段间的其它内容和长度不同，但CTPH的计算结果相近。<br><br>CTPH源于Dr. Andrew Tridgell的理论研究以及一款称作SpamSum的垃圾邮件检测程序。此算法最终由Jesse Kornblum改进并发表在2006年的DFRWS论文“Identifying Almost Identical Files Using Context Triggered Piecewise Hashing”上。\",\"infoURL\":\"https://forensics.wiki/context_triggered_piecewise_hashing/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"恺撒箱密码\":{\"module\":\"Ciphers\",\"description\":\"恺撒箱密码（Caesar Box Cipher）是古罗马帝国使用的一种换位密码。密文按行写成正方或长方形后，按列读取。\",\"infoURL\":\"https://www.dcode.fr/caesar-box-cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"箱高度\",\"type\":\"number\",\"value\":1}]},\"Caret/M-解码\":{\"module\":\"Default\",\"description\":\"解码脱字符（^，插入记号，caret）或 M-编码（M-notation） 的字符串，例如 ^M 解码为换行， M-^] 解码为 0x9d。一般来源于类似 `cat -v` 指令的输出结果。\\n\\n注意使用 `cat -v` 的时候 ^_ （脱字符+下划线）不会被编码，只会用来表示0x1f。\",\"infoURL\":\"https://en.wikipedia.org/wiki/Caret_notation\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"笛卡儿积\":{\"module\":\"Default\",\"description\":\"计算多个集合的笛卡儿积，包括所有的组合。\",\"infoURL\":\"https://wikipedia.org/wiki/Cartesian_product\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"集合分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"鲸豚密码解密\":{\"module\":\"Ciphers\",\"description\":\"把输入使用鲸豚密码（Cetacean Cipher）解密。 <br/><br/>例如 <code>EEEEEEEEEeeEeEEEEEEEEEEEEeeEeEEe</code> 解密为 <code>hi</code>\",\"infoURL\":\"https://hitchhikers.fandom.com/wiki/Dolphins\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^(?:[eE]{16,})(?: [eE]{16,})*$\",\"flags\":\"\",\"args\":[]}]},\"鲸豚密码加密\":{\"module\":\"Ciphers\",\"description\":\"把输入使用鲸豚密码（Cetacean Cipher）加密。 <br/><br/>例如 <code>hi</code> 加密为 <code>EEEEEEEEEeeEeEEEEEEEEEEEEeeEeEEe</code>\",\"infoURL\":\"https://hitchhikers.fandom.com/wiki/Dolphins\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"ChaCha\":{\"module\":\"Ciphers\",\"description\":\"ChaCha是由Daniel J. Bernstein设计的流密码算法。它是Salsa流密码算法的一个变种。存在多个参数化种类；“ChaCha”可以指原版算法，或在RFC-8439中定义的算法。ChaCha通常和Poly1305配合使用，称作ChaCha20-Poly1305 AEAD算法。<br><br><b>Key：</b>ChaCha使用16或32字节的key（128或256位）。<br><br><b>Nonce：</b>ChaCha使用8或12字节长度的nonce（64或96位）。<br><br><b>Counter：</b>ChaCha使用4或8字节的counter（32或64位）；Nonce和counter必须合计16字节。计数（Counter）从0开始，每64字节的密文流后自增。\",\"infoURL\":\"https://wikipedia.org/wiki/Salsa20#ChaCha_variant\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Nonce\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\",\"整数\"]},{\"name\":\"计数\",\"type\":\"number\",\"value\":0,\"min\":0},{\"name\":\"轮数\",\"type\":\"option\",\"value\":[\"20\",\"12\",\"8\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]}]},\"IP地址格式转换\":{\"module\":\"Default\",\"description\":\"转换IP地址的表示方法。例： <code>172.20.23.54</code> 转换成 <code>ac141736</code>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十进制用点分隔\",\"十进制\",\"八进制\",\"十六进制\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"十进制用点分隔\",\"十进制\",\"八进制\",\"十六进制\"]}]},\"卡方分布\":{\"module\":\"Default\",\"description\":\"计算给定数值的卡方分布。\",\"infoURL\":\"https://wikipedia.org/wiki/Chi-squared_distribution\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"CipherSaber2解密\":{\"module\":\"Crypto\",\"description\":\"CipherSaber是基于RC4的简单对称加密协议。它提供了足够强的信息加密保护，同时算法设计足够简单，很容易使用编程语言完整实现。\",\"infoURL\":\"https://wikipedia.org/wiki/CipherSaber\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Rounds\",\"type\":\"number\",\"value\":20}]},\"CipherSaber2加密\":{\"module\":\"Crypto\",\"description\":\"CipherSaber是基于RC4的简单对称加密协议。它提供了足够强的信息加密保护，同时算法设计足够简单，很容易使用编程语言完整实现。\",\"infoURL\":\"https://wikipedia.org/wiki/CipherSaber\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Rounds\",\"type\":\"number\",\"value\":20}]},\"Citrix CTX1解码\":{\"module\":\"Encodings\",\"description\":\"把Citrix CTX1密码格式解码为明文。\",\"infoURL\":\"https://www.reddit.com/r/AskNetsec/comments/1s3r6y/citrix_ctx1_hash_decoding/\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Citrix CTX1编码\":{\"module\":\"Encodings\",\"description\":\"把字符串编码为Citrix CTX1密码格式。\",\"infoURL\":\"https://www.reddit.com/r/AskNetsec/comments/1s3r6y/citrix_ctx1_hash_decoding/\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Colossus\":{\"module\":\"Bletchley\",\"description\":\"Colossus is the name of the world's first electronic computer. Ten Colossi were designed by Tommy Flowers and built at the Post Office Research Labs at Dollis Hill in 1943 during World War 2. They assisted with the breaking of the German Lorenz cipher attachment, a machine created to encipher communications between Hitler and his generals on the front lines.<br><br>To learn more, Virtual Colossus, an online, browser based simulation of a Colossus computer is available at <a href='https://virtualcolossus.co.uk' target='_blank'>virtualcolossus.co.uk</a>.<br><br>A more detailed description of this operation can be found <a href='https://github.com/gchq/CyberChef/wiki/Colossus' target='_blank'>here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Colossus_computer\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Input\",\"type\":\"label\"},{\"name\":\"Pattern\",\"type\":\"option\",\"value\":[\"KH Pattern\",\"ZMUG Pattern\",\"BREAM Pattern\"]},{\"name\":\"QBusZ\",\"type\":\"option\",\"value\":[\"\",\"Z\",\"ΔZ\"]},{\"name\":\"QBusΧ\",\"type\":\"option\",\"value\":[\"\",\"Χ\",\"ΔΧ\"]},{\"name\":\"QBusΨ\",\"type\":\"option\",\"value\":[\"\",\"Ψ\",\"ΔΨ\"]},{\"name\":\"Limitation\",\"type\":\"option\",\"value\":[\"None\",\"Χ2\",\"Χ2 + P5\",\"X2 + Ψ1\",\"X2 + Ψ1 + P5\"]},{\"name\":\"K Rack Option\",\"type\":\"argSelector\",\"value\":[{\"name\":\"Select Program\",\"on\":[7],\"off\":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]},{\"name\":\"Top Section - Conditional\",\"on\":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\"off\":[7,31,32,33,34,35,36,37,38,39,40]},{\"name\":\"Bottom Section - Addition\",\"on\":[31,32,33,34,35,36,37,38,39,40],\"off\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{\"name\":\"Advanced\",\"on\":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"off\":[7]}]},{\"name\":\"Program to run\",\"type\":\"option\",\"value\":[\"\",\"Letter Count\",\"1+2=. (1+2 Break In, Find X1,X2)\",\"4=5=/1=2 (Given X1,X2 find X4,X5)\",\"/,5,U (Count chars to find X3)\"]},{\"name\":\"K Rack: Conditional\",\"type\":\"label\"},{\"name\":\"R1-Q1\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R1-Q2\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R1-Q3\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R1-Q4\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R1-Q5\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R1-Negate\",\"type\":\"boolean\",\"value\":false},{\"name\":\"R1-Counter\",\"type\":\"option\",\"value\":[\"\",\"1\",\"2\",\"3\",\"4\",\"5\"]},{\"name\":\"R2-Q1\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R2-Q2\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R2-Q3\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R2-Q4\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R2-Q5\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R2-Negate\",\"type\":\"boolean\",\"value\":false},{\"name\":\"R2-Counter\",\"type\":\"option\",\"value\":[\"\",\"1\",\"2\",\"3\",\"4\",\"5\"]},{\"name\":\"R3-Q1\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R3-Q2\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R3-Q3\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R3-Q4\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R3-Q5\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"R3-Negate\",\"type\":\"boolean\",\"value\":false},{\"name\":\"R3-Counter\",\"type\":\"option\",\"value\":[\"\",\"1\",\"2\",\"3\",\"4\",\"5\"]},{\"name\":\"Negate All\",\"type\":\"boolean\",\"value\":false},{\"name\":\"K Rack: Addition\",\"type\":\"label\"},{\"name\":\"Add-Q1\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add-Q2\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add-Q3\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add-Q4\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add-Q5\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add-Equals\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"Add-Counter1\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Add Negate All\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Total Motor\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"Up (.)\",\"value\":\".\"},{\"name\":\"Centre\",\"value\":\"\"},{\"name\":\"Down (x)\",\"value\":\"x\"}],\"defaultIndex\":1},{\"name\":\"Master Control Panel\",\"type\":\"label\"},{\"name\":\"Set Total\",\"type\":\"number\",\"value\":0},{\"name\":\"Fast Step\",\"type\":\"option\",\"value\":[\"\",\"X1\",\"X2\",\"X3\",\"X4\",\"X5\",\"M37\",\"M61\",\"S1\",\"S2\",\"S3\",\"S4\",\"S5\"]},{\"name\":\"Slow Step\",\"type\":\"option\",\"value\":[\"\",\"X1\",\"X2\",\"X3\",\"X4\",\"X5\",\"M37\",\"M61\",\"S1\",\"S2\",\"S3\",\"S4\",\"S5\"]},{\"name\":\"Start Χ1\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Χ2\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Χ3\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Χ4\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Χ5\",\"type\":\"number\",\"value\":1},{\"name\":\"Start M61\",\"type\":\"number\",\"value\":1},{\"name\":\"Start M37\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Ψ1\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Ψ2\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Ψ3\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Ψ4\",\"type\":\"number\",\"value\":1},{\"name\":\"Start Ψ5\",\"type\":\"number\",\"value\":1}]},\"Comment\":{\"module\":\"Default\",\"description\":\"提供在流程中写注释的地方。此流程没有任何计算方面的效果。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"\",\"type\":\"text\",\"value\":\"\"}]},\"比较CTPH哈希值\":{\"module\":\"Crypto\",\"description\":\"比较两个基于内容分割的分片哈希（Context Triggered Piecewise Hashing, CTPH）模糊哈希值，并按相似度从0到100打分。\",\"infoURL\":\"https://forensics.wiki/context_triggered_piecewise_hashing/\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\"]}]},\"比较SSDEEP哈希值\":{\"module\":\"Crypto\",\"description\":\"比较两个SSDEEP模糊哈希值，并按相似度从0到100打分。\",\"infoURL\":\"https://forensics.wiki/ssdeep/\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\"]}]},\"Conditional Jump\":{\"module\":\"Default\",\"description\":\"按给定的条件（正则表达式）跳转到给定的标签位置。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"匹配规则（正则）\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"反向匹配\",\"type\":\"boolean\",\"value\":false},{\"name\":\"标签名称\",\"type\":\"shortString\",\"value\":\"\"},{\"name\":\"最大跳转次数（如果向后跳转）\",\"type\":\"number\",\"value\":10}]},\"容纳图像\":{\"module\":\"Image\",\"description\":\"将图像维持纵横比缩放并完整放置在指定宽高的图像区域中。图像可能会出现黑边。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"宽\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"高\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"水平对齐\",\"type\":\"option\",\"value\":[\"左对齐\",\"居中\",\"右对齐\"],\"defaultIndex\":1},{\"name\":\"垂直对齐\",\"type\":\"option\",\"value\":[\"顶端\",\"中间\",\"底端\"],\"defaultIndex\":1},{\"name\":\"缩放插值算法\",\"type\":\"option\",\"value\":[\"临近\",\"双线性\",\"双三次\",\"Hermite\",\"Bezier\"],\"defaultIndex\":1},{\"name\":\"不透明背景\",\"type\":\"boolean\",\"value\":true}]},\"单位转换：面积\":{\"module\":\"Default\",\"description\":\"转换面积单位。\",\"infoURL\":\"https://wikipedia.org/wiki/Orders_of_magnitude_(area)\",\"inputType\":\"BigNumber\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"平方米 (sq m)\",\"平方千米 (sq km)\",\"百分之一公亩 (ca)\",\"十分之一公亩 (da)\",\"公亩 (a)\",\"十公亩 (daa)\",\"公顷 (ha)\",\"[/公制]\",\"[英制]\",\"平方英寸 (sq in)\",\"平方英尺 (sq ft)\",\"平方码 (sq yd)\",\"平方英里 (sq mi)\",\"Perch (sq per)\",\"Rood (ro)\",\"英亩 (ac)\",\"[/英制]\",\"[美制]\",\"美国测量英亩 (ac)\",\"美国测量平方英里 (sq mi)\",\"US survey township\",\"[/美制]\",\"[核物理]\",\"幺靶 (yb)\",\"仄靶 (zb)\",\"阿靶 (ab)\",\"飞靶 (fb)\",\"皮靶 (pb)\",\"纳靶 (nb)\",\"微靶 (μb)\",\"毫靶 (mb)\",\"靶 (b)\",\"千靶 (kb)\",\"百万靶 (Mb)\",\"Outhouse\",\"Shed\",\"普朗克面积\",\"[/核物理]\",\"[尺寸比较]\",\"华盛顿特区\",\"怀特岛\",\"威尔士\",\"得克萨斯州\",\"[/尺寸比较]\"]},{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"平方米 (sq m)\",\"平方千米 (sq km)\",\"百分之一公亩 (ca)\",\"十分之一公亩 (da)\",\"公亩 (a)\",\"十公亩 (daa)\",\"公顷 (ha)\",\"[/公制]\",\"[英制]\",\"平方英寸 (sq in)\",\"平方英尺 (sq ft)\",\"平方码 (sq yd)\",\"平方英里 (sq mi)\",\"Perch (sq per)\",\"Rood (ro)\",\"英亩 (ac)\",\"[/英制]\",\"[美制]\",\"美国测量英亩 (ac)\",\"美国测量平方英里 (sq mi)\",\"US survey township\",\"[/美制]\",\"[核物理]\",\"幺靶 (yb)\",\"仄靶 (zb)\",\"阿靶 (ab)\",\"飞靶 (fb)\",\"皮靶 (pb)\",\"纳靶 (nb)\",\"微靶 (μb)\",\"毫靶 (mb)\",\"靶 (b)\",\"千靶 (kb)\",\"百万靶 (Mb)\",\"Outhouse\",\"Shed\",\"普朗克面积\",\"[/核物理]\",\"[尺寸比较]\",\"华盛顿特区\",\"怀特岛\",\"威尔士\",\"得克萨斯州\",\"[/尺寸比较]\"]}]},\"坐标格式转换\":{\"module\":\"Hashing\",\"description\":\"转换地理坐标格式。<br><br>支持的格式：<ul><li>度分秒 (DMS)</li><li>度分 (DDM)</li><li>度数 (DD)</li><li>Geohash</li><li>军事格网参考系统 (MGRS)</li><li>地形测量局国家格网参考系统 (OSNG)</li><li>通用横轴墨卡托投影 (UTM)</li></ul><br>此操作会尝试检测输入的坐标格式，但不保证正确。\",\"infoURL\":\"https://wikipedia.org/wiki/Geographic_coordinate_conversion\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"自动\",\"度分秒\",\"度分\",\"度数\",\"Geohash\",\"军事格网参考系统\",\"地形测量局国家格网参考系统\",\"通用横轴墨卡托投影\"]},{\"name\":\"输入分隔符\",\"type\":\"option\",\"value\":[\"自动\",\"方向在前\",\"方向在后\",\"\\\\n\",\"逗号\",\"分号\",\"冒号\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"度分秒\",\"度分\",\"度数\",\"Geohash\",\"军事格网参考系统\",\"地形测量局国家格网参考系统\",\"通用横轴墨卡托投影\"]},{\"name\":\"输出分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"\\\\n\",\"逗号\",\"分号\",\"冒号\"]},{\"name\":\"包括罗盘方向\",\"type\":\"option\",\"value\":[\"无\",\"在前\",\"在后\"]},{\"name\":\"精度\",\"type\":\"number\",\"value\":3}]},\"单位转换：数据\":{\"module\":\"Default\",\"description\":\"转换计算机数据单位。\",\"infoURL\":\"https://wikipedia.org/wiki/Orders_of_magnitude_(data)\",\"inputType\":\"BigNumber\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"比特 (b)\",\"四位元组 (Nibble)\",\"八位元组 (Octet)\",\"字节 (B)\",\"[二进制比特 (2^n)]\",\"千比特 (Kib)\",\"兆比特 (Mib)\",\"吉比特 (Gib)\",\"太比特 (Tib)\",\"拍比特 (Pib)\",\"艾比特 (Eib)\",\"泽比特 (Zib)\",\"尧比特 (Yib)\",\"[/二进制比特 (2^n)]\",\"[十进制比特 (10^n)]\",\"十比特\",\"百比特\",\"千比特 (Kb)\",\"兆比特 (Mb)\",\"吉比特 (Gb)\",\"太比特 (Tb)\",\"拍比特 (Pb)\",\"艾比特 (Eb)\",\"泽比特 (Zb)\",\"尧比特 (Yb)\",\"[/十进制比特 (10^n)]\",\"[二进制字节 (8 x 2^n)]\",\"千字节 (KiB)\",\"兆字节 (MiB)\",\"吉字节 (GiB)\",\"太字节 (TiB)\",\"拍字节 (PiB)\",\"艾字节 (EiB)\",\"泽字节 (ZiB)\",\"尧字节 (YiB)\",\"[/二进制字节 (8 x 2^n)]\",\"[十进制字节 (8 x 10^n)]\",\"千字节 (KB)\",\"兆字节 (MB)\",\"吉字节 (GB)\",\"太字节 (TB)\",\"拍字节 (PB)\",\"艾字节 (EB)\",\"泽字节 (ZB)\",\"尧字节 (YB)\",\"[/十进制字节 (8 x 10^n)]\"]},{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"比特 (b)\",\"四位元组 (Nibble)\",\"八位元组 (Octet)\",\"字节 (B)\",\"[二进制比特 (2^n)]\",\"千比特 (Kib)\",\"兆比特 (Mib)\",\"吉比特 (Gib)\",\"太比特 (Tib)\",\"拍比特 (Pib)\",\"艾比特 (Eib)\",\"泽比特 (Zib)\",\"尧比特 (Yib)\",\"[/二进制比特 (2^n)]\",\"[十进制比特 (10^n)]\",\"十比特\",\"百比特\",\"千比特 (Kb)\",\"兆比特 (Mb)\",\"吉比特 (Gb)\",\"太比特 (Tb)\",\"拍比特 (Pb)\",\"艾比特 (Eb)\",\"泽比特 (Zb)\",\"尧比特 (Yb)\",\"[/十进制比特 (10^n)]\",\"[二进制字节 (8 x 2^n)]\",\"千字节 (KiB)\",\"兆字节 (MiB)\",\"吉字节 (GiB)\",\"太字节 (TiB)\",\"拍字节 (PiB)\",\"艾字节 (EiB)\",\"泽字节 (ZiB)\",\"尧字节 (YiB)\",\"[/二进制字节 (8 x 2^n)]\",\"[十进制字节 (8 x 10^n)]\",\"千字节 (KB)\",\"兆字节 (MB)\",\"吉字节 (GB)\",\"太字节 (TB)\",\"拍字节 (PB)\",\"艾字节 (EB)\",\"泽字节 (ZB)\",\"尧字节 (YB)\",\"[/十进制字节 (8 x 10^n)]\"]}]},\"单位转换：距离\":{\"module\":\"Default\",\"description\":\"转换距离单位。\",\"infoURL\":\"https://wikipedia.org/wiki/Orders_of_magnitude_(length)\",\"inputType\":\"BigNumber\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"纳米 (nm)\",\"微米 (µm)\",\"毫米 (mm)\",\"厘米 (cm)\",\"米 (m)\",\"千米 (km)\",\"[/公制]\",\"[英制]\",\"英丝 (th)\",\"英寸 (in)\",\"英尺 (ft)\",\"码 (yd)\",\"链 (ch)\",\"浪 (fur)\",\"英里 (mi)\",\"里格 (lea)\",\"[/英制]\",\"[海洋]\",\"英寻 (ftm)\",\"链\",\"海里\",\"[/海洋]\",\"[尺寸比较]\",\"香蕉 (0.178m)\",\"汽车 (4m)\",\"公交车 (8.4m)\",\"橄榄球场 (91m)\",\"足球场 (105m)\",\"[/尺寸比较]\",\"[天文]\",\"地月距离\",\"赤道\",\"天文单位 (au)\",\"光年 (ly)\",\"秒差距 (pc)\",\"[/天文]\"]},{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"纳米 (nm)\",\"微米 (µm)\",\"毫米 (mm)\",\"厘米 (cm)\",\"米 (m)\",\"千米 (km)\",\"[/公制]\",\"[英制]\",\"英丝 (th)\",\"英寸 (in)\",\"英尺 (ft)\",\"码 (yd)\",\"链 (ch)\",\"浪 (fur)\",\"英里 (mi)\",\"里格 (lea)\",\"[/英制]\",\"[海洋]\",\"英寻 (ftm)\",\"链\",\"海里\",\"[/海洋]\",\"[尺寸比较]\",\"香蕉 (0.178m)\",\"汽车 (4m)\",\"公交车 (8.4m)\",\"橄榄球场 (91m)\",\"足球场 (105m)\",\"[/尺寸比较]\",\"[天文]\",\"地月距离\",\"赤道\",\"天文单位 (au)\",\"光年 (ly)\",\"秒差距 (pc)\",\"[/天文]\"]}]},\"图像格式转换\":{\"module\":\"Image\",\"description\":\"转换图像格式。支持的格式：<br><ul><li>Joint Photographic Experts Group (JPEG)</li><li>Portable Network Graphics (PNG)</li><li>Bitmap (BMP)</li><li>Tagged Image File Format (TIFF)</li></ul><br>注意：支持将GIF文件转换成其它格式，不支持转换成GIF。\",\"infoURL\":\"https://wikipedia.org/wiki/Image_file_formats\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"JPEG\",\"PNG\",\"BMP\",\"TIFF\"]},{\"name\":\"JPEG质量\",\"type\":\"number\",\"value\":80,\"min\":1,\"max\":100},{\"name\":\"PNG过滤类型\",\"type\":\"option\",\"value\":[\"Auto\",\"None\",\"Sub\",\"Up\",\"Average\",\"Paeth\"]},{\"name\":\"PNG Deflate等级\",\"type\":\"number\",\"value\":9,\"min\":0,\"max\":9}]},\"单位转换：质量\":{\"module\":\"Default\",\"description\":\"转换质量单位。\",\"infoURL\":\"https://wikipedia.org/wiki/Orders_of_magnitude_(mass)\",\"inputType\":\"BigNumber\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"幺克 (yg)\",\"仄克 (zg)\",\"阿克 (ag)\",\"飞克 (fg)\",\"皮克 (pg)\",\"纳克 (ng)\",\"微克 (μg)\",\"毫克 (mg)\",\"厘克 (cg)\",\"分克 (dg)\",\"克 (g)\",\"十克 (dag)\",\"百克 (hg)\",\"千克 (kg)\",\"兆克 (Mg)\",\"吨 (t)\",\"吉克 (Gg)\",\"太克 (Tg)\",\"拍克 (Pg)\",\"艾克 (Eg)\",\"泽克 (Zg)\",\"尧克 (Yg)\",\"[/公制]\",\"[常衡制]\",\"格令 (gr)\",\"打兰 (dr)\",\"盎司 (oz)\",\"磅 (lb)\",\"Nail\",\"英石 (st)\",\"夸脱 (gr)\",\"Tod\",\"短担 (cwt)\",\"长担 (cwt)\",\"短吨 (t)\",\"长吨 (t)\",\"[/常衡制]\",\"[金衡制]\",\"格令 (gr)\",\"英钱 (dwt)\",\"金衡制打兰 (dr t)\",\"金衡制盎司 (oz t)\",\"金衡制磅 (lb t)\",\"Mark\",\"[/金衡制]\",\"[过时单位]\",\"Wey\",\"Wool wey\",\"Suffolk wey\",\"Wool sack\",\"Coal sack\",\"Load\",\"Last\",\"Flax or feather last\",\"Gunpowder last\",\"Picul\",\"Rice last\",\"[/过时单位]\",\"[重量比较]\",\"大本钟 (14吨)\",\"蓝鲸 (180吨)\",\"国际空间站 (417吨)\",\"航天飞机 (2,041吨)\",\"泰坦尼克号 (52,000吨)\",\"吉萨金字塔群 (6,000,000吨)\",\"地球海洋 (1.4尧克)\",\"[/重量比较]\",\"[天文]\",\"一茶匙中子星 (55亿吨)\",\"月球质量 (ML)\",\"地球质量 (M⊕)\",\"木星质量 (MJ)\",\"太阳质量 (M☉)\",\"人马座A* (约7.5 x 10^36千克)\",\"银河系 (1.2 x 10^42 千克)\",\"可观测宇宙 (1.45 x 10^53 千克)\",\"[/天文]\"]},{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"幺克 (yg)\",\"仄克 (zg)\",\"阿克 (ag)\",\"飞克 (fg)\",\"皮克 (pg)\",\"纳克 (ng)\",\"微克 (μg)\",\"毫克 (mg)\",\"厘克 (cg)\",\"分克 (dg)\",\"克 (g)\",\"十克 (dag)\",\"百克 (hg)\",\"千克 (kg)\",\"兆克 (Mg)\",\"吨 (t)\",\"吉克 (Gg)\",\"太克 (Tg)\",\"拍克 (Pg)\",\"艾克 (Eg)\",\"泽克 (Zg)\",\"尧克 (Yg)\",\"[/公制]\",\"[常衡制]\",\"格令 (gr)\",\"打兰 (dr)\",\"盎司 (oz)\",\"磅 (lb)\",\"Nail\",\"英石 (st)\",\"夸脱 (gr)\",\"Tod\",\"短担 (cwt)\",\"长担 (cwt)\",\"短吨 (t)\",\"长吨 (t)\",\"[/常衡制]\",\"[金衡制]\",\"格令 (gr)\",\"英钱 (dwt)\",\"金衡制打兰 (dr t)\",\"金衡制盎司 (oz t)\",\"金衡制磅 (lb t)\",\"Mark\",\"[/金衡制]\",\"[过时单位]\",\"Wey\",\"Wool wey\",\"Suffolk wey\",\"Wool sack\",\"Coal sack\",\"Load\",\"Last\",\"Flax or feather last\",\"Gunpowder last\",\"Picul\",\"Rice last\",\"[/过时单位]\",\"[重量比较]\",\"大本钟 (14吨)\",\"蓝鲸 (180吨)\",\"国际空间站 (417吨)\",\"航天飞机 (2,041吨)\",\"泰坦尼克号 (52,000吨)\",\"吉萨金字塔群 (6,000,000吨)\",\"地球海洋 (1.4尧克)\",\"[/重量比较]\",\"[天文]\",\"一茶匙中子星 (55亿吨)\",\"月球质量 (ML)\",\"地球质量 (M⊕)\",\"木星质量 (MJ)\",\"太阳质量 (M☉)\",\"人马座A* (约7.5 x 10^36千克)\",\"银河系 (1.2 x 10^42 千克)\",\"可观测宇宙 (1.45 x 10^53 千克)\",\"[/天文]\"]}]},\"单位转换：速度\":{\"module\":\"Default\",\"description\":\"转换速度单位。\",\"infoURL\":\"https://wikipedia.org/wiki/Orders_of_magnitude_(speed)\",\"inputType\":\"BigNumber\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"米每秒 (m/s)\",\"千米每小时 (km/h)\",\"[/公制]\",\"[英制]\",\"英里每小时 (mph)\",\"节 (kn)\",\"[/英制]\",\"[速度比较]\",\"人类头发生长\",\"竹子生长\",\"世界上最快的蜗牛\",\"博尔特最高跑速\",\"喷气式客机巡航速度\",\"协和客机\",\"SR-71黑鸟式侦察机\",\"航天飞机\",\"国际空间站\",\"[/速度比较]\",\"[科学]\",\"标准大气压声速\",\"水中声速\",\"月球逃逸速度\",\"地球逃逸速度\",\"地球公转\",\"太阳系公转\",\"银河系相对宇宙背景辐射\",\"太阳逃逸速度\",\"中子星逃逸速度 (0.3c)\",\"钻石中光速 (0.4136c)\",\"光纤信号速度 (0.667c)\",\"光速 (c)\",\"[/科学]\"]},{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"[公制]\",\"米每秒 (m/s)\",\"千米每小时 (km/h)\",\"[/公制]\",\"[英制]\",\"英里每小时 (mph)\",\"节 (kn)\",\"[/英制]\",\"[速度比较]\",\"人类头发生长\",\"竹子生长\",\"世界上最快的蜗牛\",\"博尔特最高跑速\",\"喷气式客机巡航速度\",\"协和客机\",\"SR-71黑鸟式侦察机\",\"航天飞机\",\"国际空间站\",\"[/速度比较]\",\"[科学]\",\"标准大气压声速\",\"水中声速\",\"月球逃逸速度\",\"地球逃逸速度\",\"地球公转\",\"太阳系公转\",\"银河系相对宇宙背景辐射\",\"太阳逃逸速度\",\"中子星逃逸速度 (0.3c)\",\"钻石中光速 (0.4136c)\",\"光纤信号速度 (0.667c)\",\"光速 (c)\",\"[/科学]\"]}]},\"转换为北约音标字母\":{\"module\":\"Default\",\"description\":\"将字母转换为对应的北约音标字母代码。\",\"infoURL\":\"https://wikipedia.org/wiki/NATO_phonetic_alphabet\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"计数\":{\"module\":\"Default\",\"description\":\"计算给定字符串在输入内容中出现的次数\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"搜索字符串\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"正则\",\"扩展 (\\\\n, \\\\t, \\\\x...)\",\"普通字符串\"]}]},\"覆盖图像\":{\"module\":\"Image\",\"description\":\"将图像维持纵横比缩放到完整覆盖给定的宽高范围。图像可能会被裁剪。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"宽\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"高\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"水平对齐\",\"type\":\"option\",\"value\":[\"左对齐\",\"居中\",\"右对齐\"],\"defaultIndex\":1},{\"name\":\"垂直对齐\",\"type\":\"option\",\"value\":[\"顶端\",\"中间\",\"底端\"],\"defaultIndex\":1},{\"name\":\"缩放插值算法\",\"type\":\"option\",\"value\":[\"临近\",\"双线性\",\"双三次\",\"Hermite\",\"Bezier\"],\"defaultIndex\":1}]},\"裁剪图像\":{\"module\":\"Image\",\"description\":\"将图像裁剪到给定区域，或自动裁剪到边缘。<br><br><b><u>自动裁剪</u></b><br>自动按照图片中同一颜色的边框裁剪。<br><br><u>自动裁剪容错</u><br>指边框像素之间色差允许的最大百分比值。<br><br><u>仅自动裁剪完整边框</u><br>仅裁剪完整边框（四边边框相同）。<br><br><u>对称自动裁剪</u><br>强制进行对称的自动裁剪（上下和左右裁剪相同长度）。<br><br><u>自动裁剪保留边框</u><br>裁剪边框外保留的像素数。\",\"infoURL\":\"https://wikipedia.org/wiki/Cropping_(image)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"X坐标\",\"type\":\"number\",\"value\":0,\"min\":0},{\"name\":\"Y坐标\",\"type\":\"number\",\"value\":0,\"min\":0},{\"name\":\"宽度\",\"type\":\"number\",\"value\":10,\"min\":1},{\"name\":\"高度\",\"type\":\"number\",\"value\":10,\"min\":1},{\"name\":\"自动裁剪\",\"type\":\"boolean\",\"value\":false},{\"name\":\"自动裁剪容错 (%)\",\"type\":\"number\",\"value\":0.02,\"min\":0,\"max\":100,\"step\":0.01},{\"name\":\"仅自动裁剪完整边框\",\"type\":\"boolean\",\"value\":true},{\"name\":\"对称自动裁剪\",\"type\":\"boolean\",\"value\":false},{\"name\":\"自动裁剪保留边框 (px)\",\"type\":\"number\",\"value\":0,\"min\":0}]},\"DES解密\":{\"module\":\"Ciphers\",\"description\":\"数据加密标准（英语：Data Encryption Standard，缩写为 DES）是一种对称密钥加密块密码算法，1976年被美国联邦政府的国家标准局确定为联邦资料处理标准（FIPS），随后在国际上广泛流传开来。DES现在已经不是一种安全的加密方法，主要因为它使用的56位密钥过短。<br><br><b>Key：</b>DES的key长度为8字节（64位）。<br>三重DES的key长度为24字节（192位）。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV：</b>初始化向量的长度是8字节。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/Data_Encryption_Standard\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\",\"CBC/NoPadding\",\"ECB/NoPadding\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]}]},\"DES加密\":{\"module\":\"Ciphers\",\"description\":\"数据加密标准（英语：Data Encryption Standard，缩写为 DES）是一种对称密钥加密块密码算法，1976年被美国联邦政府的国家标准局确定为联邦资料处理标准（FIPS），随后在国际上广泛流传开来。DES现在已经不是一种安全的加密方法，主要因为它使用的56位密钥过短。<br><br><b>Key：</b>DES的key长度为8字节（64位）。<br>三重DES的key长度为24字节（192位）。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV：</b>初始化向量的长度是8字节。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/Data_Encryption_Standard\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]}]},\"DNS over HTTPS\":{\"module\":\"Default\",\"description\":\"使用 DNS over HTTPS 对给定域名发起DNS查询。\\n<br><br>\\n默认情况下，支持 <a href='https://developers.cloudflare.com/1.1.1.1/dns-over-https/'>Cloudflare</a> 和 <a href='https://developers.google.com/speed/public-dns/docs/dns-over-https'>Google</a> 的 DNS over HTTPS 服务。\\n<br><br>\\n可用于支持 GET 请求参数 <code>name</code> 和 <code>type</code> 的任意 DNS over HTTPS 服务器。\",\"infoURL\":\"https://wikipedia.org/wiki/DNS_over_HTTPS\",\"inputType\":\"string\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":true,\"args\":[{\"name\":\"解析服务器\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Google\",\"value\":\"https://dns.google.com/resolve\"},{\"name\":\"Cloudflare\",\"value\":\"https://cloudflare-dns.com/dns-query\"}]},{\"name\":\"查询类型\",\"type\":\"option\",\"value\":[\"A\",\"AAAA\",\"ANAME\",\"CERT\",\"CNAME\",\"DNSKEY\",\"HTTPS\",\"IPSECKEY\",\"LOC\",\"MX\",\"NS\",\"OPENPGPKEY\",\"PTR\",\"RRSIG\",\"SIG\",\"SOA\",\"SPF\",\"SRV\",\"SSHFP\",\"TA\",\"TXT\",\"URI\",\"ANY\"]},{\"name\":\"仅显示应答信息\",\"type\":\"boolean\",\"value\":false},{\"name\":\"禁用 DNSSEC 验证\",\"type\":\"boolean\",\"value\":false}]},\"DateTime推算\":{\"module\":\"Default\",\"description\":\"根据给定的DateTime值和相应的时间间隔（delta）推算新的DateTime值。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"预设格式\",\"type\":\"populateOption\",\"value\":[{\"name\":\"标准日期时间格式\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"美式日期时间格式\",\"value\":\"MM/DD/YYYY HH:mm:ss\"},{\"name\":\"国际日期时间格式\",\"value\":\"YYYY-MM-DD HH:mm:ss\"},{\"name\":\"详尽日期时间格式\",\"value\":\"dddd Do MMMM YYYY HH:mm:ss Z z\"},{\"name\":\"UNIX时间戳 (秒)\",\"value\":\"X\"},{\"name\":\"UNIX时间戳 (毫秒)\",\"value\":\"x\"},{\"name\":\"自动\",\"value\":\"\"}],\"target\":1},{\"name\":\"输入格式\",\"type\":\"binaryString\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"时间操作\",\"type\":\"option\",\"value\":[\"加\",\"减\"]},{\"name\":\"天\",\"type\":\"number\",\"value\":0},{\"name\":\"小时\",\"type\":\"number\",\"value\":0},{\"name\":\"分钟\",\"type\":\"number\",\"value\":0},{\"name\":\"秒\",\"type\":\"number\",\"value\":0}]},\"合并HTTP响应分块\":{\"module\":\"Default\",\"description\":\"对使用 Transfer-Encoding: Chunked 的HTTP响应内容进行合并。\",\"infoURL\":\"https://wikipedia.org/wiki/Chunked_transfer_encoding\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^[0-9A-F]+\\r\\n\",\"flags\":\"i\",\"args\":[]}]},\"NetBIOS名称解码\":{\"module\":\"Default\",\"description\":\"在客户端NetBIOS界面看到的NetBIOS名称长度固定为16字节。在NetBIOS-over-TCP协议中，使用一种更长的表示形式。<br><br>编码分为两层。第一层编码把NetBIOS名称映射到域名。第二层编码把域名编码为一种“压缩后”的形式，用于和DNS沟通。<br><br>此操作用于对第一层编码进行解码。详细信息请参考RFC 1001。\",\"infoURL\":\"https://wikipedia.org/wiki/NetBIOS\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":65}],\"checks\":[{\"pattern\":\"^\\\\s*\\\\S{32}$\",\"flags\":\"\",\"args\":[65]}]},\"文本解码\":{\"module\":\"Encodings\",\"description\":\"使用给定的字符集解码输入文本。\\n<br><br>\\n支持的字符集：\\n<ul>\\n<li>UTF-8 (65001)</li>\\n<li>UTF-7 (65000)</li>\\n<li>UTF-16LE (1200)</li>\\n<li>UTF-16BE (1201)</li>\\n<li>UTF-32LE (12000)</li>\\n<li>UTF-32BE (12001)</li>\\n<li>IBM EBCDIC International (500)</li>\\n<li>IBM EBCDIC US-Canada (37)</li>\\n<li>IBM EBCDIC Multilingual/ROECE (Latin 2) (870)</li>\\n<li>IBM EBCDIC Greek Modern (875)</li>\\n<li>IBM EBCDIC French (1010)</li>\\n<li>IBM EBCDIC Turkish (Latin 5) (1026)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047)</li>\\n<li>IBM EBCDIC Lao (1132/1133/1341)</li>\\n<li>IBM EBCDIC US-Canada (037 + Euro symbol) (1140)</li>\\n<li>IBM EBCDIC Germany (20273 + Euro symbol) (1141)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277 + Euro symbol) (1142)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278 + Euro symbol) (1143)</li>\\n<li>IBM EBCDIC Italy (20280 + Euro symbol) (1144)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284 + Euro symbol) (1145)</li>\\n<li>IBM EBCDIC United Kingdom (20285 + Euro symbol) (1146)</li>\\n<li>IBM EBCDIC France (20297 + Euro symbol) (1147)</li>\\n<li>IBM EBCDIC International (500 + Euro symbol) (1148)</li>\\n<li>IBM EBCDIC Icelandic (20871 + Euro symbol) (1149)</li>\\n<li>IBM EBCDIC Germany (20273)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278)</li>\\n<li>IBM EBCDIC Italy (20280)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284)</li>\\n<li>IBM EBCDIC United Kingdom (20285)</li>\\n<li>IBM EBCDIC Japanese Katakana Extended (20290)</li>\\n<li>IBM EBCDIC France (20297)</li>\\n<li>IBM EBCDIC Arabic (20420)</li>\\n<li>IBM EBCDIC Greek (20423)</li>\\n<li>IBM EBCDIC Hebrew (20424)</li>\\n<li>IBM EBCDIC Korean Extended (20833)</li>\\n<li>IBM EBCDIC Thai (20838)</li>\\n<li>IBM EBCDIC Icelandic (20871)</li>\\n<li>IBM EBCDIC Cyrillic Russian (20880)</li>\\n<li>IBM EBCDIC Turkish (20905)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047 + Euro symbol) (20924)</li>\\n<li>IBM EBCDIC Cyrillic Serbian-Bulgarian (21025)</li>\\n<li>OEM United States (437)</li>\\n<li>OEM Greek (formerly 437G); Greek (DOS) (737)</li>\\n<li>OEM Baltic; Baltic (DOS) (775)</li>\\n<li>OEM Russian; Cyrillic + Euro symbol (808)</li>\\n<li>OEM Multilingual Latin 1; Western European (DOS) (850)</li>\\n<li>OEM Latin 2; Central European (DOS) (852)</li>\\n<li>OEM Cyrillic (primarily Russian) (855)</li>\\n<li>OEM Turkish; Turkish (DOS) (857)</li>\\n<li>OEM Multilingual Latin 1 + Euro symbol (858)</li>\\n<li>OEM Portuguese; Portuguese (DOS) (860)</li>\\n<li>OEM Icelandic; Icelandic (DOS) (861)</li>\\n<li>OEM Hebrew; Hebrew (DOS) (862)</li>\\n<li>OEM French Canadian; French Canadian (DOS) (863)</li>\\n<li>OEM Arabic; Arabic (864) (864)</li>\\n<li>OEM Nordic; Nordic (DOS) (865)</li>\\n<li>OEM Russian; Cyrillic (DOS) (866)</li>\\n<li>OEM Modern Greek; Greek, Modern (DOS) (869)</li>\\n<li>OEM Cyrillic (primarily Russian) + Euro Symbol (872)</li>\\n<li>Windows-874 Thai (874)</li>\\n<li>Windows-1250 Central European (1250)</li>\\n<li>Windows-1251 Cyrillic (1251)</li>\\n<li>Windows-1252 Latin (1252)</li>\\n<li>Windows-1253 Greek (1253)</li>\\n<li>Windows-1254 Turkish (1254)</li>\\n<li>Windows-1255 Hebrew (1255)</li>\\n<li>Windows-1256 Arabic (1256)</li>\\n<li>Windows-1257 Baltic (1257)</li>\\n<li>Windows-1258 Vietnam (1258)</li>\\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\\n<li>ISO-8859-7 Latin/Greek (28597)</li>\\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\\n<li>ISO 8859-8 Hebrew (ISO-Logical) (38598)</li>\\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\\n<li>ISO-8859-11 Latin/Thai (28601)</li>\\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\\n<li>ISO-8859-15 Latin 9 (28605)</li>\\n<li>ISO-8859-16 Latin 10 (28606)</li>\\n<li>ISO 2022 JIS Japanese with no halfwidth Katakana (50220)</li>\\n<li>ISO 2022 JIS Japanese with halfwidth Katakana (50221)</li>\\n<li>ISO 2022 Japanese JIS X 0201-1989 (1 byte Kana-SO/SI) (50222)</li>\\n<li>ISO 2022 Korean (50225)</li>\\n<li>ISO 2022 Simplified Chinese (50227)</li>\\n<li>ISO 6937 Non-Spacing Accent (20269)</li>\\n<li>EUC Japanese (51932)</li>\\n<li>EUC Simplified Chinese (51936)</li>\\n<li>EUC Korean (51949)</li>\\n<li>ISCII Devanagari (57002)</li>\\n<li>ISCII Bengali (57003)</li>\\n<li>ISCII Tamil (57004)</li>\\n<li>ISCII Telugu (57005)</li>\\n<li>ISCII Assamese (57006)</li>\\n<li>ISCII Oriya (57007)</li>\\n<li>ISCII Kannada (57008)</li>\\n<li>ISCII Malayalam (57009)</li>\\n<li>ISCII Gujarati (57010)</li>\\n<li>ISCII Punjabi (57011)</li>\\n<li>Japanese Shift-JIS (932)</li>\\n<li>简体中文 GBK (936)</li>\\n<li>Korean (949)</li>\\n<li>繁体中文 Big5 (950)</li>\\n<li>US-ASCII (7-bit) (20127)</li>\\n<li>简体中文 GB2312 (20936)</li>\\n<li>KOI8-R Russian Cyrillic (20866)</li>\\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\\n<li>Mazovia (Polish) MS-DOS (620)</li>\\n<li>Arabic (ASMO 708) (708)</li>\\n<li>Arabic (Transparent ASMO); Arabic (DOS) (720)</li>\\n<li>Kamenický (Czech) MS-DOS (895)</li>\\n<li>Korean (Johab) (1361)</li>\\n<li>MAC Roman (10000)</li>\\n<li>Japanese (Mac) (10001)</li>\\n<li>MAC繁体中文 (Big5) (10002)</li>\\n<li>Korean (Mac) (10003)</li>\\n<li>Arabic (Mac) (10004)</li>\\n<li>Hebrew (Mac) (10005)</li>\\n<li>Greek (Mac) (10006)</li>\\n<li>Cyrillic (Mac) (10007)</li>\\n<li>MAC简体中文 (GB 2312) (10008)</li>\\n<li>Romanian (Mac) (10010)</li>\\n<li>Ukrainian (Mac) (10017)</li>\\n<li>Thai (Mac) (10021)</li>\\n<li>MAC Latin 2 (Central European) (10029)</li>\\n<li>Icelandic (Mac) (10079)</li>\\n<li>Turkish (Mac) (10081)</li>\\n<li>Croatian (Mac) (10082)</li>\\n<li>CNS Taiwan (Chinese Traditional) (20000)</li>\\n<li>TCA Taiwan (20001)</li>\\n<li>ETEN Taiwan (Chinese Traditional) (20002)</li>\\n<li>IBM5550 Taiwan (20003)</li>\\n<li>TeleText Taiwan (20004)</li>\\n<li>Wang Taiwan (20005)</li>\\n<li>Western European IA5 (IRV International Alphabet 5) (20105)</li>\\n<li>IA5 German (7-bit) (20106)</li>\\n<li>IA5 Swedish (7-bit) (20107)</li>\\n<li>IA5 Norwegian (7-bit) (20108)</li>\\n<li>T.61 (20261)</li>\\n<li>Japanese (JIS 0208-1990 and 0212-1990) (20932)</li>\\n<li>Korean Wansung (20949)</li>\\n<li>Extended/Ext Alpha Lowercase (21027)</li>\\n<li>Europa 3 (29001)</li>\\n<li>Atari ST/TT (47451)</li>\\n<li>HZ-GB2312 简体中文 (52936)</li>\\n<li>简体中文 GB18030 (54936)</li>\\n</ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Character_encoding\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字符集\",\"type\":\"option\",\"value\":[\"UTF-8 (65001)\",\"UTF-7 (65000)\",\"UTF-16LE (1200)\",\"UTF-16BE (1201)\",\"UTF-32LE (12000)\",\"UTF-32BE (12001)\",\"IBM EBCDIC International (500)\",\"IBM EBCDIC US-Canada (37)\",\"IBM EBCDIC Multilingual/ROECE (Latin 2) (870)\",\"IBM EBCDIC Greek Modern (875)\",\"IBM EBCDIC French (1010)\",\"IBM EBCDIC Turkish (Latin 5) (1026)\",\"IBM EBCDIC Latin 1/Open System (1047)\",\"IBM EBCDIC Lao (1132/1133/1341)\",\"IBM EBCDIC US-Canada (037 + Euro symbol) (1140)\",\"IBM EBCDIC Germany (20273 + Euro symbol) (1141)\",\"IBM EBCDIC Denmark-Norway (20277 + Euro symbol) (1142)\",\"IBM EBCDIC Finland-Sweden (20278 + Euro symbol) (1143)\",\"IBM EBCDIC Italy (20280 + Euro symbol) (1144)\",\"IBM EBCDIC Latin America-Spain (20284 + Euro symbol) (1145)\",\"IBM EBCDIC United Kingdom (20285 + Euro symbol) (1146)\",\"IBM EBCDIC France (20297 + Euro symbol) (1147)\",\"IBM EBCDIC International (500 + Euro symbol) (1148)\",\"IBM EBCDIC Icelandic (20871 + Euro symbol) (1149)\",\"IBM EBCDIC Germany (20273)\",\"IBM EBCDIC Denmark-Norway (20277)\",\"IBM EBCDIC Finland-Sweden (20278)\",\"IBM EBCDIC Italy (20280)\",\"IBM EBCDIC Latin America-Spain (20284)\",\"IBM EBCDIC United Kingdom (20285)\",\"IBM EBCDIC Japanese Katakana Extended (20290)\",\"IBM EBCDIC France (20297)\",\"IBM EBCDIC Arabic (20420)\",\"IBM EBCDIC Greek (20423)\",\"IBM EBCDIC Hebrew (20424)\",\"IBM EBCDIC Korean Extended (20833)\",\"IBM EBCDIC Thai (20838)\",\"IBM EBCDIC Icelandic (20871)\",\"IBM EBCDIC Cyrillic Russian (20880)\",\"IBM EBCDIC Turkish (20905)\",\"IBM EBCDIC Latin 1/Open System (1047 + Euro symbol) (20924)\",\"IBM EBCDIC Cyrillic Serbian-Bulgarian (21025)\",\"OEM United States (437)\",\"OEM Greek (formerly 437G); Greek (DOS) (737)\",\"OEM Baltic; Baltic (DOS) (775)\",\"OEM Russian; Cyrillic + Euro symbol (808)\",\"OEM Multilingual Latin 1; Western European (DOS) (850)\",\"OEM Latin 2; Central European (DOS) (852)\",\"OEM Cyrillic (primarily Russian) (855)\",\"OEM Turkish; Turkish (DOS) (857)\",\"OEM Multilingual Latin 1 + Euro symbol (858)\",\"OEM Portuguese; Portuguese (DOS) (860)\",\"OEM Icelandic; Icelandic (DOS) (861)\",\"OEM Hebrew; Hebrew (DOS) (862)\",\"OEM French Canadian; French Canadian (DOS) (863)\",\"OEM Arabic; Arabic (864) (864)\",\"OEM Nordic; Nordic (DOS) (865)\",\"OEM Russian; Cyrillic (DOS) (866)\",\"OEM Modern Greek; Greek, Modern (DOS) (869)\",\"OEM Cyrillic (primarily Russian) + Euro Symbol (872)\",\"Windows-874 Thai (874)\",\"Windows-1250 Central European (1250)\",\"Windows-1251 Cyrillic (1251)\",\"Windows-1252 Latin (1252)\",\"Windows-1253 Greek (1253)\",\"Windows-1254 Turkish (1254)\",\"Windows-1255 Hebrew (1255)\",\"Windows-1256 Arabic (1256)\",\"Windows-1257 Baltic (1257)\",\"Windows-1258 Vietnam (1258)\",\"ISO-8859-1 Latin 1 Western European (28591)\",\"ISO-8859-2 Latin 2 Central European (28592)\",\"ISO-8859-3 Latin 3 South European (28593)\",\"ISO-8859-4 Latin 4 North European (28594)\",\"ISO-8859-5 Latin/Cyrillic (28595)\",\"ISO-8859-6 Latin/Arabic (28596)\",\"ISO-8859-7 Latin/Greek (28597)\",\"ISO-8859-8 Latin/Hebrew (28598)\",\"ISO 8859-8 Hebrew (ISO-Logical) (38598)\",\"ISO-8859-9 Latin 5 Turkish (28599)\",\"ISO-8859-10 Latin 6 Nordic (28600)\",\"ISO-8859-11 Latin/Thai (28601)\",\"ISO-8859-13 Latin 7 Baltic Rim (28603)\",\"ISO-8859-14 Latin 8 Celtic (28604)\",\"ISO-8859-15 Latin 9 (28605)\",\"ISO-8859-16 Latin 10 (28606)\",\"ISO 2022 JIS Japanese with no halfwidth Katakana (50220)\",\"ISO 2022 JIS Japanese with halfwidth Katakana (50221)\",\"ISO 2022 Japanese JIS X 0201-1989 (1 byte Kana-SO/SI) (50222)\",\"ISO 2022 Korean (50225)\",\"ISO 2022 Simplified Chinese (50227)\",\"ISO 6937 Non-Spacing Accent (20269)\",\"EUC Japanese (51932)\",\"EUC Simplified Chinese (51936)\",\"EUC Korean (51949)\",\"ISCII Devanagari (57002)\",\"ISCII Bengali (57003)\",\"ISCII Tamil (57004)\",\"ISCII Telugu (57005)\",\"ISCII Assamese (57006)\",\"ISCII Oriya (57007)\",\"ISCII Kannada (57008)\",\"ISCII Malayalam (57009)\",\"ISCII Gujarati (57010)\",\"ISCII Punjabi (57011)\",\"Japanese Shift-JIS (932)\",\"简体中文 GBK (936)\",\"Korean (949)\",\"繁体中文 Big5 (950)\",\"US-ASCII (7-bit) (20127)\",\"简体中文 GB2312 (20936)\",\"KOI8-R Russian Cyrillic (20866)\",\"KOI8-U Ukrainian Cyrillic (21866)\",\"Mazovia (Polish) MS-DOS (620)\",\"Arabic (ASMO 708) (708)\",\"Arabic (Transparent ASMO); Arabic (DOS) (720)\",\"Kamenický (Czech) MS-DOS (895)\",\"Korean (Johab) (1361)\",\"MAC Roman (10000)\",\"Japanese (Mac) (10001)\",\"MAC繁体中文 (Big5) (10002)\",\"Korean (Mac) (10003)\",\"Arabic (Mac) (10004)\",\"Hebrew (Mac) (10005)\",\"Greek (Mac) (10006)\",\"Cyrillic (Mac) (10007)\",\"MAC简体中文 (GB 2312) (10008)\",\"Romanian (Mac) (10010)\",\"Ukrainian (Mac) (10017)\",\"Thai (Mac) (10021)\",\"MAC Latin 2 (Central European) (10029)\",\"Icelandic (Mac) (10079)\",\"Turkish (Mac) (10081)\",\"Croatian (Mac) (10082)\",\"CNS Taiwan (Chinese Traditional) (20000)\",\"TCA Taiwan (20001)\",\"ETEN Taiwan (Chinese Traditional) (20002)\",\"IBM5550 Taiwan (20003)\",\"TeleText Taiwan (20004)\",\"Wang Taiwan (20005)\",\"Western European IA5 (IRV International Alphabet 5) (20105)\",\"IA5 German (7-bit) (20106)\",\"IA5 Swedish (7-bit) (20107)\",\"IA5 Norwegian (7-bit) (20108)\",\"T.61 (20261)\",\"Japanese (JIS 0208-1990 and 0212-1990) (20932)\",\"Korean Wansung (20949)\",\"Extended/Ext Alpha Lowercase (21027)\",\"Europa 3 (29001)\",\"Atari ST/TT (47451)\",\"HZ-GB2312 简体中文 (52936)\",\"简体中文 GB18030 (54936)\"]}]},\"IP地址无效化\":{\"module\":\"Default\",\"description\":\"对输入的IPv4或IPv6地址进行无效化（“Defang”）操作，防止误使用或配置此IP。\",\"infoURL\":\"https://isc.sans.edu/forums/diary/Defang+all+the+things/22744/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^\\\\s*(([0-9]{1,3}\\\\.){3}[0-9]{1,3}|([0-9a-f]{4}:){7}[0-9a-f]{4})\\\\s*$\",\"flags\":\"i\",\"args\":[],\"output\":{\"pattern\":\"^\\\\s*(([0-9]{1,3}\\\\[\\\\.\\\\]){3}[0-9]{1,3}|([0-9a-f]{4}\\\\[\\\\:\\\\]){7}[0-9a-f]{4})\\\\s*$\",\"flags\":\"i\"}}]},\"URL无效化\":{\"module\":\"Default\",\"description\":\"对给定URL进行“无效化（Defang）”操作；意味着URL从形式上被失效，防止误点击有害网址。<br><br>通常用于有害网址和IOC（Indicator of compromise）。<br><br>可与“提取URL”操作配合生成安全的URL列表。\",\"infoURL\":\"https://isc.sans.edu/forums/diary/Defang+all+the+things/22744/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"转义“点”\",\"type\":\"boolean\",\"value\":true},{\"name\":\"转义“http”\",\"type\":\"boolean\",\"value\":true},{\"name\":\"转义“://”\",\"type\":\"boolean\",\"value\":true},{\"name\":\"处理类型\",\"type\":\"option\",\"value\":[\"有效的域名和完整URL\",\"仅无效化完整URL\",\"所有匹配内容\"]}]},\"派生EVP密钥\":{\"module\":\"Ciphers\",\"description\":\"EVP Key Derivation是在OpenSSL中广泛使用的基于口令的密钥派生算法（PBKDF）。在许多加密场景中，用户的数据安全最终取决于密码，但密码通常不能被直接当作加密密钥使用，因此需要一些对应的处理方法来生成密钥。<br><br>对于给定的任意单一密码，通过加盐产生多个不同密钥，然后通过迭代次数提高计算密钥的成本，可以让攻击变得愈发困难。<br><br>如果盐留空，会随机产生一个字符串作为盐使用。\",\"infoURL\":\"https://wikipedia.org/wiki/Key_derivation_function\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"口令\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"Latin1\",\"十六进制\",\"Base64\"]},{\"name\":\"Key大小\",\"type\":\"number\",\"value\":128},{\"name\":\"迭代次数\",\"type\":\"number\",\"value\":1},{\"name\":\"哈希函数\",\"type\":\"option\",\"value\":[\"SHA1\",\"SHA256\",\"SHA384\",\"SHA512\",\"MD5\"]},{\"name\":\"盐\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]}]},\"派生HKDF密钥\":{\"module\":\"Crypto\",\"description\":\"一个简单的基于Hashed Message Authenticaton Code (HMAC)的密钥派生算法(HKDF)。定义于RFC5869。\",\"infoURL\":\"https://wikipedia.org/wiki/HKDF\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"盐\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"十进制\",\"Base64\",\"UTF8\",\"Latin1\"]},{\"name\":\"信息\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"十进制\",\"Base64\",\"UTF8\",\"Latin1\"]},{\"name\":\"哈希函数\",\"type\":\"option\",\"value\":[\"MD2\",\"MD4\",\"MD5\",\"SHA0\",\"SHA1\",\"SHA224\",\"SHA256\",\"SHA384\",\"SHA512\",\"SHA512/224\",\"SHA512/256\",\"RIPEMD128\",\"RIPEMD160\",\"RIPEMD256\",\"RIPEMD320\",\"HAS160\",\"Whirlpool\",\"Whirlpool-0\",\"Whirlpool-T\",\"Snefru\"],\"defaultIndex\":6},{\"name\":\"提取模式\",\"type\":\"argSelector\",\"value\":[{\"name\":\"加盐\",\"on\":[0]},{\"name\":\"不加盐\",\"off\":[0]},{\"name\":\"跳过\",\"off\":[0]}]},{\"name\":\"L (输出的八比特组数)\",\"type\":\"number\",\"value\":16,\"min\":0}]},\"派生PBKDF2密钥\":{\"module\":\"Ciphers\",\"description\":\"PBKDF2是基于口令的密钥派生算法。它是RSA Laboratories的公钥密码学标准（PKCS）中的一部分。包括PBKDF2在内的PKCS #5 v2.0版本已被IETF作为RFC 2898发布。<br><br>在许多加密场景中，用户的数据安全最终取决于密码，但密码通常不能被直接当作加密密钥使用，因此需要一些对应的处理方法来生成密钥。<br><br>对于给定的任意单一密码，通过加盐产生多个不同密钥，然后通过迭代次数提高计算密钥的成本，可以让攻击变得愈发困难。<br><br>如果盐留空，会随机产生一个字符串作为盐使用。\",\"infoURL\":\"https://wikipedia.org/wiki/PBKDF2\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"口令\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"Latin1\",\"十六进制\",\"Base64\"]},{\"name\":\"Key大小\",\"type\":\"number\",\"value\":128},{\"name\":\"迭代次数\",\"type\":\"number\",\"value\":1},{\"name\":\"哈希函数\",\"type\":\"option\",\"value\":[\"SHA1\",\"SHA256\",\"SHA384\",\"SHA512\",\"MD5\"]},{\"name\":\"盐\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]}]},\"检测文件类型\":{\"module\":\"Default\",\"description\":\"尝试根据文件的“魔术字节（Magic Bytes）”猜测数据的 MIME (Multipurpose Internet Mail Extensions) 类型。<br><br>目前支持以下文件类型：123d, 7z, B64, abcdp, accda, accdb, accde, accdu, ace, ai, aif, aifc, alz, amr, arj, arw, au, auf, avi, axf, bash, bct, bin, bitlocker, bk!, bmp, bplist, bz2, cab, cat, cer, chi, chm, chw, class, com, cr2, crl, crt, crw, crx, db, dbx, deb, der, dex, dll, dmf, dmg, dmp, doc, docx, dot, drv, dwg, dwt, dylib, edb, elf, eot, eps, epub, evt, evtx, exe, f4v, fdb, flac, flv, fon, gif, gpg, gz, hbin, hdr, heic, heif, hqx, ichat, ico, ipmeta, iso, jar, job, jpe, jpeg, jpg, jxr, keychain, kgb, lnk, luac, lzo, lzop, m4a, m4v, mda, mdb, mdbackup, mde, mdi, mdinfo, mdt, midi, mkv, mov, mp3, mp4, mpg, mpo, mrw, msg, msi, nib, o, ocx, ogg, ogm, ogv, ogx, ole2, one, opus, ost, otf, p7b, p7c, p7m, p7s, pab, pdf, pf, pfa, pgd, phar, php, php-s, php3, php4, php5, php7, phps, pht, phtml, pkr, pl, plist, pm, png, pod, pot, ppa, pps, ppt, pptx, prx, ps, psa, psb, psd, psp, pst, pwl, py, pyc, pyd, pyo, pyw, pyz, qtz, raf, rar, rb, registry, rgs, rsa, rtf, scr, sdw, sh, skr, sml, so, sqlite, strings, swf, swz, sys, t, tar, tar.z, tcp, tga, thm, tif, torrent, ttf, txt, udp, utf16le, utf32le, vbx, vhd, vmdk, vsd, vxd, wallet, wasm, wav, wcm, webbookmark, webhistory, webm, webp, wmv, woff, woff2, wp, wp5, wp6, wpd, wpp, xcf, xla, xls, xlsx, xz, zip, zlib.\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_file_signatures\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"图片\",\"type\":\"boolean\",\"value\":true},{\"name\":\"视频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"音频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"文档\",\"type\":\"boolean\",\"value\":true},{\"name\":\"应用\",\"type\":\"boolean\",\"value\":true},{\"name\":\"Archives\",\"type\":\"boolean\",\"value\":true},{\"name\":\"其它\",\"type\":\"boolean\",\"value\":true}]},\"Diff\":{\"module\":\"Diff\",\"description\":\"比较两个输入内容（分隔符自选）并高亮显示之间的差异。\",\"infoURL\":\"https://wikipedia.org/wiki/File_comparison\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"内容分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"Diff粒度\",\"type\":\"option\",\"value\":[\"字符\",\"单词\",\"行\",\"句子\",\"CSS\",\"JSON\"]},{\"name\":\"显示增加部分\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示删除部分\",\"type\":\"boolean\",\"value\":true},{\"name\":\"仅显示差异部分\",\"type\":\"boolean\",\"value\":false},{\"name\":\"忽略空白字符\",\"type\":\"boolean\",\"value\":false,\"hint\":\"适用于按单词或按行Diff\"}]},\"x86反汇编\":{\"module\":\"Shellcode\",\"description\":\"反汇编是把机器语言翻译回汇编语言的过程。<br><br>此操作支持Intel和AMD x86处理器的64位、32位和16位代码。在反向工程shellcode的时候特别有用。<br><br>输入必须为十六进制。\",\"infoURL\":\"https://wikipedia.org/wiki/X86\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"位模式\",\"type\":\"option\",\"value\":[\"64\",\"32\",\"16\"]},{\"name\":\"兼容性\",\"type\":\"option\",\"value\":[\"Full x86 architecture\",\"Knights Corner\",\"Larrabee\",\"Cyrix\",\"Geode\",\"Centaur\",\"X86/486\"]},{\"name\":\"Code Segment (CS)\",\"type\":\"number\",\"value\":16},{\"name\":\"Offset (IP)\",\"type\":\"number\",\"value\":0},{\"name\":\"显示指令十六进制\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示指令位置\",\"type\":\"boolean\",\"value\":true}]},\"抖动图像\":{\"module\":\"Image\",\"description\":\"给图像添加抖动效果。\",\"infoURL\":\"https://wikipedia.org/wiki/Dither\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"求商\":{\"module\":\"Default\",\"description\":\"对一组数字求商（aka. 除法）。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5</code> 计算为 <code>2.5</code>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"删除字节\":{\"module\":\"Default\",\"description\":\"从数据中移除给定位置的字节。允许使用负数值。\",\"infoURL\":null,\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"起始位置\",\"type\":\"number\",\"value\":0},{\"name\":\"长度\",\"type\":\"number\",\"value\":5},{\"name\":\"对每一行单独进行删除\",\"type\":\"boolean\",\"value\":false}]},\"ELF信息\":{\"module\":\"Default\",\"description\":\"类似于readelf，此操作可提取ELF文件的ELF Header、Program Header、Section Header和Symbol Table。\",\"infoURL\":\"https://www.wikipedia.org/wiki/Executable_and_Linkable_Format\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"NetBIOS名称编码\":{\"module\":\"Default\",\"description\":\"在客户端NetBIOS界面看到的NetBIOS名称长度固定为16字节。在NetBIOS-over-TCP协议中，使用一种更长的表示形式。<br><br>编码分为两层。第一层编码把NetBIOS名称映射到域名。第二层编码把域名编码为一种“压缩后”的形式，用于和DNS沟通。<br><br>此操作进行第一层编码。详细信息请参考RFC 1001。\",\"infoURL\":\"https://wikipedia.org/wiki/NetBIOS\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":65}]},\"文本编码\":{\"module\":\"Encodings\",\"description\":\"使用选择的字符集对文本进行编码。\\n<br><br>\\n支持的字符集：\\n<ul>\\n<li>UTF-8 (65001)</li>\\n<li>UTF-7 (65000)</li>\\n<li>UTF-16LE (1200)</li>\\n<li>UTF-16BE (1201)</li>\\n<li>UTF-32LE (12000)</li>\\n<li>UTF-32BE (12001)</li>\\n<li>IBM EBCDIC International (500)</li>\\n<li>IBM EBCDIC US-Canada (37)</li>\\n<li>IBM EBCDIC Multilingual/ROECE (Latin 2) (870)</li>\\n<li>IBM EBCDIC Greek Modern (875)</li>\\n<li>IBM EBCDIC French (1010)</li>\\n<li>IBM EBCDIC Turkish (Latin 5) (1026)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047)</li>\\n<li>IBM EBCDIC Lao (1132/1133/1341)</li>\\n<li>IBM EBCDIC US-Canada (037 + Euro symbol) (1140)</li>\\n<li>IBM EBCDIC Germany (20273 + Euro symbol) (1141)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277 + Euro symbol) (1142)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278 + Euro symbol) (1143)</li>\\n<li>IBM EBCDIC Italy (20280 + Euro symbol) (1144)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284 + Euro symbol) (1145)</li>\\n<li>IBM EBCDIC United Kingdom (20285 + Euro symbol) (1146)</li>\\n<li>IBM EBCDIC France (20297 + Euro symbol) (1147)</li>\\n<li>IBM EBCDIC International (500 + Euro symbol) (1148)</li>\\n<li>IBM EBCDIC Icelandic (20871 + Euro symbol) (1149)</li>\\n<li>IBM EBCDIC Germany (20273)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278)</li>\\n<li>IBM EBCDIC Italy (20280)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284)</li>\\n<li>IBM EBCDIC United Kingdom (20285)</li>\\n<li>IBM EBCDIC Japanese Katakana Extended (20290)</li>\\n<li>IBM EBCDIC France (20297)</li>\\n<li>IBM EBCDIC Arabic (20420)</li>\\n<li>IBM EBCDIC Greek (20423)</li>\\n<li>IBM EBCDIC Hebrew (20424)</li>\\n<li>IBM EBCDIC Korean Extended (20833)</li>\\n<li>IBM EBCDIC Thai (20838)</li>\\n<li>IBM EBCDIC Icelandic (20871)</li>\\n<li>IBM EBCDIC Cyrillic Russian (20880)</li>\\n<li>IBM EBCDIC Turkish (20905)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047 + Euro symbol) (20924)</li>\\n<li>IBM EBCDIC Cyrillic Serbian-Bulgarian (21025)</li>\\n<li>OEM United States (437)</li>\\n<li>OEM Greek (formerly 437G); Greek (DOS) (737)</li>\\n<li>OEM Baltic; Baltic (DOS) (775)</li>\\n<li>OEM Russian; Cyrillic + Euro symbol (808)</li>\\n<li>OEM Multilingual Latin 1; Western European (DOS) (850)</li>\\n<li>OEM Latin 2; Central European (DOS) (852)</li>\\n<li>OEM Cyrillic (primarily Russian) (855)</li>\\n<li>OEM Turkish; Turkish (DOS) (857)</li>\\n<li>OEM Multilingual Latin 1 + Euro symbol (858)</li>\\n<li>OEM Portuguese; Portuguese (DOS) (860)</li>\\n<li>OEM Icelandic; Icelandic (DOS) (861)</li>\\n<li>OEM Hebrew; Hebrew (DOS) (862)</li>\\n<li>OEM French Canadian; French Canadian (DOS) (863)</li>\\n<li>OEM Arabic; Arabic (864) (864)</li>\\n<li>OEM Nordic; Nordic (DOS) (865)</li>\\n<li>OEM Russian; Cyrillic (DOS) (866)</li>\\n<li>OEM Modern Greek; Greek, Modern (DOS) (869)</li>\\n<li>OEM Cyrillic (primarily Russian) + Euro Symbol (872)</li>\\n<li>Windows-874 Thai (874)</li>\\n<li>Windows-1250 Central European (1250)</li>\\n<li>Windows-1251 Cyrillic (1251)</li>\\n<li>Windows-1252 Latin (1252)</li>\\n<li>Windows-1253 Greek (1253)</li>\\n<li>Windows-1254 Turkish (1254)</li>\\n<li>Windows-1255 Hebrew (1255)</li>\\n<li>Windows-1256 Arabic (1256)</li>\\n<li>Windows-1257 Baltic (1257)</li>\\n<li>Windows-1258 Vietnam (1258)</li>\\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\\n<li>ISO-8859-7 Latin/Greek (28597)</li>\\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\\n<li>ISO 8859-8 Hebrew (ISO-Logical) (38598)</li>\\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\\n<li>ISO-8859-11 Latin/Thai (28601)</li>\\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\\n<li>ISO-8859-15 Latin 9 (28605)</li>\\n<li>ISO-8859-16 Latin 10 (28606)</li>\\n<li>ISO 2022 JIS Japanese with no halfwidth Katakana (50220)</li>\\n<li>ISO 2022 JIS Japanese with halfwidth Katakana (50221)</li>\\n<li>ISO 2022 Japanese JIS X 0201-1989 (1 byte Kana-SO/SI) (50222)</li>\\n<li>ISO 2022 Korean (50225)</li>\\n<li>ISO 2022 Simplified Chinese (50227)</li>\\n<li>ISO 6937 Non-Spacing Accent (20269)</li>\\n<li>EUC Japanese (51932)</li>\\n<li>EUC Simplified Chinese (51936)</li>\\n<li>EUC Korean (51949)</li>\\n<li>ISCII Devanagari (57002)</li>\\n<li>ISCII Bengali (57003)</li>\\n<li>ISCII Tamil (57004)</li>\\n<li>ISCII Telugu (57005)</li>\\n<li>ISCII Assamese (57006)</li>\\n<li>ISCII Oriya (57007)</li>\\n<li>ISCII Kannada (57008)</li>\\n<li>ISCII Malayalam (57009)</li>\\n<li>ISCII Gujarati (57010)</li>\\n<li>ISCII Punjabi (57011)</li>\\n<li>Japanese Shift-JIS (932)</li>\\n<li>简体中文 GBK (936)</li>\\n<li>Korean (949)</li>\\n<li>繁体中文 Big5 (950)</li>\\n<li>US-ASCII (7-bit) (20127)</li>\\n<li>简体中文 GB2312 (20936)</li>\\n<li>KOI8-R Russian Cyrillic (20866)</li>\\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\\n<li>Mazovia (Polish) MS-DOS (620)</li>\\n<li>Arabic (ASMO 708) (708)</li>\\n<li>Arabic (Transparent ASMO); Arabic (DOS) (720)</li>\\n<li>Kamenický (Czech) MS-DOS (895)</li>\\n<li>Korean (Johab) (1361)</li>\\n<li>MAC Roman (10000)</li>\\n<li>Japanese (Mac) (10001)</li>\\n<li>MAC繁体中文 (Big5) (10002)</li>\\n<li>Korean (Mac) (10003)</li>\\n<li>Arabic (Mac) (10004)</li>\\n<li>Hebrew (Mac) (10005)</li>\\n<li>Greek (Mac) (10006)</li>\\n<li>Cyrillic (Mac) (10007)</li>\\n<li>MAC简体中文 (GB 2312) (10008)</li>\\n<li>Romanian (Mac) (10010)</li>\\n<li>Ukrainian (Mac) (10017)</li>\\n<li>Thai (Mac) (10021)</li>\\n<li>MAC Latin 2 (Central European) (10029)</li>\\n<li>Icelandic (Mac) (10079)</li>\\n<li>Turkish (Mac) (10081)</li>\\n<li>Croatian (Mac) (10082)</li>\\n<li>CNS Taiwan (Chinese Traditional) (20000)</li>\\n<li>TCA Taiwan (20001)</li>\\n<li>ETEN Taiwan (Chinese Traditional) (20002)</li>\\n<li>IBM5550 Taiwan (20003)</li>\\n<li>TeleText Taiwan (20004)</li>\\n<li>Wang Taiwan (20005)</li>\\n<li>Western European IA5 (IRV International Alphabet 5) (20105)</li>\\n<li>IA5 German (7-bit) (20106)</li>\\n<li>IA5 Swedish (7-bit) (20107)</li>\\n<li>IA5 Norwegian (7-bit) (20108)</li>\\n<li>T.61 (20261)</li>\\n<li>Japanese (JIS 0208-1990 and 0212-1990) (20932)</li>\\n<li>Korean Wansung (20949)</li>\\n<li>Extended/Ext Alpha Lowercase (21027)</li>\\n<li>Europa 3 (29001)</li>\\n<li>Atari ST/TT (47451)</li>\\n<li>HZ-GB2312 简体中文 (52936)</li>\\n<li>简体中文 GB18030 (54936)</li>\\n</ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Character_encoding\",\"inputType\":\"string\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字符集\",\"type\":\"option\",\"value\":[\"UTF-8 (65001)\",\"UTF-7 (65000)\",\"UTF-16LE (1200)\",\"UTF-16BE (1201)\",\"UTF-32LE (12000)\",\"UTF-32BE (12001)\",\"IBM EBCDIC International (500)\",\"IBM EBCDIC US-Canada (37)\",\"IBM EBCDIC Multilingual/ROECE (Latin 2) (870)\",\"IBM EBCDIC Greek Modern (875)\",\"IBM EBCDIC French (1010)\",\"IBM EBCDIC Turkish (Latin 5) (1026)\",\"IBM EBCDIC Latin 1/Open System (1047)\",\"IBM EBCDIC Lao (1132/1133/1341)\",\"IBM EBCDIC US-Canada (037 + Euro symbol) (1140)\",\"IBM EBCDIC Germany (20273 + Euro symbol) (1141)\",\"IBM EBCDIC Denmark-Norway (20277 + Euro symbol) (1142)\",\"IBM EBCDIC Finland-Sweden (20278 + Euro symbol) (1143)\",\"IBM EBCDIC Italy (20280 + Euro symbol) (1144)\",\"IBM EBCDIC Latin America-Spain (20284 + Euro symbol) (1145)\",\"IBM EBCDIC United Kingdom (20285 + Euro symbol) (1146)\",\"IBM EBCDIC France (20297 + Euro symbol) (1147)\",\"IBM EBCDIC International (500 + Euro symbol) (1148)\",\"IBM EBCDIC Icelandic (20871 + Euro symbol) (1149)\",\"IBM EBCDIC Germany (20273)\",\"IBM EBCDIC Denmark-Norway (20277)\",\"IBM EBCDIC Finland-Sweden (20278)\",\"IBM EBCDIC Italy (20280)\",\"IBM EBCDIC Latin America-Spain (20284)\",\"IBM EBCDIC United Kingdom (20285)\",\"IBM EBCDIC Japanese Katakana Extended (20290)\",\"IBM EBCDIC France (20297)\",\"IBM EBCDIC Arabic (20420)\",\"IBM EBCDIC Greek (20423)\",\"IBM EBCDIC Hebrew (20424)\",\"IBM EBCDIC Korean Extended (20833)\",\"IBM EBCDIC Thai (20838)\",\"IBM EBCDIC Icelandic (20871)\",\"IBM EBCDIC Cyrillic Russian (20880)\",\"IBM EBCDIC Turkish (20905)\",\"IBM EBCDIC Latin 1/Open System (1047 + Euro symbol) (20924)\",\"IBM EBCDIC Cyrillic Serbian-Bulgarian (21025)\",\"OEM United States (437)\",\"OEM Greek (formerly 437G); Greek (DOS) (737)\",\"OEM Baltic; Baltic (DOS) (775)\",\"OEM Russian; Cyrillic + Euro symbol (808)\",\"OEM Multilingual Latin 1; Western European (DOS) (850)\",\"OEM Latin 2; Central European (DOS) (852)\",\"OEM Cyrillic (primarily Russian) (855)\",\"OEM Turkish; Turkish (DOS) (857)\",\"OEM Multilingual Latin 1 + Euro symbol (858)\",\"OEM Portuguese; Portuguese (DOS) (860)\",\"OEM Icelandic; Icelandic (DOS) (861)\",\"OEM Hebrew; Hebrew (DOS) (862)\",\"OEM French Canadian; French Canadian (DOS) (863)\",\"OEM Arabic; Arabic (864) (864)\",\"OEM Nordic; Nordic (DOS) (865)\",\"OEM Russian; Cyrillic (DOS) (866)\",\"OEM Modern Greek; Greek, Modern (DOS) (869)\",\"OEM Cyrillic (primarily Russian) + Euro Symbol (872)\",\"Windows-874 Thai (874)\",\"Windows-1250 Central European (1250)\",\"Windows-1251 Cyrillic (1251)\",\"Windows-1252 Latin (1252)\",\"Windows-1253 Greek (1253)\",\"Windows-1254 Turkish (1254)\",\"Windows-1255 Hebrew (1255)\",\"Windows-1256 Arabic (1256)\",\"Windows-1257 Baltic (1257)\",\"Windows-1258 Vietnam (1258)\",\"ISO-8859-1 Latin 1 Western European (28591)\",\"ISO-8859-2 Latin 2 Central European (28592)\",\"ISO-8859-3 Latin 3 South European (28593)\",\"ISO-8859-4 Latin 4 North European (28594)\",\"ISO-8859-5 Latin/Cyrillic (28595)\",\"ISO-8859-6 Latin/Arabic (28596)\",\"ISO-8859-7 Latin/Greek (28597)\",\"ISO-8859-8 Latin/Hebrew (28598)\",\"ISO 8859-8 Hebrew (ISO-Logical) (38598)\",\"ISO-8859-9 Latin 5 Turkish (28599)\",\"ISO-8859-10 Latin 6 Nordic (28600)\",\"ISO-8859-11 Latin/Thai (28601)\",\"ISO-8859-13 Latin 7 Baltic Rim (28603)\",\"ISO-8859-14 Latin 8 Celtic (28604)\",\"ISO-8859-15 Latin 9 (28605)\",\"ISO-8859-16 Latin 10 (28606)\",\"ISO 2022 JIS Japanese with no halfwidth Katakana (50220)\",\"ISO 2022 JIS Japanese with halfwidth Katakana (50221)\",\"ISO 2022 Japanese JIS X 0201-1989 (1 byte Kana-SO/SI) (50222)\",\"ISO 2022 Korean (50225)\",\"ISO 2022 Simplified Chinese (50227)\",\"ISO 6937 Non-Spacing Accent (20269)\",\"EUC Japanese (51932)\",\"EUC Simplified Chinese (51936)\",\"EUC Korean (51949)\",\"ISCII Devanagari (57002)\",\"ISCII Bengali (57003)\",\"ISCII Tamil (57004)\",\"ISCII Telugu (57005)\",\"ISCII Assamese (57006)\",\"ISCII Oriya (57007)\",\"ISCII Kannada (57008)\",\"ISCII Malayalam (57009)\",\"ISCII Gujarati (57010)\",\"ISCII Punjabi (57011)\",\"Japanese Shift-JIS (932)\",\"简体中文 GBK (936)\",\"Korean (949)\",\"繁体中文 Big5 (950)\",\"US-ASCII (7-bit) (20127)\",\"简体中文 GB2312 (20936)\",\"KOI8-R Russian Cyrillic (20866)\",\"KOI8-U Ukrainian Cyrillic (21866)\",\"Mazovia (Polish) MS-DOS (620)\",\"Arabic (ASMO 708) (708)\",\"Arabic (Transparent ASMO); Arabic (DOS) (720)\",\"Kamenický (Czech) MS-DOS (895)\",\"Korean (Johab) (1361)\",\"MAC Roman (10000)\",\"Japanese (Mac) (10001)\",\"MAC繁体中文 (Big5) (10002)\",\"Korean (Mac) (10003)\",\"Arabic (Mac) (10004)\",\"Hebrew (Mac) (10005)\",\"Greek (Mac) (10006)\",\"Cyrillic (Mac) (10007)\",\"MAC简体中文 (GB 2312) (10008)\",\"Romanian (Mac) (10010)\",\"Ukrainian (Mac) (10017)\",\"Thai (Mac) (10021)\",\"MAC Latin 2 (Central European) (10029)\",\"Icelandic (Mac) (10079)\",\"Turkish (Mac) (10081)\",\"Croatian (Mac) (10082)\",\"CNS Taiwan (Chinese Traditional) (20000)\",\"TCA Taiwan (20001)\",\"ETEN Taiwan (Chinese Traditional) (20002)\",\"IBM5550 Taiwan (20003)\",\"TeleText Taiwan (20004)\",\"Wang Taiwan (20005)\",\"Western European IA5 (IRV International Alphabet 5) (20105)\",\"IA5 German (7-bit) (20106)\",\"IA5 Swedish (7-bit) (20107)\",\"IA5 Norwegian (7-bit) (20108)\",\"T.61 (20261)\",\"Japanese (JIS 0208-1990 and 0212-1990) (20932)\",\"Korean Wansung (20949)\",\"Extended/Ext Alpha Lowercase (21027)\",\"Europa 3 (29001)\",\"Atari ST/TT (47451)\",\"HZ-GB2312 简体中文 (52936)\",\"简体中文 GB18030 (54936)\"]}]},\"Enigma\":{\"module\":\"Bletchley\",\"description\":\"Encipher/decipher with the WW2 Enigma machine.<br><br>Enigma was used by the German military, among others, around the WW2 era as a portable cipher machine to protect sensitive military, diplomatic and commercial communications.<br><br>The standard set of German military rotors and reflectors are provided. To configure the plugboard, enter a string of connected pairs of letters, e.g. <code>AB CD EF</code> connects A to B, C to D, and E to F. This is also used to create your own reflectors. To create your own rotor, enter the letters that the rotor maps A to Z to, in order, optionally followed by <code>&lt;</code> then a list of stepping points.<br>This is deliberately fairly permissive with rotor placements etc compared to a real Enigma (on which, for example, a four-rotor Enigma uses only the thin reflectors and the beta or gamma rotor in the 4th slot).<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Enigma_machine\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Model\",\"type\":\"argSelector\",\"value\":[{\"name\":\"3-rotor\",\"off\":[1,2,3]},{\"name\":\"4-rotor\",\"on\":[1,2,3]}]},{\"name\":\"Left-most (4th) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Beta\",\"value\":\"LEYJVCNIXWPBQMDRTAKZGFUHOS\"},{\"name\":\"Gamma\",\"value\":\"FSOKANUERHMBTIYCWLQPZXVGJD\"}]},{\"name\":\"Left-most rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Left-most rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Left-hand rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}]},{\"name\":\"Left-hand rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Left-hand rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Middle rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}],\"defaultIndex\":1},{\"name\":\"Middle rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Middle rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Right-hand rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"I\",\"value\":\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\"},{\"name\":\"II\",\"value\":\"AJDKSIRUXBLHWTMCQGZNPYFVOE<F\"},{\"name\":\"III\",\"value\":\"BDFHJLCPRTXVZNYEIWGAKMUSQO<W\"},{\"name\":\"IV\",\"value\":\"ESOVPZJAYQUIRHXLNFTGKDCMWB<K\"},{\"name\":\"V\",\"value\":\"VZBRGITYUPSDNHLXAWMJQOFECK<A\"},{\"name\":\"VI\",\"value\":\"JPGVOUMFYQBENHZRDKASXLICTW<AN\"},{\"name\":\"VII\",\"value\":\"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN\"},{\"name\":\"VIII\",\"value\":\"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN\"}],\"defaultIndex\":2},{\"name\":\"Right-hand rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Right-hand rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Reflector\",\"type\":\"editableOption\",\"value\":[{\"name\":\"B\",\"value\":\"AY BR CU DH EQ FS GL IP JX KN MO TZ VW\"},{\"name\":\"C\",\"value\":\"AF BV CP DJ EI GO HY KR LZ MX NW TQ SU\"},{\"name\":\"B Thin\",\"value\":\"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV\"},{\"name\":\"C Thin\",\"value\":\"AR BD CO EJ FN GT HK IV LM PW QZ SX UY\"}]},{\"name\":\"Plugboard\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Strict output\",\"type\":\"boolean\",\"value\":true,\"hint\":\"Remove non-alphabet letters and group output\"}]},\"熵\":{\"module\":\"Charts\",\"description\":\"在信息论中，香农熵是接收的每条消息中包含的信息的平均量，又被称为信息熵、信源熵、平均自信息量。通常可以用来衡量一段数据具有（或不具有）某种特定结构。对于单字节的英文字符，最大值是8（8个比特），表示完全随机的一段内容。英语文章的香农熵通常在3.5~5。通常情况下，加密或压缩后的密文需要高于7.5的熵。\",\"infoURL\":\"https://wikipedia.org/wiki/Entropy_(information_theory)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可视化\",\"type\":\"option\",\"value\":[\"香农量表\",\"图表 (柱状图)\",\"图表 (折线图)\",\"曲线图\",\"图像\"]}]},\"转义字符串\":{\"module\":\"Default\",\"description\":\"将字符串中的特殊字符转义，防止和代码发生冲突。例如，<code>Don't stop me now</code> 转义成 <code>Don\\\\'t stop me now</code>。<br><br>支持以下的字符转义：<ul><li><code>\\\\n</code> （换行，LF）</li><li><code>\\\\r</code> （回车，CR）</li><li><code>\\\\t</code> （制表符）</li><li><code>\\\\b</code> （退格）</li><li><code>\\\\f</code> （换页，FF）</li><li><code>\\\\xnn</code> （十六进制，n是0到f）</li><li><code>\\\\\\\\</code> （反斜杠）</li><li><code>\\\\'</code> （单引号）</li><li><code>\\\\&quot;</code> （双引号）</li><li><code>\\\\unnnn</code> （Unicode字符）</li><li><code>\\\\u{nnnnnn}</code> （Unicode码点）</li></ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Escape_sequence\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"转义等级\",\"type\":\"option\",\"value\":[\"特殊字符\",\"所有\",\"最少\"]},{\"name\":\"转义引号\",\"type\":\"option\",\"value\":[\"单引号\",\"双引号\",\"反勾号\"]},{\"name\":\"JSON兼容\",\"type\":\"boolean\",\"value\":false},{\"name\":\"ES6兼容\",\"type\":\"boolean\",\"value\":true},{\"name\":\"十六进制大写\",\"type\":\"boolean\",\"value\":false}]},\"Unicode字符转义\":{\"module\":\"Default\",\"description\":\"把Unicode字符根据选定的前缀格式进行转义。<br><br>支持以下前缀：<ul><li><code>\\\\u</code></li><li><code>%u</code></li><li><code>U+</code></li></ul>例： <code>σου</code> 编码为 <code>\\\\u03C3\\\\u03BF\\\\u03C5</code>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"前缀\",\"type\":\"option\",\"value\":[\"\\\\u\",\"%u\",\"U+\"]},{\"name\":\"转义所有字符\",\"type\":\"boolean\",\"value\":false},{\"name\":\"填充位数\",\"type\":\"number\",\"value\":4},{\"name\":\"十六进制大写\",\"type\":\"boolean\",\"value\":true}],\"checks\":[{\"pattern\":\"\\\\\\\\u(?:[\\\\da-f]{4,6})\",\"flags\":\"i\",\"args\":[\"\\\\u\"]},{\"pattern\":\"%u(?:[\\\\da-f]{4,6})\",\"flags\":\"i\",\"args\":[\"%u\"]},{\"pattern\":\"U\\\\+(?:[\\\\da-f]{4,6})\",\"flags\":\"i\",\"args\":[\"U+\"]}]},\"扩写字母范围\":{\"module\":\"Default\",\"description\":\"把字母范围扩写成在此范围内的所有字母。<br><br>例如：<code>a-z</code> 扩写成 <code>abcdefghijklmnopqrstuvwxyz</code>。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"binaryString\",\"value\":\"\"}]},\"提取日期\":{\"module\":\"Regex\",\"description\":\"提取以下格式的日期：<ul><li><code>yyyy-mm-dd</code></li><li><code>dd/mm/yyyy</code></li><li><code>mm/dd/yyyy</code></li></ul>分隔符可以为/、-、.或空格。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false}]},\"提取域名\":{\"module\":\"Regex\",\"description\":\"提取完整域名。<br>注意不包括域名路径。用<strong>提取URL</strong>操作提取完整URL。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"提取EXIF\":{\"module\":\"Image\",\"description\":\"从图像中提取EXIF数据。\\n<br><br>\\nEXIF数据是嵌入在图片(JPEG, JPG, TIFF)和音频文件中的元数据。\\n<br><br>\\n照片的EXIF数据通常包括图像本身以及拍摄设备的信息。\",\"infoURL\":\"https://wikipedia.org/wiki/Exif\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"提取Email地址\":{\"module\":\"Regex\",\"description\":\"从输入中提取所有的Email地址。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"提取文件路径\":{\"module\":\"Regex\",\"description\":\"从输入中提取任何长得像Windows或UNIX文件路径的字符串。<br><br>注意UNIX模式可能会产生很多误判。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Windows\",\"type\":\"boolean\",\"value\":true},{\"name\":\"UNIX\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"提取文件\":{\"module\":\"Default\",\"description\":\"从输入内容中进行文件雕复来尝试提取文件。<br><br>此操作目前可提取以下格式：\\n            <ul>\\n                <li>\\n                JPG,JPEG,JPE,THM,MPO</li><li>GIF</li><li>PNG</li><li>WEBP</li><li>BMP</li><li>ICO</li><li>TGA</li><li>FLV</li><li>WAV</li><li>MP3</li><li>PDF</li><li>RTF</li><li>DOCX,XLSX,PPTX</li><li>EPUB</li><li>EXE,DLL,DRV,VXD,SYS,OCX,VBX,COM,FON,SCR</li><li>ELF,BIN,AXF,O,PRX,SO</li><li>DYLIB</li><li>ZIP</li><li>TAR</li><li>GZ</li><li>BZ2</li><li>ZLIB</li><li>XZ</li><li>JAR</li><li>LZOP,LZO</li><li>DEB</li><li>SQLITE</li><li>EVT</li><li>EVTX</li><li>DMP</li><li>PF</li><li>PLIST</li><li>KEYCHAIN</li><li>LNK\\n                </li>\\n            </ul>可以指定最小文件尺寸来防止误判。\",\"infoURL\":\"https://forensics.wiki/file_carving\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"图片\",\"type\":\"boolean\",\"value\":true},{\"name\":\"视频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"音频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"文档\",\"type\":\"boolean\",\"value\":true},{\"name\":\"应用\",\"type\":\"boolean\",\"value\":true},{\"name\":\"Archives\",\"type\":\"boolean\",\"value\":true},{\"name\":\"其它\",\"type\":\"boolean\",\"value\":false},{\"name\":\"忽略失败提取\",\"type\":\"boolean\",\"value\":true},{\"name\":\"最小文件尺寸\",\"type\":\"number\",\"value\":100}]},\"提取哈希\":{\"module\":\"Regex\",\"description\":\"根据哈希值长度提取哈希值。\",\"infoURL\":\"https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"哈希值长度\",\"type\":\"number\",\"value\":40},{\"name\":\"搜索所有种类哈希值\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false}]},\"提取ID3\":{\"module\":\"Default\",\"description\":\"此操作从MP3文件中提取ID3元数据。<br><br>ID3是一种元数据容器，多应用于MP3格式的音频文件中。它可以将相关的曲名、演唱者、专辑、音轨数等信息存储在MP3文件中，又称作“ID3Tags”。\",\"infoURL\":\"https://wikipedia.org/wiki/ID3\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"提取IP地址\":{\"module\":\"Regex\",\"description\":\"提取所有的IPv4和IPv6地址。<br><br>警告：类似 <code>710.65.0.456</code> 这样的非有效IP地址输入也会匹配出 <code>10.65.0.45</code>，务必确认输入文本正确！\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"IPv4\",\"type\":\"boolean\",\"value\":true},{\"name\":\"IPv6\",\"type\":\"boolean\",\"value\":false},{\"name\":\"移除内网IPv4地址\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"提取LSB\":{\"module\":\"Image\",\"description\":\"提取图像每个像素的最低有效位（Least Significant Bit, LSB）数据。常见于图像隐写术用于隐藏数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Bit_numbering#Least_significant_bit_in_digital_steganography\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"通道 #1\",\"type\":\"option\",\"value\":[\"R\",\"G\",\"B\",\"A\"]},{\"name\":\"通道 #2\",\"type\":\"option\",\"value\":[\"\",\"R\",\"G\",\"B\",\"A\"]},{\"name\":\"通道 #3\",\"type\":\"option\",\"value\":[\"\",\"R\",\"G\",\"B\",\"A\"]},{\"name\":\"通道 #4\",\"type\":\"option\",\"value\":[\"\",\"R\",\"G\",\"B\",\"A\"]},{\"name\":\"像素顺序\",\"type\":\"option\",\"value\":[\"按行\",\"按列\"]},{\"name\":\"位\",\"type\":\"number\",\"value\":0}]},\"提取MAC地址\":{\"module\":\"Regex\",\"description\":\"从输入中提取Media Access Control (MAC)地址。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"提取RGBA\":{\"module\":\"Image\",\"description\":\"提取图像中每个像素的RGBA值。此数据有时用于隐写术，可隐藏文字和数据。\",\"infoURL\":\"https://wikipedia.org/wiki/RGBA_color_space\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"逗号\",\"value\":\",\"},{\"name\":\"空格\",\"value\":\" \"},{\"name\":\"CRLF\",\"value\":\"\\\\r\\\\n\"},{\"name\":\"换行\",\"value\":\"\\n\"}]},{\"name\":\"包括Alpha\",\"type\":\"boolean\",\"value\":true}]},\"提取URL\":{\"module\":\"Regex\",\"description\":\"从输入中提取Uniform Resource Locator (URL)。必须要带协议名称 (如http, ftp 等)，否则会有过多误判。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"URL无效化恢复\":{\"module\":\"Default\",\"description\":\"将已经“无效化（Defanged）”的URL恢复成有效状态。\",\"infoURL\":\"https://isc.sans.edu/forums/diary/Defang+all+the+things/22744/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"恢复[.]\",\"type\":\"boolean\",\"value\":true},{\"name\":\"恢复hxxp\",\"type\":\"boolean\",\"value\":true},{\"name\":\"恢复://\",\"type\":\"boolean\",\"value\":true}]},\"Fernet解密\":{\"module\":\"Default\",\"description\":\"Fernet是一种对称加密算法，设计目的是确保加密过的信息在没有密钥的情况下无法被解密和修改。密钥使用URL安全编码。Fernet使用128位AES算法（CBC模式，PKCS7填充）和使用SHA256算法的HMAC进行校验。IV使用os.random()生成。<br><br><b>密钥：</b>密钥长度必须为32字节（256位），使用Base64编码。\",\"infoURL\":\"https://asecuritysite.com/encryption/fer\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥\",\"type\":\"string\",\"value\":\"\"}]},\"Fernet加密\":{\"module\":\"Default\",\"description\":\"Fernet是一种对称加密算法，设计目的是确保加密过的信息在没有密钥的情况下无法被解密和修改。密钥使用URL安全编码。Fernet使用128位AES算法（CBC模式，PKCS7填充）和使用SHA256算法的HMAC进行校验。IV使用os.random()生成。<br><br><b>密钥：</b>密钥长度必须为32字节（256位），使用Base64编码。\",\"infoURL\":\"https://asecuritysite.com/encryption/fer\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥\",\"type\":\"string\",\"value\":\"\"}]},\"文件树\":{\"module\":\"Default\",\"description\":\"从给定的文件路径列表生成文件树（和Linux的tree命令类似）。\",\"infoURL\":\"https://wikipedia.org/wiki/Tree_(command)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"文件路径分隔符\",\"type\":\"binaryString\",\"value\":\"/\"},{\"name\":\"列表分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]}]},\"过滤\":{\"module\":\"Regex\",\"description\":\"将输入字符串使用给定的分隔符拆分，之后使用给定的正则表达式过滤。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]},{\"name\":\"正则表达式\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"反向过滤\",\"type\":\"boolean\",\"value\":false}]},\"查找/替换\":{\"module\":\"Regex\",\"description\":\"把第一个字符串用第二个字符串替换。<br><br>支持正则表达式（regex）、简单字符串和扩展字符串（即使用转义字符\\\\n, \\\\r, \\\\t, \\\\b, \\\\f和用\\\\x表示的十六进制字节，例如 \\\\x00 代表空字节）。\",\"infoURL\":\"https://wikipedia.org/wiki/Regular_expression\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"查找内容\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"正则表达式\",\"扩展 (\\\\n, \\\\t, \\\\x...)\",\"简单字符串\"]},{\"name\":\"替换\",\"type\":\"binaryString\",\"value\":\"\"},{\"name\":\"全局匹配（g）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"不区分大小写（i）\",\"type\":\"boolean\",\"value\":false},{\"name\":\"匹配多行（m）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"点（.）匹配所有字符（s）\",\"type\":\"boolean\",\"value\":false}]},\"Fletcher-16校验和\":{\"module\":\"Crypto\",\"description\":\"Fletcher校验和是用于计算位置相关校验和的算法，由Lawrence Livermore Labs的John Gould Fletcher在20世纪70年代末期设计。<br><br>Fletcher校验和可以提供接近循环冗余校验（Cyclic redundancy check, CRC）的错误检测功能，但所需的计算更少。\",\"infoURL\":\"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-16\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Fletcher-32校验和\":{\"module\":\"Crypto\",\"description\":\"Fletcher校验和是用于计算位置相关校验和的算法，由Lawrence Livermore Labs的John Gould Fletcher在20世纪70年代末期设计。<br><br>Fletcher校验和可以提供接近循环冗余校验（Cyclic redundancy check, CRC）的错误检测功能，但所需的计算更少。\",\"infoURL\":\"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-32\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Fletcher-64校验和\":{\"module\":\"Crypto\",\"description\":\"Fletcher校验和是用于计算位置相关校验和的算法，由Lawrence Livermore Labs的John Gould Fletcher在20世纪70年代末期设计。<br><br>Fletcher校验和可以提供接近循环冗余校验（Cyclic redundancy check, CRC）的错误检测功能，但所需的计算更少。\",\"infoURL\":\"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-64\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Fletcher-8校验和\":{\"module\":\"Crypto\",\"description\":\"Fletcher校验和是用于计算位置相关校验和的算法，由Lawrence Livermore Labs的John Gould Fletcher在20世纪70年代末期设计。<br><br>Fletcher校验和可以提供接近循环冗余校验（Cyclic redundancy check, CRC）的错误检测功能，但所需的计算更少。\",\"infoURL\":\"https://wikipedia.org/wiki/Fletcher%27s_checksum\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"图像翻转\":{\"module\":\"Image\",\"description\":\"将图像按X轴或Y轴翻转。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"翻转轴\",\"type\":\"option\",\"value\":[\"水平\",\"垂直\"]}]},\"Fork\":{\"module\":\"Default\",\"description\":\"将输入数据按照给定的分隔符分割，并对分割后的每条数据单独执行下面的所有操作。<br><br>例如：解码多个Base64字符串，将所有的字符串每行一个放置在输入框，然后使用“Fork”和“Base64解码”操作。每个字符串都会被单独解码。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"分割分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\"},{\"name\":\"合并分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\"},{\"name\":\"忽略报错\",\"type\":\"boolean\",\"value\":false}]},\"MAC地址格式化\":{\"module\":\"Default\",\"description\":\"将给定的MAC地址用多种不同格式显示。<br><br>列表需要用回车、空格或逗号分隔。<br><br>警告：无法验证MAC地址的有效性。\",\"infoURL\":\"https://wikipedia.org/wiki/MAC_address#Notational_conventions\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输出大小写\",\"type\":\"option\",\"value\":[\"大小写\",\"仅大写\",\"仅小写\"]},{\"name\":\"无分隔\",\"type\":\"boolean\",\"value\":true},{\"name\":\"横杠分隔\",\"type\":\"boolean\",\"value\":true},{\"name\":\"冒号分隔\",\"type\":\"boolean\",\"value\":true},{\"name\":\"思科Style\",\"type\":\"boolean\",\"value\":false},{\"name\":\"IPv6接口ID\",\"type\":\"boolean\",\"value\":false}]},\"频率分布\":{\"module\":\"Default\",\"description\":\"将数据中字节的分布绘制成图表。\",\"infoURL\":\"https://wikipedia.org/wiki/Frequency_distribution\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示 0%\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示 ASCII\",\"type\":\"boolean\",\"value\":true}]},\"BCD码解码\":{\"module\":\"Default\",\"description\":\"BCD码（Binary-Coded Decimal)是一种十进制数字编码的形式。在这种编码下，每个十进制数字用一串单独的二进制比特来存储与表示。常见的有以4位或8位表示1个十进制数字。有时会用特殊的码位表示特殊符号。\",\"infoURL\":\"https://wikipedia.org/wiki/Binary-coded_decimal\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码方式\",\"type\":\"option\",\"value\":[\"8 4 2 1\",\"7 4 2 1\",\"4 2 2 1\",\"2 4 2 1\",\"8 4 -2 -1\",\"余3码\",\"IBM 8 4 2 1\"]},{\"name\":\"压缩\",\"type\":\"boolean\",\"value\":true},{\"name\":\"有符号\",\"type\":\"boolean\",\"value\":false},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"半字节\",\"字节\",\"原始数据\"]}],\"checks\":[{\"pattern\":\"^(?:\\\\d{4} ){3,}\\\\d{4}$\",\"flags\":\"\",\"args\":[\"8 4 2 1\",true,false,\"半字节\"]}]},\"其它进制数转十进制\":{\"module\":\"Default\",\"description\":\"把给定进制的数字转换成十进制\",\"infoURL\":\"https://wikipedia.org/wiki/Radix\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"进制\",\"type\":\"number\",\"value\":36}]},\"Base32解码\":{\"module\":\"Default\",\"description\":\"Base32是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。Base32比Base64使用的字母表小一些，通常只包含大写字母和数字2到7。\",\"infoURL\":\"https://wikipedia.org/wiki/Base32\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"binaryString\",\"value\":\"A-Z2-7=\"},{\"name\":\"移除输入中的非可用字符\",\"type\":\"boolean\",\"value\":true}],\"checks\":[{\"pattern\":\"^(?:[A-Z2-7]{8})+(?:[A-Z2-7]{2}={6}|[A-Z2-7]{4}={4}|[A-Z2-7]{5}={3}|[A-Z2-7]{7}={1})?$\",\"flags\":\"\",\"args\":[\"A-Z2-7=\",false]}]},\"Base45解码\":{\"module\":\"Default\",\"description\":\"Base45是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。越高的Base数目会生成越短的字符串。Base45是为二维码优化的编码方式。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"string\",\"value\":\"0-9A-Z $%*+\\\\-./:\"},{\"name\":\"移除输入中的非可用字符\",\"type\":\"boolean\",\"value\":true}]},\"Base58解码\":{\"module\":\"Default\",\"description\":\"Base58（类似于Base64）是把字节数据转换成特定字符组合的编码方式。和Base64的区别是移除了形状相近的易混字符（例如l、I、0和O)来提高可读性。<br><br>此操作将已编码成ASCII字符的Base58字符串解码为原始数据。<br><br>例： <code>StV1DL6CwTryKyV</code> 解码为 <code>hello world</code><br><br>Base58常见于加密货币（比特币、Ripple等)。\",\"infoURL\":\"https://wikipedia.org/wiki/Base58\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"比特币\",\"value\":\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"},{\"name\":\"Ripple\",\"value\":\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"}]},{\"name\":\"移除输入中的非可用字符\",\"type\":\"boolean\",\"value\":true}],\"checks\":[{\"pattern\":\"^[1-9A-HJ-NP-Za-km-z]{20,}$\",\"flags\":\"\",\"args\":[\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\",false]},{\"pattern\":\"^[1-9A-HJ-NP-Za-km-z]{20,}$\",\"flags\":\"\",\"args\":[\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\",false]}]},\"Base62解码\":{\"module\":\"Default\",\"description\":\"Base62是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。<br><br>此操作将已编码成ASCII字符的Base62字符串解码为原始数据。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"string\",\"value\":\"0-9A-Za-z\"}]},\"Base64解码\":{\"module\":\"Default\",\"description\":\"Base64是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。<br><br>此操作将已编码成ASCII字符的Base64字符串解码为原始数据。<br><br>例： <code>aGVsbG8=</code> 解码成 <code>hello</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Base64\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"标准 (RFC 4648): A-Za-z0-9+/=\",\"value\":\"A-Za-z0-9+/=\"},{\"name\":\"URL安全 (RFC 4648 §5): A-Za-z0-9-_\",\"value\":\"A-Za-z0-9-_\"},{\"name\":\"文件名安全: A-Za-z0-9+-=\",\"value\":\"A-Za-z0-9+\\\\-=\"},{\"name\":\"itoa64: ./0-9A-Za-z=\",\"value\":\"./0-9A-Za-z=\"},{\"name\":\"XML: A-Za-z0-9_.\",\"value\":\"A-Za-z0-9_.\"},{\"name\":\"y64: A-Za-z0-9._-\",\"value\":\"A-Za-z0-9._-\"},{\"name\":\"z64: 0-9a-zA-Z+/=\",\"value\":\"0-9a-zA-Z+/=\"},{\"name\":\"Radix-64 (RFC 4880): 0-9A-Za-z+/=\",\"value\":\"0-9A-Za-z+/=\"},{\"name\":\"Uuencoding: [space]-_\",\"value\":\" -_\"},{\"name\":\"Xxencoding: +-0-9A-Za-z\",\"value\":\"+\\\\-0-9A-Za-z\"},{\"name\":\"BinHex: !-,-0-689@A-NP-VX-Z[`a-fh-mp-r\",\"value\":\"!-,-0-689@A-NP-VX-Z[`a-fh-mp-r\"},{\"name\":\"ROT13: N-ZA-Mn-za-m0-9+/=\",\"value\":\"N-ZA-Mn-za-m0-9+/=\"},{\"name\":\"UNIX crypt: ./0-9A-Za-z\",\"value\":\"./0-9A-Za-z\"},{\"name\":\"Atom128: /128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\",\"value\":\"/128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\"},{\"name\":\"Megan35: 3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\",\"value\":\"3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\"},{\"name\":\"Zong22: ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\",\"value\":\"ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\"},{\"name\":\"Hazz15: HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\",\"value\":\"HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\"}]},{\"name\":\"移除输入中的非可用字符\",\"type\":\"boolean\",\"value\":true},{\"name\":\"严格模式\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d+/]{4})+(?:[A-Z\\\\d+/]{2}==|[A-Z\\\\d+/]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"A-Za-z0-9+/=\",true,false]},{\"pattern\":\"^\\\\s*[A-Z\\\\d\\\\-_]{20,}\\\\s*$\",\"flags\":\"i\",\"args\":[\"A-Za-z0-9-_\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d+\\\\-]{4}){5,}(?:[A-Z\\\\d+\\\\-]{2}==|[A-Z\\\\d+\\\\-]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"A-Za-z0-9+\\\\-=\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d./]{4}){5,}(?:[A-Z\\\\d./]{2}==|[A-Z\\\\d./]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"./0-9A-Za-z=\",true,false]},{\"pattern\":\"^\\\\s*[A-Z\\\\d_.]{20,}\\\\s*$\",\"flags\":\"i\",\"args\":[\"A-Za-z0-9_.\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d._]{4}){5,}(?:[A-Z\\\\d._]{2}--|[A-Z\\\\d._]{3}-)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"A-Za-z0-9._-\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d+/]{4}){5,}(?:[A-Z\\\\d+/]{2}==|[A-Z\\\\d+/]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"0-9a-zA-Z+/=\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z\\\\d+/]{4}){5,}(?:[A-Z\\\\d+/]{2}==|[A-Z\\\\d+/]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"0-9A-Za-z+/=\",true,false]},{\"pattern\":\"^[ !\\\"#$%&'()*+,\\\\-./\\\\d:;<=>?@A-Z[\\\\\\\\\\\\]^_]{20,}$\",\"flags\":\"\",\"args\":[\" -_\",false,false]},{\"pattern\":\"^\\\\s*[A-Z\\\\d+\\\\-]{20,}\\\\s*$\",\"flags\":\"i\",\"args\":[\"+\\\\-0-9A-Za-z\",true,false]},{\"pattern\":\"^\\\\s*[!\\\"#$%&'()*+,\\\\-0-689@A-NP-VX-Z[`a-fh-mp-r]{20,}\\\\s*$\",\"flags\":\"\",\"args\":[\"!-,-0-689@A-NP-VX-Z[`a-fh-mp-r\",true,false]},{\"pattern\":\"^\\\\s*(?:[N-ZA-M\\\\d+/]{4}){5,}(?:[N-ZA-M\\\\d+/]{2}==|[N-ZA-M\\\\d+/]{3}=)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"N-ZA-Mn-za-m0-9+/=\",true,false]},{\"pattern\":\"^\\\\s*[A-Z\\\\d./]{20,}\\\\s*$\",\"flags\":\"i\",\"args\":[\"./0-9A-Za-z\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}CC|[A-Z=\\\\d\\\\+/]{3}C)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"/128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}55|[A-Z=\\\\d\\\\+/]{3}5)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}22|[A-Z=\\\\d\\\\+/]{3}2)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\",true,false]},{\"pattern\":\"^\\\\s*(?:[A-Z=\\\\d\\\\+/]{4}){5,}(?:[A-Z=\\\\d\\\\+/]{2}55|[A-Z=\\\\d\\\\+/]{3}5)?\\\\s*$\",\"flags\":\"i\",\"args\":[\"HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\",true,false]}]},\"Base85解码\":{\"module\":\"Default\",\"description\":\"Base85（也叫Ascii85）是把字节数据转换成特定字符组合的编码方式。通常比Base64效率更高。<br><br>此操作将使用ASCII字符的Base64字符串解码成原始数据。字符表可选，带有预设。<br><br>例： <code>BOu!rD]j7BEbo7</code> 解码成 <code>hello world</code><br><br>Base85在Adobe的PostScript和PDF格式中较为常见。\",\"infoURL\":\"https://wikipedia.org/wiki/Ascii85\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"标准\",\"value\":\"!-u\"},{\"name\":\"Z85 (ZeroMQ)\",\"value\":\"0-9a-zA-Z.\\\\-:+=^!/*?&<>()[]{}@%$#\"},{\"name\":\"IPv6\",\"value\":\"0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~\"}]},{\"name\":\"移除不可用字符\",\"type\":\"boolean\",\"value\":true},{\"name\":\"全零分组字符\",\"type\":\"binaryShortString\",\"value\":\"z\",\"maxLength\":1}],\"checks\":[{\"pattern\":\"^\\\\s*(?:<~)?[\\\\s!-uz]*[!-uz]{15}[\\\\s!-uz]*(?:~>)?\\\\s*$\",\"args\":[\"!-u\"]},{\"pattern\":\"^[\\\\s0-9a-zA-Z.\\\\-:+=^!/*?&<>()[\\\\]{}@%$#]*[0-9a-zA-Z.\\\\-:+=^!/*?&<>()[\\\\]{}@%$#]{15}[\\\\s0-9a-zA-Z.\\\\-:+=^!/*?&<>()[\\\\]{}@%$#]*$\",\"args\":[\"0-9a-zA-Z.\\\\-:+=^!/*?&<>()[]{}@%$#\"]},{\"pattern\":\"^[\\\\s0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~]*[0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~]{15}[\\\\s0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~]*$\",\"args\":[\"0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~\"]}]},\"Base92解码\":{\"module\":\"Default\",\"description\":\"Base92是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"二进制转字符\":{\"module\":\"Default\",\"description\":\"把二进制字符串解码为原先的内容<br><br>例 <code>01001000 01101001</code> 解码为 <code>Hi</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Binary_code\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\",\"无\"]},{\"name\":\"字节长度\",\"type\":\"number\",\"value\":8,\"min\":1}],\"checks\":[{\"pattern\":\"^(?:[01]{8})+$\",\"flags\":\"\",\"args\":[\"None\"]},{\"pattern\":\"^(?:[01]{8})(?: [01]{8})*$\",\"flags\":\"\",\"args\":[\"Space\"]},{\"pattern\":\"^(?:[01]{8})(?:,[01]{8})*$\",\"flags\":\"\",\"args\":[\"Comma\"]},{\"pattern\":\"^(?:[01]{8})(?:;[01]{8})*$\",\"flags\":\"\",\"args\":[\"Semi-colon\"]},{\"pattern\":\"^(?:[01]{8})(?::[01]{8})*$\",\"flags\":\"\",\"args\":[\"Colon\"]},{\"pattern\":\"^(?:[01]{8})(?:\\\\n[01]{8})*$\",\"flags\":\"\",\"args\":[\"Line feed\"]},{\"pattern\":\"^(?:[01]{8})(?:\\\\r\\\\n[01]{8})*$\",\"flags\":\"\",\"args\":[\"CRLF\"]}]},\"盲文解码\":{\"module\":\"Default\",\"description\":\"把六点盲文转换成文字。\",\"infoURL\":\"https://wikipedia.org/wiki/Braille\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"从大小写不敏感正则恢复\":{\"module\":\"Default\",\"description\":\"将大小写不敏感正则字符串恢复为大小写敏感形式（无法保证转换后的大小写形式正确），用于之前正则i选项不能用但现在能用了，所以你想转换回来的场合。<br><br>例如：<code>[mM][oO][zZ][iI][lL][lL][aA]/[0-9].[0-9] .*</code> 转换为 <code>Mozilla/[0-9].[0-9] .*</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Regular_expression\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"从字符码提取\":{\"module\":\"Default\",\"description\":\"把Unicode字符码还原为字符。<br><br>例： <code>0393 03b5 03b9 03ac 20 03c3 03bf 03c5</code> 解码为 <code>Γειά σου</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Plane_(Unicode)\",\"inputType\":\"string\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]},{\"name\":\"进制\",\"type\":\"number\",\"value\":16}]},\"十进制转字符\":{\"module\":\"Default\",\"description\":\"把十进制字符串解码为原先的内容。<br><br>例： <code>72 101 108 108 111</code> 解码为 <code>Hello</code>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]},{\"name\":\"支持带符号数字（signed int）\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?: (?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"空格\",false]},{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?:,(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"逗号\",false]},{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?:;(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"分号\",false]},{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?::(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"冒号\",false]},{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?:\\\\n(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"换行符\",false]},{\"pattern\":\"^(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5])(?:\\\\r\\\\n(?:\\\\d{1,2}|1\\\\d{2}|2[0-4]\\\\d|25[0-5]))*$\",\"flags\":\"\",\"args\":[\"CRLF\",false]}]},\"浮点数转字符\":{\"module\":\"Default\",\"description\":\"将 IEEE754 浮点数转换为字符\",\"infoURL\":\"https://wikipedia.org/wiki/IEEE_754\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"端序\",\"type\":\"option\",\"value\":[\"大端序\",\"小端序\"]},{\"name\":\"类型\",\"type\":\"option\",\"value\":[\"Float (4字节)\",\"Double (8字节)\"]},{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}]},\"HTML实体解码\":{\"module\":\"Encodings\",\"description\":\"把HTML实体解码为原始字符。<br><br>例： <code>&amp;<span>amp;</span></code> 解码为 <code>&amp;</code>\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"&(?:#\\\\d{2,3}|#x[\\\\da-f]{2}|[a-z]{2,6});\",\"flags\":\"i\",\"args\":[]}]},\"十六进制转字符\":{\"module\":\"Default\",\"description\":\"把十六进制字符串解码为原先的内容。<br><br>例如： <code>ce 93 ce b5 ce b9 ce ac 20 cf 83 ce bf cf 85 0a</code> 解码为UTF-8字符串 <code>Γειά σου</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Hexadecimal\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"自动\",\"空格\",\"百分号\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\",\"0x\",\"0x和逗号\",\"\\\\x\",\"无\"]}],\"checks\":[{\"pattern\":\"^(?:[\\\\dA-F]{2})+$\",\"flags\":\"i\",\"args\":[\"无\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?: [\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"空格\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?:,[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"逗号\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?:;[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"分号\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?::[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"冒号\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?:\\\\n[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"换行\"]},{\"pattern\":\"^[\\\\dA-F]{2}(?:\\\\r\\\\n[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"CRLF\"]},{\"pattern\":\"^(?:0x[\\\\dA-F]{2})+$\",\"flags\":\"i\",\"args\":[\"0x\"]},{\"pattern\":\"^0x[\\\\dA-F]{2}(?:,0x[\\\\dA-F]{2})*$\",\"flags\":\"i\",\"args\":[\"0x和逗号\"]},{\"pattern\":\"^(?:\\\\\\\\x[\\\\dA-F]{2})+$\",\"flags\":\"i\",\"args\":[\"\\\\x\"]}]},\"Snort Content解码\":{\"module\":\"Default\",\"description\":\"把十六进制恢复成原始字符。SNORT的Content关键字使用此格式。<br><br>例： <code>foo|3d|bar</code> 解码为<code>foo=bar</code>.\",\"infoURL\":\"http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node32.html#SECTION00451000000000000000\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"\\\\|([\\\\da-f]{2} ?)+\\\\|\",\"flags\":\"i\",\"args\":[]}]},\"从Hexdump提取\":{\"module\":\"Default\",\"description\":\"尝试提取hexdump包含的原始数据。此操作支持大部分hexdump类型。在进行下一步分析之前务必确认输入数据的正确性。\",\"infoURL\":\"https://wikipedia.org/wiki/Hex_dump\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^(?:(?:[\\\\dA-F]{4,16}h?:?)?[ \\\\t]*((?:[\\\\dA-F]{2} ){1,8}(?:[ \\\\t]|[\\\\dA-F]{2}-)(?:[\\\\dA-F]{2} ){1,8}|(?:[\\\\dA-F]{4} )*[\\\\dA-F]{4}|(?:[\\\\dA-F]{2} )*[\\\\dA-F]{2})[^\\\\n]*\\\\n?){2,}$\",\"flags\":\"i\",\"args\":[]}]},\"MessagePack解码\":{\"module\":\"Code\",\"description\":\"把MessagePack编码的内容还原为JSON。MessagePack是一种计算机数据交换格式。它是一种二进制形式，用于表示简单的数据结构，如数组和关联数组。\",\"infoURL\":\"https://wikipedia.org/wiki/MessagePack\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"摩尔斯电码解码\":{\"module\":\"Default\",\"description\":\"把摩尔斯电码还原为大写字母。\",\"infoURL\":\"https://wikipedia.org/wiki/Morse_code\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字母分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"换行\",\"CRLF\",\"斜杠\",\"反斜杠\",\"逗号\",\"分号\",\"冒号\"]},{\"name\":\"单词分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"斜杠\",\"反斜杠\",\"逗号\",\"分号\",\"冒号\"]}],\"checks\":[{\"pattern\":\"(?:^[-. \\\\n]{5,}$|^[_. \\\\n]{5,}$|^(?:dash|dot| |\\\\n){5,}$)\",\"flags\":\"i\",\"args\":[\"Space\",\"Line feed\"]}]},\"八进制转字符\":{\"module\":\"Default\",\"description\":\"把八进制字符串解码为原先的内容。<br><br>例： <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code> 解码成UTF-8字符串 <code>Γειά σου</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Octal\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}],\"checks\":[{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?: (?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"空格\"]},{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?:,(?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"逗号\"]},{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?:;(?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"分号\"]},{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?::(?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"冒号\"]},{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?:\\\\n(?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"换行\"]},{\"pattern\":\"^(?:[0-7]{1,2}|[123][0-7]{2})(?:\\\\r\\\\n(?:[0-7]{1,2}|[123][0-7]{2}))*$\",\"flags\":\"\",\"args\":[\"CRLF\"]}]},\"Punycode解码\":{\"module\":\"Encodings\",\"description\":\"Punycode是用ASCII字符的一个子集来编码Unicode域名的一种方法。<br><br>例： <code>mnchen-3ya</code> 解码为 <code>münchen</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Punycode\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"国际化域名（带xn--）\",\"type\":\"boolean\",\"value\":false}]},\"QP解码\":{\"module\":\"Default\",\"description\":\"把QP编码的字符还原。<br><br>例：QP编码的字符串 <code>hello=20world</code> 解码为 <code>hello world</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Quoted-printable\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^[\\\\x21-\\\\x3d\\\\x3f-\\\\x7e \\\\t]{0,76}(?:=[\\\\da-f]{2}|=\\\\r?\\\\n)(?:[\\\\x21-\\\\x3d\\\\x3f-\\\\x7e \\\\t]|=[\\\\da-f]{2}|=\\\\r?\\\\n)*$\",\"flags\":\"i\",\"args\":[]}]},\"从UNIX时间戳提取\":{\"module\":\"Default\",\"description\":\"将UNIX时间戳转换为DateTime字符串。<br><br>例： <code>978346800</code> 转换为 <code>Mon 1 January 2001 11:00:00 UTC</code><br><br>UNIX时间，或称POSIX时间是UNIX或类UNIX系统使用的时间表示方式：从UTC1970年1月1日0时0分0秒起至现在的总秒数，不考虑闰秒。\",\"infoURL\":\"https://wikipedia.org/wiki/Unix_time\",\"inputType\":\"number\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"单位\",\"type\":\"option\",\"value\":[\"秒 (s)\",\"毫秒 (ms)\",\"微秒 (μs)\",\"纳秒 (ns)\"]}],\"checks\":[{\"pattern\":\"^1?\\\\d{9}$\",\"flags\":\"\",\"args\":[\"秒 (s)\"]},{\"pattern\":\"^1?\\\\d{12}$\",\"flags\":\"\",\"args\":[\"毫秒 (ms)\"]},{\"pattern\":\"^1?\\\\d{15}$\",\"flags\":\"\",\"args\":[\"微秒 (μs)\"]},{\"pattern\":\"^1?\\\\d{18}$\",\"flags\":\"\",\"args\":[\"纳秒 (ns)\"]}]},\"模糊匹配\":{\"module\":\"Default\",\"description\":\"根据指定的权重对输入进行模糊匹配。<br><br>例如：搜索 <code>dpan</code> 可匹配 <code><b>D</b>on't <b>Pan</b>ic</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Fuzzy_matching_(computer-assisted_translation)\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"查找内容\",\"type\":\"binaryString\",\"value\":\"\"},{\"name\":\"顺序加成\",\"type\":\"number\",\"value\":15,\"hint\":\"如果匹配内容相邻则提高权重\"},{\"name\":\"分隔符加成\",\"type\":\"number\",\"value\":30,\"hint\":\"如果匹配内容刚好在分隔符后则提高权重\"},{\"name\":\"驼峰加成\",\"type\":\"number\",\"value\":30,\"hint\":\"如果匹配内容是大写而上一个匹配是小写则提高权重\"},{\"name\":\"首字母加成\",\"type\":\"number\",\"value\":15,\"hint\":\"如果首字母匹配则提高权重\"},{\"name\":\"前置字母惩罚\",\"type\":\"number\",\"value\":-5,\"hint\":\"根据首个匹配之前的字符数降低权重\"},{\"name\":\"前置字母惩罚最大值\",\"type\":\"number\",\"value\":-15,\"hint\":\"前置字母惩罚可降低权重的最大值\"},{\"name\":\"不匹配字母惩罚\",\"type\":\"number\",\"value\":-1}]},\"GOST解密\":{\"module\":\"Ciphers\",\"description\":\"GOST块密码（Magma）是苏联和俄罗斯政府标准的对称密钥块密码，块大小为64位，定义在标准GOST 28147-89（RFC 5830）中。最初的标准于1989年发布，未为密码命名，但最新修订的标准GOST R 34.12-2015（RFC 7801，RFC 8891）指定它可以被称为Magma。GOST哈希函数基于该密码。新标准还指定了一个名为Kuznyechik的新的128位块密码。<br><br>该标准在1970年代开发，曾被标记为“绝密”，1990年降级为“机密”。苏联解体后不久，该标准被解密，并在1994年向公众发布。GOST 28147是苏联替代美国标准算法DES的选择，因此两者在结构上非常相似。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入类型\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始字节\"]},{\"name\":\"输出类型\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]},{\"name\":\"块模式\",\"type\":\"option\",\"value\":[\"ECB\",\"CFB\",\"OFB\",\"CTR\",\"CBC\"]},{\"name\":\"Key meshing模式\",\"type\":\"option\",\"value\":[\"NO\",\"CP\"]},{\"name\":\"填充\",\"type\":\"option\",\"value\":[\"NO\",\"PKCS5\",\"ZERO\",\"RANDOM\",\"BIT\"]}]},\"GOST加密\":{\"module\":\"Ciphers\",\"description\":\"GOST块密码（Magma）是苏联和俄罗斯政府标准的对称密钥块密码，块大小为64位，定义在标准GOST 28147-89（RFC 5830）中。最初的标准于1989年发布，未为密码命名，但最新修订的标准GOST R 34.12-2015（RFC 7801，RFC 8891）指定它可以被称为Magma。GOST哈希函数基于该密码。新标准还指定了一个名为Kuznyechik的新的128位块密码。<br><br>该标准在1970年代开发，曾被标记为“绝密”，1990年降级为“机密”。苏联解体后不久，该标准被解密，并在1994年向公众发布。GOST 28147是苏联替代美国标准算法DES的选择，因此两者在结构上非常相似。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入类型\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"输出类型\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始字节\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]},{\"name\":\"块类型\",\"type\":\"option\",\"value\":[\"ECB\",\"CFB\",\"OFB\",\"CTR\",\"CBC\"]},{\"name\":\"Key meshing模式\",\"type\":\"option\",\"value\":[\"NO\",\"CP\"]},{\"name\":\"填充\",\"type\":\"option\",\"value\":[\"NO\",\"PKCS5\",\"ZERO\",\"RANDOM\",\"BIT\"]}]},\"GOST哈希\":{\"module\":\"Hashing\",\"description\":\"GOST哈希算法，由标准GOST R 34.11-94和GOST 34.311-95定义，是一种256位哈希算法。最初为俄罗斯国家标准GOST R 34.11-94 <i>Information Technology – Cryptographic Information Security – Hash Function</i>。由其它独联体国家使用的等效标准是GOST 34.311-95。<br><br>此算法不是新标准GOST R 34.11-2012当中定义的Streebog哈希算法。<br><br>GOST哈希算法基于GOST块加密算法。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(hash_function)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (1994)\",\"off\":[1],\"on\":[2]},{\"name\":\"GOST R 34.11 (Streebog, 2012)\",\"on\":[1],\"off\":[2]}]},{\"name\":\"摘要长度\",\"type\":\"option\",\"value\":[\"256\",\"512\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]}]},\"GOST密钥解包装\":{\"module\":\"Ciphers\",\"description\":\"对使用GOST块加密包装的密钥解包装。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"User Key Material\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Input type\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始字节\"]},{\"name\":\"Output type\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]},{\"name\":\"Key包装\",\"type\":\"option\",\"value\":[\"NO\",\"CP\",\"SC\"]}]},\"GOST密钥包装\":{\"module\":\"Ciphers\",\"description\":\"使用GOST块密码对密钥在不可信环境中进行包装。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"User Key Material\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入类型\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"输出类型\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始字节\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]},{\"name\":\"Key包装\",\"type\":\"option\",\"value\":[\"NO\",\"CP\",\"SC\"]}]},\"GOST签名\":{\"module\":\"Ciphers\",\"description\":\"使用GOST块加密对明文信息签名。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入类型\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"输出类型\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始字节\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]},{\"name\":\"MAC长度\",\"type\":\"number\",\"value\":32,\"min\":8,\"max\":64,\"step\":8}]},\"GOST验证\":{\"module\":\"Ciphers\",\"description\":\"使用GOST块加密算法验证明文信息的签名。将签名输入到MAC框中。\",\"infoURL\":\"https://wikipedia.org/wiki/GOST_(block_cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"MAC\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"输入类型\",\"type\":\"option\",\"value\":[\"原始字节\",\"十六进制\"]},{\"name\":\"算法\",\"type\":\"argSelector\",\"value\":[{\"name\":\"GOST 28147 (Magma, 1989)\",\"off\":[5],\"on\":[6]},{\"name\":\"GOST R 34.12 (Kuznyechik, 2015)\",\"on\":[5],\"off\":[6]}]},{\"name\":\"块长度\",\"type\":\"option\",\"value\":[\"64\",\"128\"]},{\"name\":\"sBox\",\"type\":\"option\",\"value\":[\"E-TEST\",\"E-A\",\"E-B\",\"E-C\",\"E-D\",\"E-SC\",\"E-Z\",\"D-TEST\",\"D-A\",\"D-SC\"]}]},\"哈希生成\":{\"module\":\"Crypto\",\"description\":\"对给定输入数据计算目前支持的所有哈希值和校验和。\",\"infoURL\":\"https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度（位）\",\"type\":\"option\",\"value\":[\"所有\",\"128\",\"160\",\"224\",\"256\",\"320\",\"384\",\"512\"]},{\"name\":\"包括算法名称\",\"type\":\"boolean\",\"value\":true}]},\"生成德布鲁因序列\":{\"module\":\"Default\",\"description\":\"根据给定的元素表和密钥长度生成滚动码。De Bruijn sequence又译德布勒蕴序列、德布莱英序列。\",\"infoURL\":\"https://wikipedia.org/wiki/De_Bruijn_sequence\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"元素表长度 (k)\",\"type\":\"number\",\"value\":2},{\"name\":\"密钥长度 (n)\",\"type\":\"number\",\"value\":3}]},\"生成HOTP\":{\"module\":\"Default\",\"description\":\"基于HMAC的一次性密码算法（英语：HMAC-based One-time Password algorithm，HOTP）是一种基于散列消息验证码（HMAC）的一次性密码（OTP）算法，同时也是开放验证提案的基础（OATH）。HOTP在2005年由IETF发布在RFC 4226标准文档中。<br><br>在输入框输入secret，或者留空来生成一个随机值。\",\"infoURL\":\"https://wikipedia.org/wiki/HMAC-based_One-time_Password_algorithm\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"名称\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Key长度\",\"type\":\"number\",\"value\":32},{\"name\":\"动态码长度\",\"type\":\"number\",\"value\":6},{\"name\":\"计数器\",\"type\":\"number\",\"value\":0}]},\"生成图像\":{\"module\":\"Image\",\"description\":\"使用输入作为像素值生成图像。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"灰度\",\"RG\",\"RGB\",\"RGBA\",\"位\"]},{\"name\":\"像素缩放倍率\",\"type\":\"number\",\"value\":8},{\"name\":\"每行像素数\",\"type\":\"number\",\"value\":64}]},\"生成Lorem Ipsum\":{\"module\":\"Default\",\"description\":\"生成给定长度的lorem ipsum占位文本。\",\"infoURL\":\"https://wikipedia.org/wiki/Lorem_ipsum\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"number\",\"value\":\"3\"},{\"name\":\"长度单位\",\"type\":\"option\",\"value\":[\"段落\",\"句子\",\"单词\",\"字节\"]}]},\"生成PGP密钥对\":{\"module\":\"PGP\",\"description\":\"生成PGP公钥/私钥对。支持RSA和椭圆曲线（Eliptic Curve，EC）密钥。<br><br>警告：SRK Toolbox中的任何密钥操作均无法保证其安全性、准确性。建议在实际应用环境中不要使用由SRK Toolbox生成的密钥。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥类型\",\"type\":\"option\",\"value\":[\"RSA-1024\",\"RSA-2048\",\"RSA-4096\",\"ECC-256\",\"ECC-384\",\"ECC-521\"]},{\"name\":\"口令（非必填）\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"姓名（非必填）\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Email（非必填）\",\"type\":\"string\",\"value\":\"\"}]},\"生成二维码\":{\"module\":\"Image\",\"description\":\"从输入生成一个Quick Response (QR)二维码。<br><br>QR码/图码（英语：Quick Response Code；全称为快速响应矩阵图码）是二维码的一种，于1994年由日本汽车零组件大厂电装公司的原昌宏所发明。条形码或称条码（英语：barcode），是将宽度不等的多个黑条和空白，按照一定的编码规则排列，用以表达一组信息的图形标识符。\",\"infoURL\":\"https://wikipedia.org/wiki/QR_code\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"图像格式\",\"type\":\"option\",\"value\":[\"PNG\",\"SVG\",\"EPS\",\"PDF\"]},{\"name\":\"码点大小 (px)\",\"type\":\"number\",\"value\":5,\"min\":1},{\"name\":\"留白 (码点数)\",\"type\":\"number\",\"value\":4,\"min\":0},{\"name\":\"错误检测\",\"type\":\"option\",\"value\":[\"Low\",\"Medium\",\"Quartile\",\"High\"],\"defaultIndex\":1}]},\"生成RSA密钥对\":{\"module\":\"Ciphers\",\"description\":\"生成给定长度的RSA密钥对。<br><br>警告：SRK Toolbox中的任何密钥操作均无法保证其安全性、准确性。建议在实际应用环境中不要使用由SRK Toolbox生成的密钥。\",\"infoURL\":\"https://wikipedia.org/wiki/RSA_(cryptosystem)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"RSA密钥长度\",\"type\":\"option\",\"value\":[\"1024\",\"2048\",\"4096\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"PEM\",\"JSON\",\"DER\"]}]},\"生成TOTP\":{\"module\":\"Default\",\"description\":\"基于时间的一次性密码算法（英语：Time-based One-Time Password，简称：TOTP）是一种根据预共享的密钥与当前时间计算一次性密码的算法。它已被互联网工程任务组接纳为RFC 6238标准，成为主动开放认证（英语：Initiative For Open Authentication）（OATH）的基石，并被用于众多多重要素验证系统当中。TOTP是散列消息认证码（HMAC）当中的一个例子。它结合一个私钥与当前时间戳，使用一个密码散列函数来生成一次性密码。<br><br>在输入框输入secret，或者留空来生成一个随机值。T0和T1的单位是秒。\",\"infoURL\":\"https://wikipedia.org/wiki/Time-based_One-time_Password_algorithm\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"名称\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Key长度\",\"type\":\"number\",\"value\":32},{\"name\":\"动态码长度\",\"type\":\"number\",\"value\":6},{\"name\":\"纪元偏移（Epoch offset, T0）\",\"type\":\"number\",\"value\":0},{\"name\":\"计算时间间隔（T1）\",\"type\":\"number\",\"value\":30}]},\"生成UUID\":{\"module\":\"Crypto\",\"description\":\"生成一个RFC 4122版本4兼容的Universally Unique Identifier (UUID)。通常也被称作Globally Unique Identifier (GUID)。<br><br>版本4 UUID依赖于随机数，此操作使用 <code>window.crypto</code> 生成随机数，如果不可用则转为使用 <code>Math.random</code> 。\",\"infoURL\":\"https://wikipedia.org/wiki/Universally_unique_identifier\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"通用代码美化\":{\"module\":\"Code\",\"description\":\"尝试美化C风格语言，例如C, C++, C#, Java, PHP, JavaScript等等。<br><br>此操作并不保证美化后的代码一定可用，只是为了提高混淆或丑化后的代码可读性。<br><br>无法正常美化的内容：<ul><li>For循环格式化</li><li>Do-While循环格式化</li><li>Switch/Case缩进</li><li>特定的位移运算符</li></ul>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"大小写穷举\":{\"module\":\"Default\",\"description\":\"输出一个字符串所有的大小写形式。<br><br>警告：显而易见是指数递增，输入字符串过长后果自负。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"获取当前时间\":{\"module\":\"Default\",\"description\":\"获取当前时间的UNIX时间戳 (从1970-01-01 00:00:00 UTC开始的秒数)。使用W3C High Resolution Time API。\",\"infoURL\":\"https://wikipedia.org/wiki/Unix_time\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"粒度\",\"type\":\"option\",\"value\":[\"秒 (s)\",\"毫秒 (ms)\",\"微秒 (μs)\",\"纳秒 (ns)\"]}]},\"IP地址分组\":{\"module\":\"Default\",\"description\":\"把IP地址分组汇总列出到对应的子网范围下。支持IPv4和IPv6。\",\"infoURL\":\"https://wikipedia.org/wiki/Subnetwork\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\"]},{\"name\":\"子网 (CIDR)\",\"type\":\"number\",\"value\":24},{\"name\":\"只显示子网\",\"type\":\"boolean\",\"value\":false}]},\"Gunzip\":{\"module\":\"Compression\",\"description\":\"解压使用带有Gzip头部的deflate算法压缩的数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Gzip\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^\\\\x1f\\\\x8b\\\\x08\",\"flags\":\"\",\"args\":[]}]},\"Gzip\":{\"module\":\"Compression\",\"description\":\"使用带有Gzip头部的deflate算法压缩数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Gzip\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩类型\",\"type\":\"option\",\"value\":[\"动态霍夫曼压缩\",\"静态霍夫曼压缩\",\"无压缩 (Store)\"]},{\"name\":\"文件名 (可选)\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"注释 (可选)\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"包括文件校验和\",\"type\":\"boolean\",\"value\":false}]},\"HAS-160\":{\"module\":\"Crypto\",\"description\":\"HAS-160是设计用于韩国KCDSA数据签名的哈希算法。它是SHA-1的变种，并进行了提高安全性的修改。此算法产生160位长度的输出。<br><br>HAS-160和SHA-1计算方法相同。首先把输入分割成512位长度的块，并补齐最后一块。摘要函数按顺序处理块并不断更新哈希值。<br><br>此算法默认进行80轮运算。\",\"infoURL\":\"https://wikipedia.org/wiki/HAS-160\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"轮数\",\"type\":\"number\",\"value\":80,\"min\":1,\"max\":80}]},\"HASSH客户端指纹\":{\"module\":\"Crypto\",\"description\":\"使用SSH的Client Key Exchange Init消息内容进行哈希生成HASSH指纹，用于辨识SSH客户端。<br><br>输入：由客户端发送至服务器端的应用层SSH_MSG_KEXINIT包十六进制流。\",\"infoURL\":\"https://engineering.salesforce.com/open-sourcing-hassh-abed3ae5044c\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"哈希摘要\",\"HASSH算法字符串\",\"详细信息\"]}]},\"HASSH服务器指纹\":{\"module\":\"Crypto\",\"description\":\"使用SSH的Server Key Exchange Init消息内容进行哈希生成HASSH指纹，用于辨识SSH服务器端。<br><br>输入：由服务器端发送至客户端的应用层SSH_MSG_KEXINIT包十六进制流。\",\"infoURL\":\"https://engineering.salesforce.com/open-sourcing-hassh-abed3ae5044c\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"哈希摘要\",\"HASSH算法字符串\",\"详细信息\"]}]},\"HMAC\":{\"module\":\"Crypto\",\"description\":\"HMAC (有时扩展为 英语：keyed-hash message authentication code, 密钥散列消息认证码, 或 英语：hash-based message authentication code，散列消息认证码），是一种通过特别计算方式之后产生的消息认证码（MAC），使用密码散列函数，同时结合一个加密密钥。它可以用来保证资料的完整性，同时可以用来作某个消息的身份验证。\",\"infoURL\":\"https://wikipedia.org/wiki/HMAC\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"十进制\",\"Base64\",\"UTF8\",\"Latin1\"]},{\"name\":\"哈希算法\",\"type\":\"option\",\"value\":[\"MD2\",\"MD4\",\"MD5\",\"SHA0\",\"SHA1\",\"SHA224\",\"SHA256\",\"SHA384\",\"SHA512\",\"SHA512/224\",\"SHA512/256\",\"RIPEMD128\",\"RIPEMD160\",\"RIPEMD256\",\"RIPEMD320\",\"HAS160\",\"Whirlpool\",\"Whirlpool-0\",\"Whirlpool-T\",\"Snefru\"]}]},\"HTML转文本\":{\"module\":\"Default\",\"description\":\"将某个操作输出的HTML转换为纯文本形式，不在输出框进行渲染。\",\"infoURL\":\"\",\"inputType\":\"html\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"HTTP请求\":{\"module\":\"Default\",\"description\":\"发起HTTP请求并接收响应内容。\\n<br><br>\\n此操作支持不同的HTTP方法，例如GET、POST、PUT等等。\\n<br><br>\\n你可以用 <code>Key: Value</code> 的格式按行添加请求头（Header）。\\n<br><br>\\n响应的状态码和一部分响应头可通过勾选“显示响应元数据”查看。由于浏览器安全设置，只能显示一部分响应头。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_HTTP_header_fields#Request_fields\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":true,\"args\":[{\"name\":\"方法\",\"type\":\"option\",\"value\":[\"GET\",\"POST\",\"HEAD\",\"PUT\",\"PATCH\",\"DELETE\",\"CONNECT\",\"TRACE\",\"OPTIONS\"]},{\"name\":\"URL\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"请求头（Header）\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"Cross-Origin Resource Sharing\",\"No CORS (limited to HEAD, GET or POST)\"]},{\"name\":\"显示响应元数据\",\"type\":\"boolean\",\"value\":false}]},\"汉明距离\":{\"module\":\"Default\",\"description\":\"在信息论中，两个等长字符串之间的汉明距离（英语：Hamming distance）是两个字符串对应位置的不同字符的个数。换句话说，它就是将一个字符串变换成另外一个字符串所需要替换的字符个数。\",\"infoURL\":\"https://wikipedia.org/wiki/Hamming_distance\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"单位\",\"type\":\"option\",\"value\":[\"字节\",\"位\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始字符串\",\"十六进制\"]}]},\"半正矢距离\":{\"module\":\"Default\",\"description\":\"计算两对GPS经纬度坐标之间的距离，单位米。<br><br>例如：<code>51.487263,-0.124323, 38.9517,-77.1467</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Haversine_formula\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Head\":{\"module\":\"Default\",\"description\":\"和UNIX的head工具类似。<br>输出前n行。<br>输入负数可以选取除最后n行之外的内容。<br>可以选择不同的分隔符来实现选取前n个数据。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]},{\"name\":\"选取数量\",\"type\":\"number\",\"value\":10}]},\"热图\":{\"module\":\"Charts\",\"description\":\"热图（英语：heat map）是在二维空间中以颜色的形式显示一个现象的绝对量一种数据可视化技术。\",\"infoURL\":\"https://wikipedia.org/wiki/Heat_map\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"记录分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\"]},{\"name\":\"字段分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"Tab\"]},{\"name\":\"垂直色块数\",\"type\":\"number\",\"value\":25},{\"name\":\"水平色块数\",\"type\":\"number\",\"value\":25},{\"name\":\"使用表头作为标签\",\"type\":\"boolean\",\"value\":true},{\"name\":\"X轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Y轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"绘制色块边缘\",\"type\":\"boolean\",\"value\":false},{\"name\":\"最小值色彩\",\"type\":\"string\",\"value\":\"white\"},{\"name\":\"最大值色彩\",\"type\":\"string\",\"value\":\"black\"}]},\"六边形密度图\":{\"module\":\"Charts\",\"description\":\"六边形密度图（Hex density chart）和散点图的使用方法类似，但与其显示上万散点，六边形密度图将相近位置的数据合并，用较少的六边形和色彩来展示密度。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"记录分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\"]},{\"name\":\"字段分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"Tab\"]},{\"name\":\"分组半径\",\"type\":\"number\",\"value\":25},{\"name\":\"绘制半径\",\"type\":\"number\",\"value\":15},{\"name\":\"使用表头作为标签\",\"type\":\"boolean\",\"value\":true},{\"name\":\"X轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Y轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"绘制六边形边缘\",\"type\":\"boolean\",\"value\":false},{\"name\":\"最小值色彩\",\"type\":\"string\",\"value\":\"white\"},{\"name\":\"最大值色彩\",\"type\":\"string\",\"value\":\"black\"},{\"name\":\"绘制数据范围内的空六边形\",\"type\":\"boolean\",\"value\":false}]},\"十六进制转OID\":{\"module\":\"PublicKey\",\"description\":\"把十六进制字符串转换成对应的对象标识符（object identifier，OID）。\",\"infoURL\":\"https://wikipedia.org/wiki/Object_identifier\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"十六进制转PEM\":{\"module\":\"PublicKey\",\"description\":\"把十六进制DER(Distinguished Encoding Rules)字符串转换成PEM(Privacy Enhanced Mail)格式。\",\"infoURL\":\"https://wikipedia.org/wiki/Privacy-Enhanced_Mail\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Header字符串\",\"type\":\"string\",\"value\":\"CERTIFICATE\"}]},\"图像亮度/对比度\":{\"module\":\"Image\",\"description\":\"调整图像的亮度或对比度。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"亮度\",\"type\":\"number\",\"value\":0,\"min\":-100,\"max\":100},{\"name\":\"对比度\",\"type\":\"number\",\"value\":0,\"min\":-100,\"max\":100}]},\"图像滤镜\":{\"module\":\"Image\",\"description\":\"为图像添加灰度或深褐（Sepia）滤镜。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"滤镜类型\",\"type\":\"option\",\"value\":[\"灰度\",\"深褐（Sepia）\"]}]},\"图像色调/饱和度/明度\":{\"module\":\"Image\",\"description\":\"调整图像的色调/饱和度/明度值（HSL）。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"色调\",\"type\":\"number\",\"value\":0,\"min\":-360,\"max\":360},{\"name\":\"饱和度\",\"type\":\"number\",\"value\":0,\"min\":-100,\"max\":100},{\"name\":\"明度\",\"type\":\"number\",\"value\":0,\"min\":-100,\"max\":100}]},\"图像透明度\":{\"module\":\"Image\",\"description\":\"调整图像透明度。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"透明度 (%)\",\"type\":\"number\",\"value\":100,\"min\":0,\"max\":100}]},\"重合因子\":{\"module\":\"Default\",\"description\":\"重合因子（Index of Coincidence, IC）指任意拿出两个字母，两个字母相同的概率。由于英语文本的IC通常大约为0.066，所以IC可以用来推测文本是否为可读文本。IC作为良好的判定条件被用来进行自动化文本频率分析。\",\"infoURL\":\"https://wikipedia.org/wiki/Index_of_coincidence\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"图像反色\":{\"module\":\"Image\",\"description\":\"对图像进行反色处理。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"JA3指纹\":{\"module\":\"Crypto\",\"description\":\"使用客户端发起的Client Hello值进行哈希后生成JA3指纹，用于辨识TLS客户端。<br><br>输入：TLS Client Hello应用层数据包十六进制流。\",\"infoURL\":\"https://engineering.salesforce.com/tls-fingerprinting-with-ja3-and-ja3s-247362855967\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"哈希摘要\",\"JA3字符串\",\"详细信息\"]}]},\"JA3S指纹\":{\"module\":\"Crypto\",\"description\":\"使用服务器端发起的Server Hello值进行哈希后生成JA3S指纹，用于辨识TLS服务器端。<br><br>输入：TLS Server Hello应用层数据包十六进制流。\",\"infoURL\":\"https://engineering.salesforce.com/tls-fingerprinting-with-ja3-and-ja3s-247362855967\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"哈希摘要\",\"JA3S字符串\",\"详细信息\"]}]},\"JA4指纹\":{\"module\":\"Crypto\",\"description\":\"通过将Client Hello中的值进行哈希，生成用于辨识TLS客户端的JA4指纹。<br><br>输入：TLS或QUIC客户端应用层Client Hello包的十六进制流。\",\"infoURL\":\"https://medium.com/foxio/ja4-network-fingerprinting-9376fe9ca637\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"Base64\",\"原始\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"JA4\",\"JA4 Original Rendering\",\"JA4 Raw\",\"JA4 Raw Original Rendering\",\"所有\"]}]},\"JPath表达式\":{\"module\":\"Code\",\"description\":\"从JSON object中使用给定的JPath表达式进行查询并提取内容。\",\"infoURL\":\"http://goessner.net/articles/JsonPath/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"JPath\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"查询结果分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\"},{\"name\":\"阻止Eval\",\"type\":\"boolean\",\"value\":true}]},\"JSON美化\":{\"module\":\"Code\",\"description\":\"为JavaScript Object Notation (JSON)代码添加缩进与美化。<br><br>标签： json viewer, prettify, syntax highlighting\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩进\",\"type\":\"binaryShortString\",\"value\":\"    \"},{\"name\":\"按键值排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"格式化\",\"type\":\"boolean\",\"value\":true}]},\"JSON压缩\":{\"module\":\"Code\",\"description\":\"压缩JavaScript Object Notation (JSON)代码（Minify/Uglify）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"JSON转CSV\":{\"module\":\"Default\",\"description\":\"把JSON转换为CSV格式（RFC 4180）。\",\"infoURL\":\"https://wikipedia.org/wiki/Comma-separated_values\",\"inputType\":\"JSON\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"单元格分隔符\",\"type\":\"binaryShortString\",\"value\":\",\"},{\"name\":\"行分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\r\\\\n\"}]},\"JWT解码\":{\"module\":\"Crypto\",\"description\":\"在<b>不检查</b>给定的secret/私钥是否正确的情况下解密JSON Web Token。使用'JWT验证'来确定secret/私钥的正确性。\",\"infoURL\":\"https://wikipedia.org/wiki/JSON_Web_Token\",\"inputType\":\"string\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^ey([A-Za-z0-9_-]+)\\\\.ey([A-Za-z0-9_-]+)\\\\.([A-Za-z0-9_-]+)$\",\"flags\":\"\",\"args\":[]}]},\"JWT签名\":{\"module\":\"Crypto\",\"description\":\"使用给定的secret/私钥把JSON对象签名为JSON Web Token。<br><br>Key必须是HMAC算法的secret或PEM编码的RSA/ECDSA密钥。\",\"infoURL\":\"https://wikipedia.org/wiki/JSON_Web_Token\",\"inputType\":\"JSON\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"私钥/Secret\",\"type\":\"text\",\"value\":\"secret\"},{\"name\":\"签名算法\",\"type\":\"option\",\"value\":[\"HS256\",\"HS384\",\"HS512\",\"RS256\",\"RS384\",\"RS512\",\"ES256\",\"ES384\",\"ES512\",\"None\"]}]},\"JWT验证\":{\"module\":\"Crypto\",\"description\":\"使用提供的secret或私钥验证JSON Web Token是否有效。<br><br>Key必须是HMAC算法的secret或PEM编码的RSA/ECDSA密钥。\",\"infoURL\":\"https://wikipedia.org/wiki/JSON_Web_Token\",\"inputType\":\"string\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"公钥/Secret\",\"type\":\"text\",\"value\":\"secret\"}]},\"JavaScript美化\":{\"module\":\"Code\",\"description\":\"对合法JavaScript代码进行美化（Beautify）操作。也适用于JSON。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩进\",\"type\":\"binaryShortString\",\"value\":\"\\\\t\"},{\"name\":\"引号\",\"type\":\"option\",\"value\":[\"Auto\",\"Single\",\"Double\"]},{\"name\":\"右花括号前的分号\",\"type\":\"boolean\",\"value\":true},{\"name\":\"包含注释\",\"type\":\"boolean\",\"value\":true}]},\"JavaScript压缩\":{\"module\":\"Code\",\"description\":\"压缩JavaScript代码（Minify/Uglify）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"JavaScript解析\":{\"module\":\"Code\",\"description\":\"返回合法Javascript代码的抽象语法树（Abstract Syntax Tree, AST）。\",\"infoURL\":\"https://wikipedia.org/wiki/Abstract_syntax_tree\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"位置信息\",\"type\":\"boolean\",\"value\":false},{\"name\":\"范围信息\",\"type\":\"boolean\",\"value\":false},{\"name\":\"包括token数组\",\"type\":\"boolean\",\"value\":false},{\"name\":\"包括注释数组\",\"type\":\"boolean\",\"value\":false},{\"name\":\"报告错误并尝试继续\",\"type\":\"boolean\",\"value\":false}]},\"Jump\":{\"module\":\"Default\",\"description\":\"跳转到特定的Label位置。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"Label名称\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"最大跳转次数（用于向后跳转）\",\"type\":\"number\",\"value\":10}]},\"Keccak\":{\"module\":\"Crypto\",\"description\":\"Keccak是一个加密散列算法，由 Guido Bertoni，Joan Daemen，Michaël Peeters，以及Gilles Van Assche在RadioGatún上设计。2012年10月2日，Keccak被选为NIST散列函数竞赛的胜利者。<br><br>此版本算法为Keccak[c=2d]，和SHA-3略有不同。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-3\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"512\",\"384\",\"256\",\"224\"]}]},\"LM哈希\":{\"module\":\"Crypto\",\"description\":\"LM哈希，又叫LAN Manager哈希，是较旧的微软操作系统使用的存储密码方式，目前已被废弃。其安全性非常弱，使用现代硬件设备并利用彩虹表能在几秒之内完成破解。\",\"infoURL\":\"https://wikipedia.org/wiki/LAN_Manager#Password_hashing_algorithm\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"LS47解密\":{\"module\":\"Crypto\",\"description\":\"LS47是对Alan Kaminsky的ElsieFour加密进行少量优化后的版本。为了编码更为详尽的信息，把原版的6x6网格（几乎不够用）扩充到了7x7。同时提供了一种简单的key扩充算法，因为没人喜欢记密码。和ElsieFour有着类似的安全性考虑。<br>LS47字母表包括以下字符: <code>_abcdefghijklmnopqrstuvwxyz.0123456789,-+*/:?!'()</code><br>LS47 key是字母表49个字符的排列，同时用于加解密。\",\"infoURL\":\"https://github.com/exaexa/ls47\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密码\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"填充\",\"type\":\"number\",\"value\":10}]},\"LS47加密\":{\"module\":\"Crypto\",\"description\":\"LS47是对Alan Kaminsky的ElsieFour加密进行少量优化后的版本。为了编码更为详尽的信息，把原版的6x6网格（几乎不够用）扩充到了7x7。同时提供了一种简单的key扩充算法，因为没人喜欢记密码。和ElsieFour有着类似的安全性考虑。<br>LS47字母表包括以下字符: <code>_abcdefghijklmnopqrstuvwxyz.0123456789,-+*/:?!'()</code><br>LS47 key是字母表49个字符的排列，同时用于加解密。\",\"infoURL\":\"https://github.com/exaexa/ls47\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密码\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"填充\",\"type\":\"number\",\"value\":10},{\"name\":\"签名\",\"type\":\"string\",\"value\":\"\"}]},\"LZ4压缩\":{\"module\":\"Compression\",\"description\":\"LZ4是一种无损数据压缩算法，着重于压缩和解压缩速度。它属于面向字节的LZ77压缩方案家族。\",\"infoURL\":\"https://wikipedia.org/wiki/LZ4_(compression_algorithm)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"LZ4解压\":{\"module\":\"Compression\",\"description\":\"LZ4是一种无损数据压缩算法，着重于压缩和解压缩速度。它属于面向字节的LZ77压缩方案家族。\",\"infoURL\":\"https://wikipedia.org/wiki/LZ4_(compression_algorithm)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"LZMA压缩\":{\"module\":\"Compression\",\"description\":\"使用Lempel–Ziv–Markov chain算法压缩数据。压缩模式指定压缩的速度与效率：1为最快但压缩率最低，9最慢但压缩率最高。\",\"infoURL\":\"https://wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩模式\",\"type\":\"option\",\"value\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\"defaultIndex\":6}]},\"LZMA解压\":{\"module\":\"Compression\",\"description\":\"解压使用LZMA算法压缩的数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"LZNT1解压\":{\"module\":\"Compression\",\"description\":\"使用LZNT1算法解压数据。<br><br>功能和Windows API <code>RtlDecompressBuffer</code>类似。\",\"infoURL\":\"https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-xca/5655f4a3-6ba4-489b-959f-e1f407c52f15\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"LZString压缩\":{\"module\":\"Compression\",\"description\":\"使用 lz-string 算法压缩输入内容。\",\"infoURL\":\"https://pieroxy.net/blog/pages/lz-string/index.html\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩格式\",\"type\":\"option\",\"value\":[\"默认\",\"UTF16\",\"Base64\"]}]},\"LZString解压\":{\"module\":\"Compression\",\"description\":\"解压使用 lz-string 算法压缩的数据。\",\"infoURL\":\"https://pieroxy.net/blog/pages/lz-string/index.html\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩格式\",\"type\":\"option\",\"value\":[\"默认\",\"UTF16\",\"Base64\"]}]},\"Label\":{\"module\":\"Default\",\"description\":\"给Conditional和Fixed Jump（跳转操作）提供一个跳转位置。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"名称\",\"type\":\"shortString\",\"value\":\"\"}]},\"莱文斯坦距离\":{\"module\":\"Default\",\"description\":\"莱文斯坦距离，又称Levenshtein距离，是编辑距离的一种。指两个字串之间，由一个转成另一个所需的最少编辑操作次数。\",\"infoURL\":\"https://wikipedia.org/wiki/Levenshtein_distance\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\"},{\"name\":\"插入操作消耗步数\",\"type\":\"number\",\"value\":1},{\"name\":\"删除操作消耗步数\",\"type\":\"number\",\"value\":1},{\"name\":\"替换操作消耗步数\",\"type\":\"number\",\"value\":1}]},\"Lorenz\":{\"module\":\"Bletchley\",\"description\":\"The Lorenz SZ40/42 cipher attachment was a WW2 German rotor cipher machine with twelve rotors which attached in-line between remote teleprinters.<br><br>It used the Vernam cipher with two groups of five rotors (named the psi(ψ) wheels and chi(χ) wheels at Bletchley Park) to create two pseudorandom streams of five bits, encoded in ITA2, which were XOR added to the plaintext. Two other rotors, dubbed the mu(μ) or motor wheels, could hold up the stepping of the psi wheels meaning they stepped intermittently.<br><br>Each rotor has a different number of cams/lugs around their circumference which could be set active or inactive changing the key stream.<br><br>Three models of the Lorenz are emulated, SZ40, SZ42a and SZ42b and three example wheel patterns (the lug settings) are included (KH, ZMUG & BREAM) with the option to set a custom set using the letter 'x' for active or '.' for an inactive lug.<br><br>The input can either be plaintext or ITA2 when sending and ITA2 when receiving.<br><br>To learn more, Virtual Lorenz, an online, browser based simulation of the Lorenz SZ40/42 is available at <a href='https://lorenz.virtualcolossus.co.uk' target='_blank'>lorenz.virtualcolossus.co.uk</a>.<br><br>A more detailed description of this operation can be found <a href='https://github.com/gchq/CyberChef/wiki/Lorenz-SZ' target='_blank'>here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Lorenz_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Model\",\"type\":\"option\",\"value\":[\"SZ40\",\"SZ42a\",\"SZ42b\"]},{\"name\":\"Wheel Pattern\",\"type\":\"argSelector\",\"value\":[{\"name\":\"KH Pattern\",\"off\":[19,20,21,22,23,24,25,26,27,28,29,30]},{\"name\":\"ZMUG Pattern\",\"off\":[19,20,21,22,23,24,25,26,27,28,29,30]},{\"name\":\"BREAM Pattern\",\"off\":[19,20,21,22,23,24,25,26,27,28,29,30]},{\"name\":\"No Pattern\",\"off\":[19,20,21,22,23,24,25,26,27,28,29,30]},{\"name\":\"Custom\",\"on\":[19,20,21,22,23,24,25,26,27,28,29,30]}]},{\"name\":\"KT-Schalter\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Mode\",\"type\":\"argSelector\",\"value\":[{\"name\":\"Send\",\"on\":[4],\"off\":[5]},{\"name\":\"Receive\",\"off\":[4],\"on\":[5]}]},{\"name\":\"Input Type\",\"type\":\"option\",\"value\":[\"Plaintext\",\"ITA2\"]},{\"name\":\"Output Type\",\"type\":\"option\",\"value\":[\"Plaintext\",\"ITA2\"]},{\"name\":\"ITA2 Format\",\"type\":\"option\",\"value\":[\"5/8/9\",\"+/-/.\"]},{\"name\":\"Ψ1 start (1-43)\",\"type\":\"number\",\"value\":1},{\"name\":\"Ψ2 start (1-47)\",\"type\":\"number\",\"value\":1},{\"name\":\"Ψ3 start (1-51)\",\"type\":\"number\",\"value\":1},{\"name\":\"Ψ4 start (1-53)\",\"type\":\"number\",\"value\":1},{\"name\":\"Ψ5 start (1-59)\",\"type\":\"number\",\"value\":1},{\"name\":\"Μ37 start (1-37)\",\"type\":\"number\",\"value\":1},{\"name\":\"Μ61 start (1-61)\",\"type\":\"number\",\"value\":1},{\"name\":\"Χ1 start (1-41)\",\"type\":\"number\",\"value\":1},{\"name\":\"Χ2 start (1-31)\",\"type\":\"number\",\"value\":1},{\"name\":\"Χ3 start (1-29)\",\"type\":\"number\",\"value\":1},{\"name\":\"Χ4 start (1-26)\",\"type\":\"number\",\"value\":1},{\"name\":\"Χ5 start (1-23)\",\"type\":\"number\",\"value\":1},{\"name\":\"Ψ1 lugs (43)\",\"type\":\"string\",\"value\":\".x...xx.x.x..xxx.x.x.xxxx.x.x.x.x.x..x.xx.x\"},{\"name\":\"Ψ2 lugs (47)\",\"type\":\"string\",\"value\":\".xx.x.xxx..x.x.x..x.xx.x.xxx.x....x.xx.x.x.x..x\"},{\"name\":\"Ψ3 lugs (51)\",\"type\":\"string\",\"value\":\".x.x.x..xxx....x.x.xx.x.x.x..xxx.x.x..x.x.xx..x.x.x\"},{\"name\":\"Ψ4 lugs (53)\",\"type\":\"string\",\"value\":\".xx...xxxxx.x.x.xx...x.xx.x.x..x.x.xx.x..x.x.x.x.x.x.\"},{\"name\":\"Ψ5 lugs (59)\",\"type\":\"string\",\"value\":\"xx...xx.x..x.xx.x...x.x.x.x.x.x.x.x.xx..xxxx.x.x...xx.x..x.\"},{\"name\":\"Μ37 lugs (37)\",\"type\":\"string\",\"value\":\"x.x.x.x.x.x...x.x.x...x.x.x...x.x....\"},{\"name\":\"Μ61 lugs (61)\",\"type\":\"string\",\"value\":\".xxxx.xxxx.xxx.xxxx.xx....xxx.xxxx.xxxx.xxxx.xxxx.xxx.xxxx...\"},{\"name\":\"Χ1 lugs (41)\",\"type\":\"string\",\"value\":\".x...xxx.x.xxxx.x...x.x..xxx....xx.xxxx..\"},{\"name\":\"Χ2 lugs (31)\",\"type\":\"string\",\"value\":\"x..xxx...x.xxxx..xx..x..xx.xx..\"},{\"name\":\"Χ3 lugs (29)\",\"type\":\"string\",\"value\":\"..xx..x.xxx...xx...xx..xx.xx.\"},{\"name\":\"Χ4 lugs (26)\",\"type\":\"string\",\"value\":\"xx..x..xxxx..xx.xxx....x..\"},{\"name\":\"Χ5 lugs (23)\",\"type\":\"string\",\"value\":\"xx..xx....xxxx.x..x.x..\"}]},\"Luhn校验和\":{\"module\":\"Default\",\"description\":\"卢恩算法（英语：Luhn algorithm），也称为“模10”（Mod 10）算法，是一种简单的校验和算法，一般用于验证身份识别码，例如发卡行识别码、国际移动设备识别码，美国国家提供商标识号码，或是加拿大社会保险号码。该算法由IBM科学家汉斯·彼得·卢恩创造，专利于1954年1月6日申请，1960年8月23日颁证，美国专利号2950048。\",\"infoURL\":\"https://wikipedia.org/wiki/Luhn_algorithm\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"MD2\":{\"module\":\"Crypto\",\"description\":\"MD2讯息摘要算法（英语：MD2 Message-Digest Algorithm）是由Ronald Rivest在1989年设计的密码杂凑函数，该算法针对8位计算机进行了优化。<br><br>尽管早就被认为不够安全，但直到2014年，MD2依然配合RSA算法用于生成证书公钥。此算法默认进行18轮计算。\",\"infoURL\":\"https://wikipedia.org/wiki/MD2_(cryptography)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"轮数\",\"type\":\"number\",\"value\":18,\"min\":0}]},\"MD4\":{\"module\":\"Crypto\",\"description\":\"MD4是麻省理工学院教授Ronald Rivest于1990年设计的一种信息摘要算法。它是一种用来测试信息完整性的密码散列函数的实行。其摘要长度为128位。这个算法影响了后来的算法如MD5、SHA家族和RIPEMD等。<br><br>MD4算法具有严重的安全漏洞，目前已被淘汰。\",\"infoURL\":\"https://wikipedia.org/wiki/MD4\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"MD5\":{\"module\":\"Crypto\",\"description\":\"MD5消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16个字符(BYTES)）的散列值（hash value），用于确保信息传输完整一致。<br><br>2004年，证实MD5算法无法防止碰撞攻击，因此不适用于安全性认证，如SSL公开密钥认证或是数字签名等用途。\",\"infoURL\":\"https://wikipedia.org/wiki/MD5\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"MD6\":{\"module\":\"Crypto\",\"description\":\"MD6消息摘要算法是一个密码散列函数。它使用默克尔树形式的结构，允许对很长的输入并行进行大量散列计算。\",\"infoURL\":\"https://wikipedia.org/wiki/MD6\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"number\",\"value\":256},{\"name\":\"层次（Level）\",\"type\":\"number\",\"value\":64},{\"name\":\"Key\",\"type\":\"string\",\"value\":\"\"}]},\"Magic\":{\"module\":\"Default\",\"description\":\"Magic操作尝试检测输入数据的多种属性来建议对应的操作。<br><br><b>设定</b><br><u>深度：</u>如果某个操作和数据相符，此操作会被运行一次，运行结果会被再次分析。此参数设置递归的最大次数。<br><br><u>加强模式：</u>当此模式开启时，多种操作如XOR、位运算和字符编码会进行暴力破解来检测可能的数据处理方式。为提高性能，仅有前100个字节会被暴力破解。<br><br><u>扩展语言支持：</u>在每个阶段，数据的相对字节频率数据会和各种现实语言的平均频率进行对照。默认情况下仅检测约40种互联网常见语言。扩展语言功能将语言数据提高到284种，这使得数据可以匹配更多语言种类，如果它们的频率数据相近的话。<br><br>支持输入一个正则表达式来过滤输出结果（crib）。\",\"infoURL\":\"https://github.com/gchq/CyberChef/wiki/Automatic-detection-of-encoded-data-using-CyberChef-Magic\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"深度\",\"type\":\"number\",\"value\":3},{\"name\":\"加强模式\",\"type\":\"boolean\",\"value\":false},{\"name\":\"扩展语言支持\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Crib（已知明文字符串或正则）\",\"type\":\"string\",\"value\":\"\"}]},\"求平均\":{\"module\":\"Default\",\"description\":\"对一组数字求平均值。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5 .5</code> 计算为 <code>4.75</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Arithmetic_mean\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"求中位数\":{\"module\":\"Default\",\"description\":\"对一组数字求中位数。非数字的值会被忽略。<br><br>例： <code>0x0a 8 1 .5</code> 计算为 <code>4.5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Median\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"Merge\":{\"module\":\"Default\",\"description\":\"将所有分支合并回一个单独进程。Fork的反操作。不勾选“合并全部”则只会抵消最近的Fork/Subsection。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"合并全部\",\"type\":\"boolean\",\"value\":true}]},\"Microsoft Script解码\":{\"module\":\"Default\",\"description\":\"解码Microsoft Encoded Script文件。这些文件通常是VBS (Visual Basic Script)或JS (JScript)文件经过微软的特殊方式编码，带有“.vbe”或“.jse”扩展名。<br><br><b>例如：</b><br><br>编码后：<br><code>#@~^RQAAAA==-mD~sX|:/TP{~J:+dYbxL~@!F@*@!+@*@!&amp;@*eEI@#@&amp;@#@&amp;.jm.raY 214Wv:zms/obI0xEAAA==^#~@</code><br><br>解码为：<br><code>var my_msg = &#34;Testing <1><2><3>!&#34;;\\n\\nVScript.Echo(my_msg);</code>\",\"infoURL\":\"https://wikipedia.org/wiki/JScript.Encode\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"#@~\\\\^.{6}==(.+).{6}==\\\\^#~@\",\"flags\":\"i\",\"args\":[]}]},\"Multiple Bombe\":{\"module\":\"Bletchley\",\"description\":\"Emulation of the Bombe machine used to attack Enigma. This version carries out multiple Bombe runs to handle unknown rotor configurations.<br><br>You should test your menu on the single Bombe operation before running it here. See the description of the Bombe operation for instructions on choosing a crib.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Bombe\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Standard Enigmas\",\"type\":\"populateMultiOption\",\"value\":[{\"name\":\"German Service Enigma (First - 3 rotor)\",\"value\":[\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\\nVZBRGITYUPSDNHLXAWMJQOFECK<A\",\"\",\"AY BR CU DH EQ FS GL IP JX KN MO TZ VW\"]},{\"name\":\"German Service Enigma (Second - 3 rotor)\",\"value\":[\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\\nVZBRGITYUPSDNHLXAWMJQOFECK<A\\nJPGVOUMFYQBENHZRDKASXLICTW<AN\\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN\",\"\",\"AY BR CU DH EQ FS GL IP JX KN MO TZ VW\\nAF BV CP DJ EI GO HY KR LZ MX NW TQ SU\"]},{\"name\":\"German Service Enigma (Third - 4 rotor)\",\"value\":[\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\\nVZBRGITYUPSDNHLXAWMJQOFECK<A\\nJPGVOUMFYQBENHZRDKASXLICTW<AN\\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN\",\"FSOKANUERHMBTIYCWLQPZXVGJD\",\"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV\"]},{\"name\":\"German Service Enigma (Fourth - 4 rotor)\",\"value\":[\"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\\nVZBRGITYUPSDNHLXAWMJQOFECK<A\\nJPGVOUMFYQBENHZRDKASXLICTW<AN\\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN\",\"FSOKANUERHMBTIYCWLQPZXVGJD\",\"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV\\nAR BD CO EJ FN GT HK IV LM PW QZ SX UY\"]},{\"name\":\"User defined\",\"value\":[\"\",\"\",\"\"]}],\"target\":[1,2,3]},{\"name\":\"Main rotors\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"4th rotor\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"Reflectors\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"Crib\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Crib offset\",\"type\":\"number\",\"value\":0},{\"name\":\"Use checking machine\",\"type\":\"boolean\",\"value\":true}]},\"求积\":{\"module\":\"Default\",\"description\":\"对一组数字求积（aka. 乘法）。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5</code> 计算为 <code>40</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Multiplication\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"MurmurHash3\":{\"module\":\"Hashing\",\"description\":\"对给定的输入字符串（可自选种子）生成对应的MurmurHash v3哈希。\",\"infoURL\":\"https://wikipedia.org/wiki/MurmurHash\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"种子\",\"type\":\"number\",\"value\":0},{\"name\":\"转换为有符号数值\",\"type\":\"boolean\",\"value\":false}]},\"NOT\":{\"module\":\"Default\",\"description\":\"对每个字节取反。\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#NOT\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"NT哈希\":{\"module\":\"Crypto\",\"description\":\"NT哈希，有时又叫NTLM哈希，是Windows系统用于存储密码的一种方法。原理为在UTF-16LE编码的输入上执行MD4。由于NTLM哈希在现代硬件设备上非常容易被暴力破解，目前认为其安全性较弱。\",\"infoURL\":\"https://wikipedia.org/wiki/NT_LAN_Manager\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"图像归一化\":{\"module\":\"Image\",\"description\":\"图像色彩归一化（Normalize）。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Unicode正规化\":{\"module\":\"Encodings\",\"description\":\"按照选定的正规形式对Unicode字符执行正规化操作。\",\"infoURL\":\"https://wikipedia.org/wiki/Unicode_equivalence#Normal_forms\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"正规形式\",\"type\":\"option\",\"value\":[\"NFD\",\"NFC\",\"NFKD\",\"NFKC\"]}]},\"Numberwang\":{\"module\":\"Default\",\"description\":\"Based on the popular gameshow by Mitchell and Webb.\",\"infoURL\":\"https://wikipedia.org/wiki/That_Mitchell_and_Webb_Look#Recurring_sketches\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"OR\":{\"module\":\"Default\",\"description\":\"使用给定的Key对输入进行OR（按位或）运算<br>e.g. <code>fe023da5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#OR\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Decimal\",\"Binary\",\"Base64\",\"UTF8\",\"Latin1\"]}]},\"OID转十六进制\":{\"module\":\"PublicKey\",\"description\":\"把对象标识符（object identifier，OID）转换成对应的十六进制字符串。\",\"infoURL\":\"https://wikipedia.org/wiki/Object_identifier\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"偏移检测\":{\"module\":\"Default\",\"description\":\"高亮显示在所有给定内容中位置相同的字符，多个输入由给定的分隔符分隔。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"}]},\"光学字符识别\":{\"module\":\"OCR\",\"description\":\"光学字符识别（英语：Optical Character Recognition，OCR）是指对文本资料的图像文件进行分析识别处理，获取文字及版面信息的过程。<br><br>目前仅支持识别英文。<br><br>支持的图像格式：png、 jpg、bmp、pbm。\",\"infoURL\":\"https://wikipedia.org/wiki/Optical_character_recognition\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"显示置信度\",\"type\":\"boolean\",\"value\":true}]},\"PEM转十六进制\":{\"module\":\"Default\",\"description\":\"把PEM(Privacy Enhanced Mail)格式转换成十六进制DER(Distinguished Encoding Rules)格式字符串。\",\"infoURL\":\"https://wikipedia.org/wiki/Privacy-Enhanced_Mail#Format\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"----BEGIN ([A-Z][A-Z ]+[A-Z])-----\",\"args\":[]}]},\"PGP解密\":{\"module\":\"PGP\",\"description\":\"输入：你想要解密的经过ASCII-armour处理的PGP信息。\\n<br><br>\\n参数：经过ASCII-armour处理的接收者PGP私钥。\\n（如果有口令的话还需要填写口令）\\n<br><br>\\nPGP（英语：Pretty Good Privacy，直译：优良保密协议）是一套用于讯息加密、验证的应用程序。\\n<br><br>\\n此操作使用Keybase实现的PGP。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"接收者私钥\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"私钥口令\",\"type\":\"string\",\"value\":\"\"}]},\"PGP解密并验证\":{\"module\":\"PGP\",\"description\":\"输入：你想要验证的经过ASCII-armour处理的PGP信息。\\n<br><br>\\n参数：经过ASCII-armour处理的签名者PGP公钥\\n和经过ASCII-armour处理的接收者PGP私钥（以及口令，如果有）。\\n<br><br>\\n此操作用PGP来解密并验证数字签名。\\n<br><br>\\nPGP（英语：Pretty Good Privacy，直译：优良保密协议）是一套用于讯息加密、验证的应用程序。\\n<br><br>\\n此操作使用Keybase实现的PGP。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"签名者公钥\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"接收者私钥\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"私钥口令\",\"type\":\"string\",\"value\":\"\"}]},\"PGP加密\":{\"module\":\"PGP\",\"description\":\"输入：你想要加密的信息。\\n<br><br>\\n参数：经过ASCII-armour处理的接收者PGP公钥。\\n<br><br>\\nPGP（英语：Pretty Good Privacy，直译：优良保密协议）是一套用于讯息加密、验证的应用程序。\\n<br><br>\\n此操作使用Keybase实现的PGP。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"接收者公钥\",\"type\":\"text\",\"value\":\"\"}]},\"PGP加密并签名\":{\"module\":\"PGP\",\"description\":\"输入：你想要签名的明文内容。\\n<br><br>\\n参数：经过ASCII-armour处理的签名者私钥（以及口令，如果有）\\n经过ASCII-armour处理的接收者公钥。\\n<br><br>\\n此操作用PGP产生加密的数字签名。\\n<br><br>\\nPGP（英语：Pretty Good Privacy，直译：优良保密协议）是一套用于讯息加密、验证的应用程序。\\n<br><br>\\n此操作使用Keybase实现的PGP。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"签名者私钥\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"私钥口令\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"接收者公钥\",\"type\":\"text\",\"value\":\"\"}]},\"PGP验证\":{\"module\":\"PGP\",\"description\":\"输入：你想要验证的经过ASCII-armour处理的PGP信息。\\n<br><br>\\n参数：经过ASCII-armour处理的签名者PGP公钥。\\n<br><br>\\n此操作解密使用clearsign参数生成的PGP信息\\n<br><br>\\nPGP（英语：Pretty Good Privacy，直译：优良保密协议）是一套用于讯息加密、验证的应用程序。\\n<br><br>\\n此操作使用Keybase实现的PGP。\",\"infoURL\":\"https://wikipedia.org/wiki/Pretty_Good_Privacy\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"签名者公钥\",\"type\":\"text\",\"value\":\"\"}]},\"PHP反序列化\":{\"module\":\"Default\",\"description\":\"对PHP序列化数据进行反序列化，输出JSON。<br><br>此操作不支持 <code>object</code> 标签。<br><br>例如：<br><code>a:2:{s:1:&quot;a&quot;;i:10;i:0;a:1:{s:2:&quot;ab&quot;;b:1;}}</code><br>反序列化为<br><code>{&quot;a&quot;: 10,0: {&quot;ab&quot;: true}}</code><br><br><u>输出合法JSON：</u> JSON不支持整数作为键，但PHP支持。开启此项会将整数转为字符串。同样也会转义反斜杠。\",\"infoURL\":\"http://www.phpinternalsbook.com/classes_objects/serialization.html\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输出合法JSON\",\"type\":\"boolean\",\"value\":true}]},\"P-list查看器\":{\"module\":\"Default\",\"description\":\"在macOS、iOS、NeXTSTEP和GNUstep编程框架中，属性列表文件（Property list file）用于存储序列化对象。属性列表文件使用扩展名.plist，因此通常被称作p-list文件。<br><br>此操作将plist文件展示为人类可读格式。\",\"infoURL\":\"https://wikipedia.org/wiki/Property_list\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"填充行\":{\"module\":\"Default\",\"description\":\"在每一行之前或之后添加特定数量的特定字符。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"位置\",\"type\":\"option\",\"value\":[\"开头\",\"末尾\"]},{\"name\":\"长度\",\"type\":\"number\",\"value\":5},{\"name\":\"字符\",\"type\":\"binaryShortString\",\"value\":\" \"}]},\"解析ASN.1十六进制字符串\":{\"module\":\"PublicKey\",\"description\":\"在电信和计算机网络领域，ASN.1（Abstract Syntax Notation One) 是一套标准，是描述数据的表示、编码、传输、解码的灵活的记法。<br><br>此操作可解析任意的ASN.1数据（必须为十六进制字符串，如果需要可以用“字符转十六进制”操作预处理）并展示结果树。\",\"infoURL\":\"https://wikipedia.org/wiki/Abstract_Syntax_Notation_One\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"起始位置索引\",\"type\":\"number\",\"value\":0},{\"name\":\"截断超过以下长度的八字节字符串\",\"type\":\"number\",\"value\":32}]},\"解析CSR\":{\"module\":\"PublicKey\",\"description\":\"解析X.509证书的证书签名申请（Certificate Signing Request，CSR）数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Certificate_signing_request\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"PEM\"]},{\"name\":\"密钥类型\",\"type\":\"option\",\"value\":[\"RSA\"]},{\"name\":\"严格的ASN.1值长度\",\"type\":\"boolean\",\"value\":true}],\"checks\":[{\"pattern\":\"^-+BEGIN CERTIFICATE REQUEST-+\\\\r?\\\\n[\\\\da-z+/\\\\n\\\\r]+-+END CERTIFICATE REQUEST-+\\\\r?\\\\n?$\",\"flags\":\"i\",\"args\":[\"PEM\"]}]},\"解析颜色代码\":{\"module\":\"Default\",\"description\":\"将标准格式的颜色代码转换成其它标准格式并展示这个颜色。<br><br><strong>示例输入</strong><ul><li><code>#d9edf7</code></li><li><code>rgba(217,237,247,1)</code></li><li><code>hsla(200,65%,91%,1)</code></li><li><code>cmyk(0.12, 0.04, 0.00, 0.03)</code></li></ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Web_colors\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"解析DateTime\":{\"module\":\"Default\",\"description\":\"根据指定的格式与时区解析DateTime字符串。可解析出以下内容：<ul><li>日期</li><li>时间</li><li>上下午 (AM/PM)</li><li>时区</li><li>UTC偏移量</li><li>夏令时</li><li>闰年</li><li>当月天数</li><li>当年的第几天</li><li>星期</li><li>季度</li></ul>不输入任何内容来查看格式示例字符串。\",\"infoURL\":\"https://momentjs.com/docs/#/parsing/string-format/\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"内置格式\",\"type\":\"populateOption\",\"value\":[{\"name\":\"标准日期时间格式\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"美式日期时间格式\",\"value\":\"MM/DD/YYYY HH:mm:ss\"},{\"name\":\"国际日期时间格式\",\"value\":\"YYYY-MM-DD HH:mm:ss\"},{\"name\":\"详尽日期时间格式\",\"value\":\"dddd Do MMMM YYYY HH:mm:ss Z z\"},{\"name\":\"UNIX时间戳 (秒)\",\"value\":\"X\"},{\"name\":\"UNIX时间戳 (毫秒)\",\"value\":\"x\"},{\"name\":\"自动\",\"value\":\"\"}],\"target\":1},{\"name\":\"输入格式\",\"type\":\"binaryString\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"输入时区\",\"type\":\"option\",\"value\":[\"UTC\",\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Addis_Ababa\",\"Africa/Algiers\",\"Africa/Asmara\",\"Africa/Asmera\",\"Africa/Bamako\",\"Africa/Bangui\",\"Africa/Banjul\",\"Africa/Bissau\",\"Africa/Blantyre\",\"Africa/Brazzaville\",\"Africa/Bujumbura\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/Conakry\",\"Africa/Dakar\",\"Africa/Dar_es_Salaam\",\"Africa/Djibouti\",\"Africa/Douala\",\"Africa/El_Aaiun\",\"Africa/Freetown\",\"Africa/Gaborone\",\"Africa/Harare\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Kampala\",\"Africa/Khartoum\",\"Africa/Kigali\",\"Africa/Kinshasa\",\"Africa/Lagos\",\"Africa/Libreville\",\"Africa/Lome\",\"Africa/Luanda\",\"Africa/Lubumbashi\",\"Africa/Lusaka\",\"Africa/Malabo\",\"Africa/Maputo\",\"Africa/Maseru\",\"Africa/Mbabane\",\"Africa/Mogadishu\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Niamey\",\"Africa/Nouakchott\",\"Africa/Ouagadougou\",\"Africa/Porto-Novo\",\"Africa/Sao_Tome\",\"Africa/Timbuktu\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Anguilla\",\"America/Antigua\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/ComodRivadavia\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Aruba\",\"America/Asuncion\",\"America/Atikokan\",\"America/Atka\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Buenos_Aires\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Catamarca\",\"America/Cayenne\",\"America/Cayman\",\"America/Chicago\",\"America/Chihuahua\",\"America/Ciudad_Juarez\",\"America/Coral_Harbour\",\"America/Cordoba\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Dominica\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Ensenada\",\"America/Fort_Nelson\",\"America/Fort_Wayne\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Godthab\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Grenada\",\"America/Guadeloupe\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Indianapolis\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Jujuy\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/Knox_IN\",\"America/Kralendijk\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Louisville\",\"America/Lower_Princes\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Marigot\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Mendoza\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Montreal\",\"America/Montserrat\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Acre\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Rosario\",\"America/Santa_Isabel\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Shiprock\",\"America/Sitka\",\"America/St_Barthelemy\",\"America/St_Johns\",\"America/St_Kitts\",\"America/St_Lucia\",\"America/St_Thomas\",\"America/St_Vincent\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Tortola\",\"America/Vancouver\",\"America/Virgin\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/McMurdo\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/South_Pole\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Arctic/Longyearbyen\",\"Asia/Aden\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Ashkhabad\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Bahrain\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Calcutta\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Chongqing\",\"Asia/Chungking\",\"Asia/Colombo\",\"Asia/Dacca\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Harbin\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Istanbul\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kashgar\",\"Asia/Kathmandu\",\"Asia/Katmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Kuwait\",\"Asia/Macao\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Muscat\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Phnom_Penh\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Rangoon\",\"Asia/Riyadh\",\"Asia/Saigon\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Tel_Aviv\",\"Asia/Thimbu\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ujung_Pandang\",\"Asia/Ulaanbaatar\",\"Asia/Ulan_Bator\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vientiane\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faeroe\",\"Atlantic/Faroe\",\"Atlantic/Jan_Mayen\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/St_Helena\",\"Atlantic/Stanley\",\"Australia/ACT\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Canberra\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/LHI\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/NSW\",\"Australia/North\",\"Australia/Perth\",\"Australia/Queensland\",\"Australia/South\",\"Australia/Sydney\",\"Australia/Tasmania\",\"Australia/Victoria\",\"Australia/West\",\"Australia/Yancowinna\",\"Brazil/Acre\",\"Brazil/DeNoronha\",\"Brazil/East\",\"Brazil/West\",\"CET\",\"CST6CDT\",\"Canada/Atlantic\",\"Canada/Central\",\"Canada/Eastern\",\"Canada/Mountain\",\"Canada/Newfoundland\",\"Canada/Pacific\",\"Canada/Saskatchewan\",\"Canada/Yukon\",\"Chile/Continental\",\"Chile/EasterIsland\",\"Cuba\",\"EET\",\"EST\",\"EST5EDT\",\"Egypt\",\"Eire\",\"Etc/GMT\",\"Etc/GMT+0\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-0\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/GMT0\",\"Etc/Greenwich\",\"Etc/UCT\",\"Etc/UTC\",\"Etc/Universal\",\"Etc/Zulu\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belfast\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Bratislava\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Busingen\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Guernsey\",\"Europe/Helsinki\",\"Europe/Isle_of_Man\",\"Europe/Istanbul\",\"Europe/Jersey\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Kyiv\",\"Europe/Lisbon\",\"Europe/Ljubljana\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Mariehamn\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Nicosia\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Podgorica\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/San_Marino\",\"Europe/Sarajevo\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Skopje\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Tiraspol\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vaduz\",\"Europe/Vatican\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zagreb\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"GB\",\"GB-Eire\",\"GMT\",\"GMT+0\",\"GMT-0\",\"GMT0\",\"Greenwich\",\"HST\",\"Hongkong\",\"Iceland\",\"Indian/Antananarivo\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Comoro\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Mayotte\",\"Indian/Reunion\",\"Iran\",\"Israel\",\"Jamaica\",\"Japan\",\"Kwajalein\",\"Libya\",\"MET\",\"MST\",\"MST7MDT\",\"Mexico/BajaNorte\",\"Mexico/BajaSur\",\"Mexico/General\",\"NZ\",\"NZ-CHAT\",\"Navajo\",\"PRC\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Johnston\",\"Pacific/Kanton\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Midway\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Ponape\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Saipan\",\"Pacific/Samoa\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Truk\",\"Pacific/Wake\",\"Pacific/Wallis\",\"Pacific/Yap\",\"Poland\",\"Portugal\",\"ROC\",\"ROK\",\"Singapore\",\"Turkey\",\"UCT\",\"US/Alaska\",\"US/Aleutian\",\"US/Arizona\",\"US/Central\",\"US/East-Indiana\",\"US/Eastern\",\"US/Hawaii\",\"US/Indiana-Starke\",\"US/Michigan\",\"US/Mountain\",\"US/Pacific\",\"US/Samoa\",\"UTC\",\"Universal\",\"W-SU\",\"WET\",\"Zulu\"]}]},\"解析IP范围\":{\"module\":\"Default\",\"description\":\"输入 CIDR 范围 （例： <code>10.0.0.0/24</code>） 、连字符表示的范围 （例： <code>10.0.0.0 - 10.0.1.0</code>）或一系列的IP和CIDR（回车分隔），此操作会解析输入IP范围的网络信息与列出所有可能的IP地址。<br><br>支持IPv6但不会列出详细地址。\",\"infoURL\":\"https://wikipedia.org/wiki/Subnetwork\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"包括网络信息\",\"type\":\"boolean\",\"value\":true},{\"name\":\"列出所有IP地址\",\"type\":\"boolean\",\"value\":true},{\"name\":\"允许大数据量查询\",\"type\":\"boolean\",\"value\":false}]},\"解析IPv4首部\":{\"module\":\"Default\",\"description\":\"输入IPv4首部（Header）数据，此操作对其进行解析，用易于阅读的格式展示各字段信息。\",\"infoURL\":\"https://wikipedia.org/wiki/IPv4#Header\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]}]},\"解析IPv6地址\":{\"module\":\"Default\",\"description\":\"显示有效IPv6地址的longhand和shorthand版本。<br><br>可识别所有保留范围以及封装/隧道地址如Teredo和6to4。\",\"infoURL\":\"https://wikipedia.org/wiki/IPv6_address\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"解析ObjectID时间戳\":{\"module\":\"Serialise\",\"description\":\"解析MongoDB/BSON ObjectID十六进制时间戳。\",\"infoURL\":\"https://docs.mongodb.com/manual/reference/method/ObjectId.getTimestamp/\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"解析二维码\":{\"module\":\"Image\",\"description\":\"读取图像文件并尝试检测并读取其中Quick Response (QR)二维码的内容。<br><br><u>标准化图像</u><br>在尝试读取前先对图像进行标准化处理。\",\"infoURL\":\"https://wikipedia.org/wiki/QR_code\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"标准化图像\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^(?:\\\\xff\\\\xd8\\\\xff|\\\\x89\\\\x50\\\\x4e\\\\x47|\\\\x47\\\\x49\\\\x46|.{8}\\\\x57\\\\x45\\\\x42\\\\x50|\\\\x42\\\\x4d)\",\"flags\":\"\",\"args\":[false],\"useful\":true}]},\"解析SSH主机密钥\":{\"module\":\"Default\",\"description\":\"解析SSH主机密钥（host key），提取其中字段。<br>支持的密钥类型：<ul><li>ssh-rsa</li><li>ssh-dss</li><li>ecdsa-sha2</li><li>ssh-ed25519</li></ul>密钥可以为十六进制或Base64格式\",\"infoURL\":\"https://wikipedia.org/wiki/Secure_Shell\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"自动\",\"Base64\",\"十六进制\"]}],\"checks\":[{\"pattern\":\"^\\\\s*([A-F\\\\d]{2}[,;:]){15,}[A-F\\\\d]{2}\\\\s*$\",\"flags\":\"i\",\"args\":[\"十六进制\"]}]},\"解析TCP\":{\"module\":\"Default\",\"description\":\"解析TCP首部和载荷（如果有）。\",\"infoURL\":\"https://wikipedia.org/wiki/Transmission_Control_Protocol\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]}]},\"解析TLV\":{\"module\":\"Default\",\"description\":\"把Type-Length-Value (TLV)编码的字符串转换为JSON对象。可选包含一个 <code>Key</code> / <code>Type</code> 字段。 <br><br>标签： Key-Length-Value, KLV, Length-Value, LV\",\"infoURL\":\"https://wikipedia.org/wiki/Type-length-value\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Type/Key大小\",\"type\":\"number\",\"value\":1},{\"name\":\"Length大小\",\"type\":\"number\",\"value\":1},{\"name\":\"使用BER\",\"type\":\"boolean\",\"value\":false}]},\"解析UDP\":{\"module\":\"Default\",\"description\":\"解析UDP首部和载荷（如果有）。\",\"infoURL\":\"https://wikipedia.org/wiki/User_Datagram_Protocol\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]}]},\"解析UNIX文件权限\":{\"module\":\"Default\",\"description\":\"根据UNIX/Linux文件权限字符串（八进制或文本形式），解释具体什么权限赋给了谁。<br><br>输入必须为八进制（例如 <code>755</code>）或文本（例如 <code>drwxr-xr-x</code>）格式。\",\"infoURL\":\"https://wikipedia.org/wiki/File_system_permissions#Traditional_Unix_permissions\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^\\\\s*d[rxw-]{9}\\\\s*$\",\"flags\":\"\",\"args\":[]}]},\"解析URI\":{\"module\":\"URL\",\"description\":\"将复杂的Uniform Resource Identifier (URI)字符串解析成容易阅读的形式。可用于查看有较多参数的Uniform Resource Locator (URL)。\",\"infoURL\":\"https://wikipedia.org/wiki/Uniform_Resource_Identifier\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"解析User Agent\":{\"module\":\"UserAgent\",\"description\":\"尝试对User-Agent字符串中的内容进行解析。\",\"infoURL\":\"https://wikipedia.org/wiki/User_agent\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^(User-Agent:|Mozilla\\\\/)[^\\\\n\\\\r]+\\\\s*$\",\"flags\":\"i\",\"args\":[]}]},\"解析X.509证书\":{\"module\":\"PublicKey\",\"description\":\"X.509是密码学里公钥证书的格式标准。X.509证书已应用在包括TLS/SSL在内的众多网络协议里，同时它也用在很多非在线应用场景里，比如电子签名服务。<br><br>此操作把证书内容显示为人类可读的形式，和openssl命令行的效果类似。<br><br>标签： X509, server hello, handshake\",\"infoURL\":\"https://wikipedia.org/wiki/X.509\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"PEM\",\"DER十六进制\",\"Base64\",\"原始\"]}],\"checks\":[{\"pattern\":\"^-+BEGIN CERTIFICATE-+\\\\r?\\\\n[\\\\da-z+/\\\\n\\\\r]+-+END CERTIFICATE-+\\\\r?\\\\n?$\",\"flags\":\"i\",\"args\":[\"PEM\"]}]},\"播放媒体文件\":{\"module\":\"Default\",\"description\":\"将输入按照音频或视频文件进行播放。<br><br>标签： sound, movie, mp3, mp4, mov, webm, wav, ogg\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始\",\"Base64\",\"十六进制\"]}]},\"幂集\":{\"module\":\"Default\",\"description\":\"计算集合的所有子集\",\"infoURL\":\"https://wikipedia.org/wiki/Power_set\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"Protobuf解码\":{\"module\":\"Protobuf\",\"description\":\"将Protobuf编码的数据解码为JSON表示，使用字段数值作为字段key。<br><br>如果指定了.proto模式文件，数据将会引用模式文件内容进行解码。只会解码一个消息实例。<br><br><u>显示未知字段</u><br>当指定了模式文件时，如果输入数据在模式文件中没有定义，勾选此选项强行显示这些数据。<br><br><u>显示类型</u><br>在字段名称旁边显示其类型。对于未定义的字段，显示其Wire Type和示例类型。\",\"infoURL\":\"https://wikipedia.org/wiki/Protocol_Buffers\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"模式文件（Schema，.proto文本）\",\"type\":\"text\",\"value\":\"\",\"hint\":\"可以直接拖放文件到此位置\",\"rows\":8},{\"name\":\"显示未知字段\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示类型\",\"type\":\"boolean\",\"value\":false}]},\"Protobuf编码\":{\"module\":\"Protobuf\",\"description\":\"使用.proto模式文件把有效的JSON object编码成protobuf字节数组。\",\"infoURL\":\"https://developers.google.com/protocol-buffers/docs/encoding\",\"inputType\":\"JSON\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"模式文件（Schema，.proto文本）\",\"type\":\"text\",\"value\":\"\",\"hint\":\"可以直接拖放文件到此位置\",\"rows\":8}]},\"伪随机数生成器\":{\"module\":\"Ciphers\",\"description\":\"密码学安全伪随机数生成器（CSPRNG）。<br><br>这个操作使用浏览器内置的 <code>crypto.getRandomValues()</code> 方法。如果不可用，则回退到基于Fortuna的随机数算法。\",\"infoURL\":\"https://wikipedia.org/wiki/Pseudorandom_number_generator\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字节数\",\"type\":\"number\",\"value\":32},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"整型\",\"字节数组\",\"原始\"]}]},\"RAKE\":{\"module\":\"Default\",\"description\":\"快速自动关键词提取（Rapid Automatic Keyword Extraction，RAKE）\\n<br><br>\\nRAKE是自然语言处理（NLP）中的一种领域无关的关键词提取算法。\\n<br><br>\\n终止词（Stop words）的列表来自NLTK Python包。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"词分隔符（正则）\",\"type\":\"text\",\"value\":\"\\\\s\"},{\"name\":\"句分隔符（正则）\",\"type\":\"text\",\"value\":\"\\\\.\\\\s|\\\\n\"},{\"name\":\"终止词（Stop Words）\",\"type\":\"text\",\"value\":\"i,me,my,myself,we,our,ours,ourselves,you,you're,you've,you'll,you'd,your,yours,yourself,yourselves,he,him,his,himself,she,she's,her,hers,herself,it,it's,its,itsef,they,them,their,theirs,themselves,what,which,who,whom,this,that,that'll,these,those,am,is,are,was,were,be,been,being,have,has,had,having,do,does',did,doing,a,an,the,and,but,if,or,because,as,until,while,of,at,by,for,with,about,against,between,into,through,during,before,after,above,below,to,from,up,down,in,out,on,off,over,under,again,further,then,once,here,there,when,where,why,how,all,any,both,each,few,more,most,other,some,such,no,nor,not,only,own,same,so,than,too,very,s,t,can,will,just,don,don't,should,should've,now,d,ll,m,o,re,ve,y,ain,aren,aren't,couldn,couldn't,didn,didn't,doesn,doesn't,hadn,hadn't,hasn,hasn't,haven,haven't,isn,isn't,ma,mightn,mightn't,mustn,mustn't,needn,needn't,shan,shan't,shouldn,shouldn't,wasn,wasn't,weren,weren't,won,won't,wouldn,wouldn't\"}]},\"RC2解密\":{\"module\":\"Ciphers\",\"description\":\"RC2（又叫ARC2）是Ron Rivest在1987年发明的对称加密算法。“RC”是“Rivest Cipher”的缩写。<br><br><b>Key:</b> RC2使用变长的key。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV:</b>CBC模式的初始化向量必须是8字节，如果IV留空则会使用ECB模式。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/RC2\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Input\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]},{\"name\":\"Output\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]}]},\"RC2加密\":{\"module\":\"Ciphers\",\"description\":\"RC2（又叫ARC2）是Ron Rivest在1987年发明的对称加密算法。“RC”是“Rivest Cipher”的缩写。<br><br><b>Key:</b> RC2使用变长的key。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV:</b>CBC模式的初始化向量必须是8字节，如果IV留空则会使用ECB模式。<br><br><b>填充：</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/RC2\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Input\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]},{\"name\":\"Output\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]}]},\"RC4\":{\"module\":\"Ciphers\",\"description\":\"RC4（又叫ARC4）是一种广泛使用的流加密算法，由Ron Rivest设计。在很多流行协议中均有应用，如SSL和WEP。RC4加密方法简洁高效，但安全性没有保障。\",\"infoURL\":\"https://wikipedia.org/wiki/RC4\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"加密密码\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"Latin1\",\"十六进制\",\"Base64\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"Latin1\",\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"十六进制\",\"Base64\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"Latin1\",\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"十六进制\",\"Base64\"]}]},\"RC4 Drop\":{\"module\":\"Ciphers\",\"description\":\"由于RC4加密流前部的数个字节随机性不足且泄露关于key的信息，因此丢弃前部数据能提高加密安全性。通常这种优化后的算法称作RC4-drop。\",\"infoURL\":\"https://wikipedia.org/wiki/RC4#Fluhrer,_Mantin_and_Shamir_attack\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"加密密码\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"Latin1\",\"十六进制\",\"Base64\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"Latin1\",\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"十六进制\",\"Base64\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"Latin1\",\"UTF8\",\"UTF16\",\"UTF16LE\",\"UTF16BE\",\"十六进制\",\"Base64\"]},{\"name\":\"Number of dwords to drop\",\"type\":\"number\",\"value\":192}]},\"RIPEMD\":{\"module\":\"Crypto\",\"description\":\"RIPEMD（RACE原始完整性校验讯息摘要）是一种加密哈希函数，由 鲁汶大学 Hans Dobbertin,Antoon Bosselaers 和 Bart Prenee组成的COSIC 研究小组发布于1996年。 <br><br>RIPEMD是以MD4为基础原则所设计的 ，而且其表现与更有名的SHA-1类似。\",\"infoURL\":\"https://wikipedia.org/wiki/RIPEMD\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"320\",\"256\",\"160\",\"128\"]}]},\"ROT13\":{\"module\":\"Default\",\"description\":\"一个简单的凯撒密码，默认情况下把字母偏移13个位置。\",\"infoURL\":\"https://wikipedia.org/wiki/ROT13\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移小写字母\",\"type\":\"boolean\",\"value\":true},{\"name\":\"偏移大写字母\",\"type\":\"boolean\",\"value\":true},{\"name\":\"偏移数字\",\"type\":\"boolean\",\"value\":false},{\"name\":\"偏移数量\",\"type\":\"number\",\"value\":13}]},\"ROT13暴力破解\":{\"module\":\"Default\",\"description\":\"尝试ROT13所有可能的偏移量。<br><br>你可以输入已知的明文部分（Crib）来筛选结果。\",\"infoURL\":\"https://wikipedia.org/wiki/ROT13\",\"inputType\":\"byteArray\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移小写字母\",\"type\":\"boolean\",\"value\":true},{\"name\":\"偏移大写字母\",\"type\":\"boolean\",\"value\":true},{\"name\":\"偏移数字\",\"type\":\"boolean\",\"value\":false},{\"name\":\"取样长度\",\"type\":\"number\",\"value\":100},{\"name\":\"取样偏移\",\"type\":\"number\",\"value\":0},{\"name\":\"输出偏移量\",\"type\":\"boolean\",\"value\":true},{\"name\":\"Crib (已知明文)\",\"type\":\"string\",\"value\":\"\"}]},\"ROT47\":{\"module\":\"Default\",\"description\":\"稍微复杂点的凯撒密码，使用了ASCII里从 33 '!' 到 126 '~'的字符。默认的偏移数量是47。\",\"infoURL\":\"https://wikipedia.org/wiki/ROT13#Variants\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移数量\",\"type\":\"number\",\"value\":47}]},\"ROT47暴力破解\":{\"module\":\"Default\",\"description\":\"尝试ROT47所有可能的偏移量。<br><br>你可以输入已知的明文部分（Crib）来筛选结果。\",\"infoURL\":\"https://wikipedia.org/wiki/ROT13#Variants\",\"inputType\":\"byteArray\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"取样长度\",\"type\":\"number\",\"value\":100},{\"name\":\"取样偏移\",\"type\":\"number\",\"value\":0},{\"name\":\"输出偏移量\",\"type\":\"boolean\",\"value\":true},{\"name\":\"Crib (已知明文)\",\"type\":\"string\",\"value\":\"\"}]},\"ROT8000\":{\"module\":\"Default\",\"description\":\"简单的凯撒密码，把Unicode字符替换成之前或之后的第0x8000个字符。\",\"infoURL\":\"https://rot8000.com/info\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"RSA解密\":{\"module\":\"Ciphers\",\"description\":\"使用PEM格式的RSA私钥解密消息。\",\"infoURL\":\"https://wikipedia.org/wiki/RSA_(cryptosystem)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"RSA私钥 (PEM)\",\"type\":\"text\",\"value\":\"-----BEGIN RSA PRIVATE KEY-----\"},{\"name\":\"密码\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"加密方式\",\"type\":\"argSelector\",\"value\":[{\"name\":\"RSA-OAEP\",\"on\":[3]},{\"name\":\"RSAES-PKCS1-V1_5\",\"off\":[3]},{\"name\":\"RAW\",\"off\":[3]}]},{\"name\":\"消息摘要算法\",\"type\":\"option\",\"value\":[\"SHA-1\",\"MD5\",\"SHA-256\",\"SHA-384\",\"SHA-512\"]}]},\"RSA加密\":{\"module\":\"Ciphers\",\"description\":\"使用PEM格式RSA公钥加密消息。\",\"infoURL\":\"https://wikipedia.org/wiki/RSA_(cryptosystem)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"RSA公钥 (PEM)\",\"type\":\"text\",\"value\":\"-----BEGIN RSA PUBLIC KEY-----\"},{\"name\":\"加密方式\",\"type\":\"argSelector\",\"value\":[{\"name\":\"RSA-OAEP\",\"on\":[2]},{\"name\":\"RSAES-PKCS1-V1_5\",\"off\":[2]},{\"name\":\"RAW\",\"off\":[2]}]},{\"name\":\"消息摘要算法\",\"type\":\"option\",\"value\":[\"SHA-1\",\"MD5\",\"SHA-256\",\"SHA-384\",\"SHA-512\"]}]},\"RSA签名\":{\"module\":\"Ciphers\",\"description\":\"使用PEM编码的RSA密钥签名文本信息。\",\"infoURL\":\"https://wikipedia.org/wiki/RSA_(cryptosystem)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"RSA私钥 (PEM)\",\"type\":\"text\",\"value\":\"-----BEGIN RSA PRIVATE KEY-----\"},{\"name\":\"密码\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"消息摘要算法\",\"type\":\"option\",\"value\":[\"SHA-1\",\"MD5\",\"SHA-256\",\"SHA-384\",\"SHA-512\"]}]},\"RSA验证\":{\"module\":\"Ciphers\",\"description\":\"使用PEM编码的RSA公钥和签名验证文本消息。\",\"infoURL\":\"https://wikipedia.org/wiki/RSA_(cryptosystem)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"RSA公钥 (PEM)\",\"type\":\"text\",\"value\":\"-----BEGIN RSA PUBLIC KEY-----\"},{\"name\":\"消息\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"消息摘要算法\",\"type\":\"option\",\"value\":[\"SHA-1\",\"MD5\",\"SHA-256\",\"SHA-384\",\"SHA-512\"]}]},\"Rabbit\":{\"module\":\"Ciphers\",\"description\":\"Rabbit算法是高速的流密码算法，于2003年发布并在RFC 4503中定义。<br><br>加密算法使用128位长度的key和可选的64位初始化向量（IV）.<br><br>大端序：根据RFC4503和RFC3447的定义<br>小端序：和Crypto++兼容\",\"infoURL\":\"https://wikipedia.org/wiki/Rabbit_(cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"端序\",\"type\":\"option\",\"value\":[\"大端序\",\"小端序\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]}]},\"篱笆密码解密\":{\"module\":\"Ciphers\",\"description\":\"根据提供的篱笆数量和偏移量进行篱笆密码（Rail fence Cipher）解密。\",\"infoURL\":\"https://wikipedia.org/wiki/Rail_fence_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"篱笆数量\",\"type\":\"number\",\"value\":2},{\"name\":\"偏移量\",\"type\":\"number\",\"value\":0}]},\"篱笆密码加密\":{\"module\":\"Ciphers\",\"description\":\"根据提供的篱笆数量和偏移量进行篱笆密码（Rail fence Cipher）加密。\",\"infoURL\":\"https://wikipedia.org/wiki/Rail_fence_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"篱笆数量\",\"type\":\"number\",\"value\":2},{\"name\":\"偏移量\",\"type\":\"number\",\"value\":0}]},\"色板随机化\":{\"module\":\"Image\",\"description\":\"将给定图片中的每种颜色单独进行随机化处理。通常用于显示使用非常相近颜色隐写的文字或符号。\",\"infoURL\":\"https://wikipedia.org/wiki/Indexed_color\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"随机数种子\",\"type\":\"string\",\"value\":\"\"}]},\"Raw Deflate\":{\"module\":\"Compression\",\"description\":\"使用不带头部的deflate算法压缩数据。\",\"infoURL\":\"https://wikipedia.org/wiki/DEFLATE\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩类型\",\"type\":\"option\",\"value\":[\"动态霍夫曼压缩\",\"静态霍夫曼压缩\",\"无压缩 (Store)\"]}]},\"Raw Inflate\":{\"module\":\"Compression\",\"description\":\"解压缩使用无头部deflate算法压缩的数据。\",\"infoURL\":\"https://wikipedia.org/wiki/DEFLATE\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"起始索引\",\"type\":\"number\",\"value\":0},{\"name\":\"起始输出缓冲区尺寸\",\"type\":\"number\",\"value\":0},{\"name\":\"缓冲区扩展类型\",\"type\":\"option\",\"value\":[\"自适应\",\"块\"]},{\"name\":\"解压缩后重置缓冲区尺寸\",\"type\":\"boolean\",\"value\":false},{\"name\":\"验证结果\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"entropyRange\":[7.5,8],\"args\":[0,0,[\"自适应\",\"块\"],false,false]}]},\"Register\":{\"module\":\"Regex\",\"description\":\"从输入中提取数据并存储在“寄存器（Register）”中，用于作为变量传递到下面的操作参数中。使用正则表达式捕获组来选择需要提取的数据。<br><br>在其它操作的参数中使用<code>$Rn</code>（n是寄存器编号，从0开始）来访问存储的值。<br><br>例如：<br>输入：<code>Test</code><br>提取规则：<code>(.*)</code><br>参数：<code>$R0</code>就代表<code>Test</code><br><br>寄存器语法可以用反斜线来转义。例如：<code>\\\\$R0</code>代表字符<code>$R0</code>而不是<code>Test</code>。\",\"infoURL\":\"https://wikipedia.org/wiki/Regular_expression#Syntax\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"提取规则\",\"type\":\"binaryString\",\"value\":\"([\\\\s\\\\S]*)\"},{\"name\":\"大小写不敏感（i）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"多行匹配（m）\",\"type\":\"boolean\",\"value\":false},{\"name\":\"点允许匹配换行符（s）\",\"type\":\"boolean\",\"value\":false}]},\"正则表达式\":{\"module\":\"Regex\",\"description\":\"用自定义的正则表达式(regex)在输入内容中执行查找。也可以在内置的正则表达式模板中选择一个。<br><br>支持扩展正则语法，如“点(.)匹配所有字符”、命名匹配组，完整Unicode支持（包括 <code>\\\\p{}</code> 类别以及Astral平面字符）和递归匹配。\",\"infoURL\":\"https://wikipedia.org/wiki/Regular_expression\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"内置正则\",\"type\":\"populateOption\",\"value\":[{\"name\":\"自定义\",\"value\":\"\"},{\"name\":\"IPv4地址\",\"value\":\"(?:(?:\\\\d|[01]?\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d|\\\\d)(?:\\\\/\\\\d{1,2})?\"},{\"name\":\"IPv6地址\",\"value\":\"((?=.*::)(?!.*::.+::)(::)?([\\\\dA-Fa-f]{1,4}:(:|\\\\b)|){5}|([\\\\dA-Fa-f]{1,4}:){6})((([\\\\dA-Fa-f]{1,4}((?!\\\\3)::|:\\\\b|(?![\\\\dA-Fa-f])))|(?!\\\\2\\\\3)){2}|(((2[0-4]|1\\\\d|[1-9])?\\\\d|25[0-5])\\\\.?\\\\b){4})\"},{\"name\":\"Email地址\",\"value\":\"(?:[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x21\\\\x23-\\\\x5b\\\\x5d-\\\\x7f]|\\\\[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0e-\\\\x7f])*\\\")@(?:(?:[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9](?:[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFF-a-z0-9-]*[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9])?\\\\.)+[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9](?:[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9-]*[\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFFa-z0-9])?|\\\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\\\.){3}\\\\])\"},{\"name\":\"URL\",\"value\":\"([A-Za-z]+://)([-\\\\w]+(?:\\\\.\\\\w[-\\\\w]*)+)(:\\\\d+)?(/[^.!,?\\\"<>\\\\[\\\\]{}\\\\s\\\\x7F-\\\\xFF]*(?:[.!,?]+[^.!,?\\\"<>\\\\[\\\\]{}\\\\s\\\\x7F-\\\\xFF]+)*)?\"},{\"name\":\"域名\",\"value\":\"\\\\b((?=[a-z0-9-]{1,63}\\\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,63}\\\\b\"},{\"name\":\"Windows文件路径\",\"value\":\"([A-Za-z]):\\\\\\\\((?:[A-Za-z\\\\d][A-Za-z\\\\d\\\\- \\\\x27_\\\\(\\\\)~]{0,61}\\\\\\\\?)*[A-Za-z\\\\d][A-Za-z\\\\d\\\\- \\\\x27_\\\\(\\\\)]{0,61})(\\\\.[A-Za-z\\\\d]{1,6})?\"},{\"name\":\"UNIX文件路径\",\"value\":\"(?:/[A-Za-z\\\\d.][A-Za-z\\\\d\\\\-.]{0,61})+\"},{\"name\":\"MAC地址\",\"value\":\"[A-Fa-f\\\\d]{2}(?:[:-][A-Fa-f\\\\d]{2}){5}\"},{\"name\":\"UUID\",\"value\":\"[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}\"},{\"name\":\"日期 (yyyy-mm-dd)\",\"value\":\"((?:19|20)\\\\d\\\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])\"},{\"name\":\"日期 (dd/mm/yyyy)\",\"value\":\"(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.]((?:19|20)\\\\d\\\\d)\"},{\"name\":\"日期 (mm/dd/yyyy)\",\"value\":\"(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.]((?:19|20)\\\\d\\\\d)\"},{\"name\":\"字符串\",\"value\":\"[A-Za-z\\\\d/\\\\-:.,_$%\\\\x27\\\"()<>= !\\\\[\\\\]{}@]{4,}\"}],\"target\":1},{\"name\":\"正则\",\"type\":\"text\",\"value\":\"\"},{\"name\":\"忽略大小写\",\"type\":\"boolean\",\"value\":true},{\"name\":\"^ 和 $ 按行匹配\",\"type\":\"boolean\",\"value\":true},{\"name\":\"点(.)匹配所有字符\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Unicode支持\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Astral支持\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示匹配总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"高亮匹配\",\"列出匹配\",\"列出匹配组\",\"列出匹配和对应匹配组\"]}]},\"移除变音符号\":{\"module\":\"Default\",\"description\":\"将带有变音符号的字符转换为对应不带变音符号的拉丁字母。带有变音符号的字符原理上是使用了Unicode结合字符，所以相同原理的下划线和删除线也会一并被移除。\",\"infoURL\":\"https://wikipedia.org/wiki/Diacritic\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"移除EXIF\":{\"module\":\"Image\",\"description\":\"从JPEG图片移除EXIF数据。\\n<br><br>\\n照片的EXIF数据通常包括图像本身以及拍摄设备的信息。\",\"infoURL\":\"https://wikipedia.org/wiki/Exif\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"移除行号\":{\"module\":\"Default\",\"description\":\"在输出内容中移除行号（仅限很容易被检测到的格式）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"移除空字节\":{\"module\":\"Default\",\"description\":\"从输入内容中移除所有的空字节（<code>0x00</code>）。\",\"infoURL\":null,\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"移除空白字符\":{\"module\":\"Default\",\"description\":\"从输入文本中移除空格、回车（CR）、换行（LF）、制表符（Tab）和换页（FF）。<br><br>此操作也支持移除英文句点（.），因为有时句点用于表示ASCII中无法显示的字符。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"空格\",\"type\":\"boolean\",\"value\":true},{\"name\":\"回车（CR，\\\\r）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"换行（LF，\\\\n）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"制表符（Tab，\\\\t）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"换页符(FF，\\\\f)\",\"type\":\"boolean\",\"value\":true},{\"name\":\"英文句点（.）\",\"type\":\"boolean\",\"value\":false}]},\"渲染图像\":{\"module\":\"Image\",\"description\":\"将输入内容显示成图像。支持以下格式：<br><br><ul><li>jpg/jpeg</li><li>png</li><li>gif</li><li>webp</li><li>bmp</li><li>ico</li></ul>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始\",\"Base64\",\"十六进制\"]}],\"checks\":[{\"pattern\":\"^(?:\\\\xff\\\\xd8\\\\xff|\\\\x89\\\\x50\\\\x4e\\\\x47|\\\\x47\\\\x49\\\\x46|.{8}\\\\x57\\\\x45\\\\x42\\\\x50|\\\\x42\\\\x4d)\",\"flags\":\"\",\"args\":[\"原始\"],\"useful\":true,\"output\":{\"mime\":\"image\"}}]},\"渲染Markdown\":{\"module\":\"Code\",\"description\":\"将输入的Markdown渲染为HTML。HTML不会直接被渲染，防止XSS攻击。\",\"infoURL\":\"https://wikipedia.org/wiki/Markdown\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"自动将URL转换为链接\",\"type\":\"boolean\",\"value\":false},{\"name\":\"开启语法高亮\",\"type\":\"boolean\",\"value\":true}]},\"图像尺寸修改\":{\"module\":\"Image\",\"description\":\"将图像尺寸变更为给定的高和宽。\",\"infoURL\":\"https://wikipedia.org/wiki/Image_scaling\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"宽度\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"高度\",\"type\":\"number\",\"value\":100,\"min\":1},{\"name\":\"单位\",\"type\":\"option\",\"value\":[\"像素\",\"百分比\"]},{\"name\":\"保持长宽比\",\"type\":\"boolean\",\"value\":false},{\"name\":\"缩放插值算法\",\"type\":\"option\",\"value\":[\"临近\",\"双线性\",\"双三次\",\"Hermite\",\"Bezier\"],\"defaultIndex\":1}]},\"Return\":{\"module\":\"Default\",\"description\":\"结束此流程的操作运行。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[]},\"反转\":{\"module\":\"Default\",\"description\":\"反转字符串。\",\"infoURL\":null,\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"粒度\",\"type\":\"option\",\"value\":[\"字节\",\"字符\",\"行\"],\"defaultIndex\":1}]},\"Rison解码\":{\"module\":\"Encodings\",\"description\":\"Rison是一种紧凑的数据序列化格式，专门为能在URI中使用进行了优化。Rison在JSON的基础上进行了少量改进，使得序列化数据在URI编码后看起来十分直观。Rison表示的数据结构和JSON是一致的，因此数据可以在两种格式间无损互转。\",\"infoURL\":\"https://github.com/Nanonid/rison\",\"inputType\":\"string\",\"outputType\":\"JSON\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"解码选项\",\"type\":\"Option\",\"value\":[\"普通解码\",\"解码为对象（O-Rison）\",\"解码为数组（A-Rison）\"]}]},\"Rison编码\":{\"module\":\"Encodings\",\"description\":\"Rison是一种紧凑的数据序列化格式，专门为能在URI中使用进行了优化。Rison在JSON的基础上进行了少量改进，使得序列化数据在URI编码后看起来十分直观。Rison表示的数据结构和JSON是一致的，因此数据可以在两种格式间无损互转。\",\"infoURL\":\"https://github.com/Nanonid/rison\",\"inputType\":\"JSON\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码选项\",\"type\":\"Option\",\"value\":[\"普通编码\",\"编码为对象（O-Rison）\",\"编码为数组（A-Rison）\",\"编码为URI\"]}]},\"兽音译者解密\":{\"module\":\"Default\",\"description\":\"把各种“嗷呜啊”解密为原始文本，支持自定义字典。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字典（4个字符）\",\"type\":\"editableOption\",\"value\":[{\"name\":\"默认\",\"value\":\"嗷呜啊~\"},{\"name\":\"自定义\",\"value\":\"\"}]}]},\"兽音译者加密\":{\"module\":\"Default\",\"description\":\"把输入的文本加密为各种“嗷呜啊”，支持自定义字典。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"字典（4个字符）\",\"type\":\"editableOption\",\"value\":[{\"name\":\"默认\",\"value\":\"嗷呜啊~\"},{\"name\":\"自定义\",\"value\":\"\"}]}]},\"旋转图像\":{\"module\":\"Image\",\"description\":\"按给定的角度旋转图像。\",\"infoURL\":\"\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"旋转角度\",\"type\":\"number\",\"value\":90}]},\"循环左移\":{\"module\":\"Default\",\"description\":\"将每个字节按照给定的偏移量循环左移，可选择是否进位。当前只支持8位数值。\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":1},{\"name\":\"进位\",\"type\":\"boolean\",\"value\":false}]},\"循环右移\":{\"module\":\"Default\",\"description\":\"将每个字节按照给定的偏移量循环右移，可选择是否进位。当前只支持8位数值。\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"偏移量\",\"type\":\"number\",\"value\":1},{\"name\":\"进位\",\"type\":\"boolean\",\"value\":false}]},\"SHA0\":{\"module\":\"Crypto\",\"description\":\"SHA最初载明的算法于1993年发布，称做安全散列标准（Secure Hash Standard），FIPS PUB 180。这个版本现在常被称为SHA-0。它在发布之后很快就被NSA撤回，并且由1995年发布的修订版本FIPS PUB 180-1（通常称为SHA-1）取代。此算法默认进行80轮运算。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-1#SHA-0\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"轮数\",\"type\":\"number\",\"value\":80,\"min\":16}]},\"SHA1\":{\"module\":\"Crypto\",\"description\":\"SHA-1（英语：Secure Hash Algorithm 1，中文名：安全散列算法1）是一种密码散列函数，美国国家安全局设计，并由美国国家标准技术研究所（NIST）发布为联邦资料处理标准（FIPS）。SHA-1是SHA系列算法中最常见的一种，广泛用于安全应用与协议中。<br><br>2020年，针对SHA-1的选择前缀冲突攻击已经实际可行。此算法默认进行80轮运算。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-1\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"轮数\",\"type\":\"number\",\"value\":80,\"min\":16}]},\"SHA2\":{\"module\":\"Crypto\",\"description\":\"SHA-2，名称来自于安全散列算法2（英语：Secure Hash Algorithm 2）的缩写，一种密码散列函数算法标准，由美国国家安全局研发[3]，由美国国家标准与技术研究院（NIST）在2001年发布。属于SHA算法之一，是SHA-1的后继者。其下又可再分为六个不同的算法标准，包括了：SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224、SHA-512/256。<br><br><ul><li>SHA-512操作于64位字长。</li><li>SHA-256操作于32位字长。</li><li>SHA-384和SHA-512基本相同，但截断到了384字节。</li><li>SHA-224和SHA-256基本相同，但截断到了224字节。</li><li>SHA-512/224和SHA-512/256是SHA-512的截断版本，但初始值使用记载于Federal Information Processing Standards (FIPS)的PUB 180-4文档中的方法计算。</li></ul>此算法对于SHA256系列默认进行64轮运算，对SHA512系列默认160轮。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-2\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"argSelector\",\"value\":[{\"name\":\"512\",\"on\":[2],\"off\":[1]},{\"name\":\"384\",\"on\":[2],\"off\":[1]},{\"name\":\"256\",\"on\":[1],\"off\":[2]},{\"name\":\"224\",\"on\":[1],\"off\":[2]},{\"name\":\"512/256\",\"on\":[2],\"off\":[1]},{\"name\":\"512/224\",\"on\":[2],\"off\":[1]}]},{\"name\":\"轮数\",\"type\":\"number\",\"value\":64,\"min\":16},{\"name\":\"轮数\",\"type\":\"number\",\"value\":160,\"min\":32}]},\"SHA3\":{\"module\":\"Crypto\",\"description\":\"SHA-3第三代安全散列算法(Secure Hash Algorithm 3)在2015年8月5日由 NIST 通过 FIPS 202 正式发表。<br><br>SHA-3是Keccak系列算法的子集。Keccak是由 Guido Bertoni，Joan Daemen，Michaël Peeters，以及Gilles Van Assche在RadioGatún上设计的哈希算法。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-3\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"512\",\"384\",\"256\",\"224\"]}]},\"SIGABA\":{\"module\":\"Bletchley\",\"description\":\"Encipher/decipher with the WW2 SIGABA machine. <br><br>SIGABA, otherwise known as ECM Mark II, was used by the United States for message encryption during WW2 up to the 1950s. It was developed in the 1930s by the US Army and Navy, and has up to this day never been broken. Consisting of 15 rotors: 5 cipher rotors and 10 rotors (5 control rotors and 5 index rotors) controlling the stepping of the cipher rotors, the rotor stepping for SIGABA is much more complex than other rotor machines of its time, such as Enigma. All example rotor wirings are random example sets.<br><br>To configure rotor wirings, for the cipher and control rotors enter a string of letters which map from A to Z, and for the index rotors enter a sequence of numbers which map from 0 to 9. Note that encryption is not the same as decryption, so first choose the desired mode. <br><br> Note: Whilst this has been tested against other software emulators, it has not been tested against hardware.\",\"infoURL\":\"https://wikipedia.org/wiki/SIGABA\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"1st (left-hand) cipher rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"1st cipher rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"1st cipher rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"2nd cipher rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"2nd cipher rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"2nd cipher rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"3rd (middle) cipher rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"3rd cipher rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"3rd cipher rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"4th cipher rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"4th cipher rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"4th cipher rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"5th (right-hand) cipher rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"5th cipher rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"5th cipher rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"1st (left-hand) control rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"1st control rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"1st control rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"2nd control rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"2nd control rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"2nd control rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"3rd (middle) control rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"3rd control rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"3rd control rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"4th control rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"4th control rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"4th control rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"5th (right-hand) control rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"SRGWANHPJZFXVIDQCEUKBYOLMT\"},{\"name\":\"Example 2\",\"value\":\"THQEFSAZVKJYULBODCPXNIMWRG\"},{\"name\":\"Example 3\",\"value\":\"XDTUYLEVFNQZBPOGIRCSMHWKAJ\"},{\"name\":\"Example 4\",\"value\":\"LOHDMCWUPSTNGVXYFJREQIKBZA\"},{\"name\":\"Example 5\",\"value\":\"ERXWNZQIJYLVOFUMSGHTCKPBDA\"},{\"name\":\"Example 6\",\"value\":\"FQECYHJIOUMDZVPSLKRTGWXBAN\"},{\"name\":\"Example 7\",\"value\":\"TBYIUMKZDJSOPEWXVANHLCFQGR\"},{\"name\":\"Example 8\",\"value\":\"QZUPDTFNYIAOMLEBWJXCGHKRSV\"},{\"name\":\"Example 9\",\"value\":\"CZWNHEMPOVXLKRSIDGJFYBTQAU\"},{\"name\":\"Example 10\",\"value\":\"ENPXJVKYQBFZTICAGMOHWRLDUS\"}]},{\"name\":\"5th control rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"5th control rotor intial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"1st (left-hand) index rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"6201348957\"},{\"name\":\"Example 2\",\"value\":\"6147253089\"},{\"name\":\"Example 3\",\"value\":\"8239647510\"},{\"name\":\"Example 4\",\"value\":\"7194835260\"},{\"name\":\"Example 5\",\"value\":\"4873205916\"}]},{\"name\":\"1st index rotor intial value\",\"type\":\"option\",\"value\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{\"name\":\"2nd index rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"6201348957\"},{\"name\":\"Example 2\",\"value\":\"6147253089\"},{\"name\":\"Example 3\",\"value\":\"8239647510\"},{\"name\":\"Example 4\",\"value\":\"7194835260\"},{\"name\":\"Example 5\",\"value\":\"4873205916\"}]},{\"name\":\"2nd index rotor intial value\",\"type\":\"option\",\"value\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{\"name\":\"3rd (middle) index rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"6201348957\"},{\"name\":\"Example 2\",\"value\":\"6147253089\"},{\"name\":\"Example 3\",\"value\":\"8239647510\"},{\"name\":\"Example 4\",\"value\":\"7194835260\"},{\"name\":\"Example 5\",\"value\":\"4873205916\"}]},{\"name\":\"3rd index rotor intial value\",\"type\":\"option\",\"value\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{\"name\":\"4th index rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"6201348957\"},{\"name\":\"Example 2\",\"value\":\"6147253089\"},{\"name\":\"Example 3\",\"value\":\"8239647510\"},{\"name\":\"Example 4\",\"value\":\"7194835260\"},{\"name\":\"Example 5\",\"value\":\"4873205916\"}]},{\"name\":\"4th index rotor intial value\",\"type\":\"option\",\"value\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{\"name\":\"5th (right-hand) index rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"6201348957\"},{\"name\":\"Example 2\",\"value\":\"6147253089\"},{\"name\":\"Example 3\",\"value\":\"8239647510\"},{\"name\":\"Example 4\",\"value\":\"7194835260\"},{\"name\":\"Example 5\",\"value\":\"4873205916\"}]},{\"name\":\"5th index rotor intial value\",\"type\":\"option\",\"value\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{\"name\":\"SIGABA mode\",\"type\":\"option\",\"value\":[\"Encrypt\",\"Decrypt\"]}]},\"SM3\":{\"module\":\"Crypto\",\"description\":\"SM3是中华人民共和国政府采用的一种密码散列函数标准，前身为SCH4杂凑算法，由国家密码管理局于2010年12月17日发布，相关标准为“GM/T 0004-2012 《SM3密码杂凑算法》”。2016年，成为中国国家密码标准（GB/T 32905-2016）。此算法默认进行64轮运算，长度256位。\",\"infoURL\":\"https://wikipedia.org/wiki/SM3_(hash_function)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"number\",\"value\":256},{\"name\":\"轮数\",\"type\":\"number\",\"value\":64,\"min\":16}]},\"SM4解密\":{\"module\":\"Ciphers\",\"description\":\"SM4是128位的分组密码，2016年8月，成为中国国家密码标准（GB/T 32907-2016）。\",\"infoURL\":\"https://wikipedia.org/wiki/SM4_(cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\",\"CBC/NoPadding\",\"ECB/NoPadding\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]}]},\"SM4加密\":{\"module\":\"Ciphers\",\"description\":\"SM4是128位的分组密码，2016年8月，成为中国国家密码标准（GB/T 32907-2016）。支持多种加密模式。当使用CBC或ECB模式时，使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/SM4_(cipher)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]}]},\"SQL美化\":{\"module\":\"Code\",\"description\":\"为Structured Query Language (SQL)代码添加缩进与美化。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩进\",\"type\":\"binaryShortString\",\"value\":\"\\\\t\"}]},\"SQL压缩\":{\"module\":\"Code\",\"description\":\"压缩Structured Query Language (SQL)代码（Minify/Uglify）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"SSDEEP\":{\"module\":\"Crypto\",\"description\":\"SSDEEP是用于计算基于内容分割的分片哈希（Context Triggered Piecewise Hash, CTPH）的程序。CTPH也被叫做模糊哈希，可以用来检测数据同源性。例如几段具有相同内容片段的数据，相同片段间的其它内容和长度不同，但CTPH的计算结果相近。<br><br>SSDEEP哈希现在广泛用于简单的辨识目的（例如VirusTotal的“Basic Properties”）。尽管有“更好”的模糊哈希算法，SSDEEP依然是日常使用首选，得益于它的运算速度，以及它已经成为一个事实标准。<br><br>此操作本质上与下面的CTPH操作是相同的，只是输出格式不同。\",\"infoURL\":\"https://forensics.wiki/ssdeep\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"SUB\":{\"module\":\"Default\",\"description\":\"使用给定的Key对输入进行SUB（按位减）操作。(e.g. <code>fe023da5</code>), MOD 255\",\"infoURL\":\"https://wikipedia.org/wiki/Bitwise_operation#Bitwise_operators\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Decimal\",\"Binary\",\"Base64\",\"UTF8\",\"Latin1\"]}]},\"Salsa20\":{\"module\":\"Ciphers\",\"description\":\"Salsa20是一种流加密算法，由丹尼尔·J·伯恩斯坦提交到eSTREAM。Salsa20/8和Salsa20/12是加密轮数减少的版本。Salsa20和ChaCha流加密算法有着紧密联系。<br><br><b>密钥：</b> Salsa20使用16或32字节（128或256位）长度的密钥。<br><br><b>Nonce：</b> Salsa20使用8字节（64位）长度的nonce。<br><br><b>计数：</b> Salsa使用8字节（64位）长度的计数。计数在流的起始处为0，每64字节递增。\",\"infoURL\":\"https://wikipedia.org/wiki/Salsa20\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Nonce\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\",\"整数\"]},{\"name\":\"计数\",\"type\":\"number\",\"value\":0,\"min\":0},{\"name\":\"轮数\",\"type\":\"option\",\"value\":[\"20\",\"12\",\"8\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]}]},\"扫描嵌入文件\":{\"module\":\"Default\",\"description\":\"在输入内容中检测魔术字节（Magic bytes）来扫描潜在的嵌入文件。此操作容易误报。<br><br>警告：超过100KB的文件可能会需要<strong>非常长</strong>的时间处理。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_file_signatures\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"图片\",\"type\":\"boolean\",\"value\":true},{\"name\":\"视频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"音频\",\"type\":\"boolean\",\"value\":true},{\"name\":\"文档\",\"type\":\"boolean\",\"value\":true},{\"name\":\"应用\",\"type\":\"boolean\",\"value\":true},{\"name\":\"Archives\",\"type\":\"boolean\",\"value\":true},{\"name\":\"其它\",\"type\":\"boolean\",\"value\":true}]},\"散点图\":{\"module\":\"Charts\",\"description\":\"将横纵坐标数据绘制为图表上的点。\",\"infoURL\":\"https://wikipedia.org/wiki/Scatter_plot\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"记录分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\"]},{\"name\":\"字段分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"Tab\"]},{\"name\":\"使用表头作为标签\",\"type\":\"boolean\",\"value\":true},{\"name\":\"X轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Y轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"颜色\",\"type\":\"string\",\"value\":\"black\"},{\"name\":\"点半径\",\"type\":\"number\",\"value\":10},{\"name\":\"使用第三列的颜色\",\"type\":\"boolean\",\"value\":false}]},\"Scrypt\":{\"module\":\"Crypto\",\"description\":\"scrypt（念作“ess crypt”），是加拿大计算机科学家暨计算机安全研究人员科林·珀西瓦尔（Colin Percival）于2009年所发明的密钥派生函数，当初设计用在他所创立的Tarsnap服务上。设计时考虑到大规模的客制硬件攻击而刻意设计需要大量内存运算。2016年，scrypt算法发布在RFC 7914。<br><br>在输入区输入口令来生成对应的哈希值。\",\"infoURL\":\"https://wikipedia.org/wiki/Scrypt\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"盐\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Base64\",\"UTF8\",\"Latin1\"]},{\"name\":\"迭代次数(N)\",\"type\":\"number\",\"value\":16384},{\"name\":\"内存因子(r)\",\"type\":\"number\",\"value\":8},{\"name\":\"并行因子(p)\",\"type\":\"number\",\"value\":1},{\"name\":\"Key长度\",\"type\":\"number\",\"value\":64}]},\"折线图\":{\"module\":\"Charts\",\"description\":\"时分系列图（Time series graph）是折线图的一种，用于表示在给定时间范围内的不同测量值。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"记录分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\"]},{\"name\":\"字段分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"Tab\"]},{\"name\":\"X轴标签\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"点半径\",\"type\":\"number\",\"value\":1},{\"name\":\"数据系列颜色\",\"type\":\"string\",\"value\":\"mediumseagreen, dodgerblue, tomato\"}]},\"补集\":{\"module\":\"Default\",\"description\":\"计算集合的补集（相对差集）。\",\"infoURL\":\"https://wikipedia.org/wiki/Complement_(set_theory)#Relative_complement\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"集合分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"交集\":{\"module\":\"Default\",\"description\":\"计算两个集合的交集。\",\"infoURL\":\"https://wikipedia.org/wiki/Intersection_(set_theory)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"集合分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"并集\":{\"module\":\"Default\",\"description\":\"计算两个集合的并集。\",\"infoURL\":\"https://wikipedia.org/wiki/Union_(set_theory)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"集合分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"Shake\":{\"module\":\"Crypto\",\"description\":\"Shake是SHA-3算法的一个可扩展输出函数（Extendable Output Function, XOF），Keccak系列算法之一，允许可变的输出长度。\",\"infoURL\":\"https://wikipedia.org/wiki/SHA-3#Instances\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"容量（Capacity）\",\"type\":\"option\",\"value\":[\"256\",\"128\"]},{\"name\":\"长度\",\"type\":\"number\",\"value\":512}]},\"锐化图像\":{\"module\":\"Image\",\"description\":\"锐化图像（钝化蒙版，USM）。\",\"infoURL\":\"https://wikipedia.org/wiki/Unsharp_masking\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"半径\",\"type\":\"number\",\"value\":2,\"min\":1},{\"name\":\"强度\",\"type\":\"number\",\"value\":1,\"min\":0,\"step\":0.1},{\"name\":\"阈值\",\"type\":\"number\",\"value\":10,\"min\":0,\"max\":100}]},\"显示Base64偏移形式\":{\"module\":\"Default\",\"description\":\"当一个字符串被包含在其他数据中间一起被Base64编码的时候，根据字符串所在的位置，可能有三种不同的编码结果。<br><br>此操作会显示三种不同结果，用于后期匹配。\",\"infoURL\":\"https://wikipedia.org/wiki/Base64#Output_padding\",\"inputType\":\"byteArray\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"binaryString\",\"value\":\"A-Za-z0-9+/=\"},{\"name\":\"显示可变字符与填充位\",\"type\":\"boolean\",\"value\":true},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"原始字符串\",\"Base64\"]}]},\"在地图上显示\":{\"module\":\"Hashing\",\"description\":\"在网页地图上展示坐标位置<br><br>坐标会被转换成度数格式后在地图上显示。<br><br>支持的格式：<ul><li>度分秒 (DMS)</li><li>度分 (DDM)</li><li>度数 (DD)</li><li>Geohash</li><li>军事格网参考系统 (MGRS)</li><li>地形测量局国家格网参考系统 (OSNG)</li><li>通用横轴墨卡托投影 (UTM)</li></ul><br>此操作无法离线使用。\",\"infoURL\":\"https://foundation.wikimedia.org/wiki/Maps_Terms_of_Use\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩放级别\",\"type\":\"number\",\"value\":13},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"自动\",\"度分秒\",\"度分\",\"度数\",\"Geohash\",\"军事格网参考系统\",\"地形测量局国家格网参考系统\",\"通用横轴墨卡托投影\"]},{\"name\":\"输入分隔符\",\"type\":\"option\",\"value\":[\"自动\",\"方向在前\",\"方向在后\",\"\\\\n\",\"逗号\",\"分号\",\"冒号\"]}]},\"乱序\":{\"module\":\"Default\",\"description\":\"对输入元素随机重排。.\",\"infoURL\":\"https://wikipedia.org/wiki/Shuffling\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]}]},\"Sleep\":{\"module\":\"Default\",\"description\":\"Sleep操作让流程执行时在等待给定的毫秒数后继续。\",\"infoURL\":null,\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"时长 (ms)\",\"type\":\"number\",\"value\":1000}]},\"Snefru\":{\"module\":\"Crypto\",\"description\":\"Snefru是由Ralph Merkle于1990年在Xerox PARC工作时设计的哈希算法。此算法支持128位和256位长度的输出。它的名字来源于埃及法老斯尼夫鲁（Sneferu），和该作者的Khufu和Khafre块加密算法采用了相同的命名方式。<br><br>Snefru原始设计的安全漏洞由Eli Biham和Adi Shamir发现，他们使用差分密码分析找到了哈希碰撞。后续该算法通过将计算轮数从2提高到8次来解决此问题。\",\"infoURL\":\"https://wikipedia.org/wiki/Snefru\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"number\",\"value\":128,\"min\":32,\"max\":480,\"step\":32},{\"name\":\"轮数\",\"type\":\"option\",\"value\":[\"8\",\"4\",\"2\"]}]},\"排序\":{\"module\":\"Default\",\"description\":\"按字母顺序对给定分隔符分隔的字符串进行排序。<br><br>IP地址排序仅限IPv4。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]},{\"name\":\"反向排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"顺序\",\"type\":\"option\",\"value\":[\"字母顺序（区分大小写）\",\"字母顺序（不区分大小写）\",\"IP地址\",\"数字\",\"数字（十六进制）\",\"长度\"]}]},\"拆分\":{\"module\":\"Default\",\"description\":\"使用给定的分隔符拆分字符串。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Split delimiter\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"逗号\",\"value\":\",\"},{\"name\":\"空格\",\"value\":\" \"},{\"name\":\"换行\",\"value\":\"\\\\n\"},{\"name\":\"CRLF\",\"value\":\"\\\\r\\\\n\"},{\"name\":\"分号\",\"value\":\";\"},{\"name\":\"冒号\",\"value\":\":\"},{\"name\":\"无\",\"value\":\"\"}]},{\"name\":\"Join delimiter\",\"type\":\"editableOptionShort\",\"value\":[{\"name\":\"换行\",\"value\":\"\\\\n\"},{\"name\":\"CRLF\",\"value\":\"\\\\r\\\\n\"},{\"name\":\"空格\",\"value\":\" \"},{\"name\":\"逗号\",\"value\":\",\"},{\"name\":\"分号\",\"value\":\";\"},{\"name\":\"冒号\",\"value\":\":\"},{\"name\":\"无\",\"value\":\"\"}]}]},\"色彩通道分离\":{\"module\":\"Image\",\"description\":\"将给定图像分离成红、绿、蓝色通道。\",\"infoURL\":\"https://wikipedia.org/wiki/Channel_(digital_image)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"求标准差\":{\"module\":\"Default\",\"description\":\"对一组数字求标准差。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5</code> 计算出 <code>4.089281382128433</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Standard_deviation\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"Streebog\":{\"module\":\"Hashing\",\"description\":\"Streebog是俄罗斯国家标准GOST R 34.11-2012 <i>Information Technology – Cryptographic Information Security – Hash Function</i>定义的哈希算法。此算法设计的初衷为替换旧GOST哈希算法GOST R 34.11-94，同时也是为了对标由美国国安局发起的SHA-3。\",\"infoURL\":\"https://wikipedia.org/wiki/Streebog\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"长度\",\"type\":\"option\",\"value\":[\"256\",\"512\"]}]},\"Strings\":{\"module\":\"Regex\",\"description\":\"从输入中提取所有的字符串，类似Unix的strings工具。\",\"infoURL\":\"https://wikipedia.org/wiki/Strings_(Unix)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码\",\"type\":\"option\",\"value\":[\"单字节\",\"16位小端序\",\"16位大端序\",\"所有\"]},{\"name\":\"最短长度\",\"type\":\"number\",\"value\":4},{\"name\":\"匹配类型\",\"type\":\"option\",\"value\":[\"[ASCII]\",\"字母数字+标点 (A)\",\"所有可打印字符 (A)\",\"C风格字符串 (A)\",\"[Unicode]\",\"字母数字+标点 (U)\",\"所有可打印字符 (U)\",\"C风格字符串 (U)\"]},{\"name\":\"显示总数\",\"type\":\"boolean\",\"value\":false},{\"name\":\"排序\",\"type\":\"boolean\",\"value\":false},{\"name\":\"去重\",\"type\":\"boolean\",\"value\":false}]},\"移除HTML标签\":{\"module\":\"Default\",\"description\":\"从输入中移除所有的HTML标签。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"移除缩进\",\"type\":\"boolean\",\"value\":true},{\"name\":\"移除多余换行\",\"type\":\"boolean\",\"value\":true}],\"checks\":[{\"pattern\":\"(</html>|</div>|</body>)\",\"flags\":\"i\",\"args\":[true,true]}]},\"删除HTTP头部\":{\"module\":\"Default\",\"description\":\"从HTTP请求或响应文本中删除请求头或响应头，使用首次出现的两个换行符作为定位。\",\"infoURL\":\"https://wikipedia.org/wiki/Hypertext_Transfer_Protocol#Message_format\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^HTTP(.|\\\\s)+?(\\\\r?\\\\n){2}\",\"flags\":\"\",\"args\":[]}]},\"Subsection\":{\"module\":\"Default\",\"description\":\"使用正则对输入数据进行匹配，然后对匹配到的内容进行下面的所有操作。<br><br>最多只能使用一个捕获组，整个流程只会针对这个捕获组的匹配内容进行操作。如果有多个捕获组，只会使用第一个的内容。<br><br>使用Merge操作来重置Subsection操作的效果。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":true,\"manualBake\":false,\"args\":[{\"name\":\"匹配内容（正则）\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"大小写不敏感（i）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"全局匹配（g）\",\"type\":\"boolean\",\"value\":true},{\"name\":\"忽略报错\",\"type\":\"boolean\",\"value\":false}]},\"替换密码\":{\"module\":\"Default\",\"description\":\"替换密码允许你将明文中的任意字节替换成其它字节。可以用来生成凯撒密码，但同时提供了更多的加密手段。<br><br>输入想要替换的内容在明文框，然后替换成的内容在密文框。<br><br>无法显示的字节可以用转义形式。例如换行可以写成 <code>\\\\n</code> 或 <code>\\\\x0a</code>。<br><br>用连字符来指定字节范围。例如 <code>0123456789</code> 可以写成 <code>0-9</code>。<br><br>注意反斜杠是用来转义其它字符的，所以如果需要使用反斜杠，它自身也要被转义（例<code>\\\\\\\\</code>）。\",\"infoURL\":\"https://wikipedia.org/wiki/Substitution_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"明文\",\"type\":\"binaryString\",\"value\":\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"},{\"name\":\"密文\",\"type\":\"binaryString\",\"value\":\"XYZABCDEFGHIJKLMNOPQRSTUVW\"},{\"name\":\"忽略大小写\",\"type\":\"boolean\",\"value\":false}]},\"求差\":{\"module\":\"Default\",\"description\":\"对一组数字求差（aka. 减法）。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5</code> 计算为 <code>1.5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Subtraction\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"求和\":{\"module\":\"Default\",\"description\":\"对一组数字求和（aka. 加法）。非数字的值会被忽略。<br><br>例： <code>0x0a 8 .5</code> 计算为 <code>18.5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Summation\",\"inputType\":\"string\",\"outputType\":\"BigNumber\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"CRLF\"]}]},\"大小写互换\":{\"module\":\"Default\",\"description\":\"大写转小写，小写转大写。\",\"infoURL\":\"\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"端序转换\":{\"module\":\"Default\",\"description\":\"转换输入数据的大小端序。可以读取十六进制或原始文本。输出格式与输入保持一致。\",\"infoURL\":\"https://wikipedia.org/wiki/Endianness\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"数据格式\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始文本\"]},{\"name\":\"字长 (字节)\",\"type\":\"number\",\"value\":4},{\"name\":\"填充不完整字编码\",\"type\":\"boolean\",\"value\":true}]},\"对称差\":{\"module\":\"Default\",\"description\":\"计算两个集合的对称差。\",\"infoURL\":\"https://wikipedia.org/wiki/Symmetric_difference\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"集合分隔符\",\"type\":\"binaryString\",\"value\":\"\\\\n\\\\n\"},{\"name\":\"元素分隔符\",\"type\":\"binaryString\",\"value\":\",\"}]},\"语法高亮\":{\"module\":\"Code\",\"description\":\"为多种编程语言添加语法高亮。注意：此操作不会对代码进行缩进，需配合使用对应的“美化（Beautify）”操作。\",\"infoURL\":\"https://wikipedia.org/wiki/Syntax_highlighting\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"语言\",\"type\":\"option\",\"value\":[\"自动检测\",\"1c\",\"abnf\",\"accesslog\",\"actionscript\",\"ada\",\"angelscript\",\"apache\",\"applescript\",\"arcade\",\"arduino\",\"armasm\",\"xml\",\"asciidoc\",\"aspectj\",\"autohotkey\",\"autoit\",\"avrasm\",\"awk\",\"axapta\",\"bash\",\"basic\",\"bnf\",\"brainfuck\",\"c\",\"cal\",\"capnproto\",\"ceylon\",\"clean\",\"clojure\",\"clojure-repl\",\"cmake\",\"coffeescript\",\"coq\",\"cos\",\"cpp\",\"crmsh\",\"crystal\",\"csharp\",\"csp\",\"css\",\"d\",\"markdown\",\"dart\",\"delphi\",\"diff\",\"django\",\"dns\",\"dockerfile\",\"dos\",\"dsconfig\",\"dts\",\"dust\",\"ebnf\",\"elixir\",\"elm\",\"ruby\",\"erb\",\"erlang-repl\",\"erlang\",\"excel\",\"fix\",\"flix\",\"fortran\",\"fsharp\",\"gams\",\"gauss\",\"gcode\",\"gherkin\",\"glsl\",\"gml\",\"go\",\"golo\",\"gradle\",\"graphql\",\"groovy\",\"haml\",\"handlebars\",\"haskell\",\"haxe\",\"hsp\",\"http\",\"hy\",\"inform7\",\"ini\",\"irpf90\",\"isbl\",\"java\",\"javascript\",\"jboss-cli\",\"json\",\"julia\",\"julia-repl\",\"kotlin\",\"lasso\",\"latex\",\"ldif\",\"leaf\",\"less\",\"lisp\",\"livecodeserver\",\"livescript\",\"llvm\",\"lsl\",\"lua\",\"makefile\",\"mathematica\",\"matlab\",\"maxima\",\"mel\",\"mercury\",\"mipsasm\",\"mizar\",\"perl\",\"mojolicious\",\"monkey\",\"moonscript\",\"n1ql\",\"nestedtext\",\"nginx\",\"nim\",\"nix\",\"node-repl\",\"nsis\",\"objectivec\",\"ocaml\",\"openscad\",\"oxygene\",\"parser3\",\"pf\",\"pgsql\",\"php\",\"php-template\",\"plaintext\",\"pony\",\"powershell\",\"processing\",\"profile\",\"prolog\",\"properties\",\"protobuf\",\"puppet\",\"purebasic\",\"python\",\"python-repl\",\"q\",\"qml\",\"r\",\"reasonml\",\"rib\",\"roboconf\",\"routeros\",\"rsl\",\"ruleslanguage\",\"rust\",\"sas\",\"scala\",\"scheme\",\"scilab\",\"scss\",\"shell\",\"smali\",\"smalltalk\",\"sml\",\"sqf\",\"sql\",\"stan\",\"stata\",\"step21\",\"stylus\",\"subunit\",\"swift\",\"taggerscript\",\"yaml\",\"tap\",\"tcl\",\"thrift\",\"tp\",\"twig\",\"typescript\",\"vala\",\"vbnet\",\"vbscript\",\"vbscript-html\",\"verilog\",\"vhdl\",\"vim\",\"wasm\",\"wren\",\"x86asm\",\"xl\",\"xquery\",\"zephir\"]}]},\"TCP/IP校验和\":{\"module\":\"Crypto\",\"description\":\"从输入的原始字节内容计算TCP (Transport Control Protocol)或IP (Internet Protocol)首部的校验和。\",\"infoURL\":\"https://wikipedia.org/wiki/IPv4_header_checksum\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Tail\":{\"module\":\"Default\",\"description\":\"和UNIX的tail工具类似。<br>输出后n行。<br>输入负数可以选取除最前n行之外的内容。<br>可以选择不同的分隔符来实现选取最后n个数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Tail_(Unix)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]},{\"name\":\"选取数量\",\"type\":\"number\",\"value\":10}]},\"提取字节\":{\"module\":\"Default\",\"description\":\"从数据中提取特定数量的字节。允许使用负数值。\",\"infoURL\":null,\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"起始位置\",\"type\":\"number\",\"value\":0},{\"name\":\"长度\",\"type\":\"number\",\"value\":5},{\"name\":\"对每一行单独进行提取\",\"type\":\"boolean\",\"value\":false}]},\"Tar\":{\"module\":\"Compression\",\"description\":\"把输入打包成tarball。<br><br>目前不支持多个文件。\",\"infoURL\":\"https://wikipedia.org/wiki/Tar_(computing)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"File\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"文件名\",\"type\":\"string\",\"value\":\"file.txt\"}]},\"文本编码暴力破解\":{\"module\":\"Encodings\",\"description\":\"列出所有支持的字符集解码/编码结果，让你可以看出哪个是正确的。\\n<br><br>\\n支持的字符集：\\n<ul>\\n<li>UTF-8 (65001)</li>\\n<li>UTF-7 (65000)</li>\\n<li>UTF-16LE (1200)</li>\\n<li>UTF-16BE (1201)</li>\\n<li>UTF-32LE (12000)</li>\\n<li>UTF-32BE (12001)</li>\\n<li>IBM EBCDIC International (500)</li>\\n<li>IBM EBCDIC US-Canada (37)</li>\\n<li>IBM EBCDIC Multilingual/ROECE (Latin 2) (870)</li>\\n<li>IBM EBCDIC Greek Modern (875)</li>\\n<li>IBM EBCDIC French (1010)</li>\\n<li>IBM EBCDIC Turkish (Latin 5) (1026)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047)</li>\\n<li>IBM EBCDIC Lao (1132/1133/1341)</li>\\n<li>IBM EBCDIC US-Canada (037 + Euro symbol) (1140)</li>\\n<li>IBM EBCDIC Germany (20273 + Euro symbol) (1141)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277 + Euro symbol) (1142)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278 + Euro symbol) (1143)</li>\\n<li>IBM EBCDIC Italy (20280 + Euro symbol) (1144)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284 + Euro symbol) (1145)</li>\\n<li>IBM EBCDIC United Kingdom (20285 + Euro symbol) (1146)</li>\\n<li>IBM EBCDIC France (20297 + Euro symbol) (1147)</li>\\n<li>IBM EBCDIC International (500 + Euro symbol) (1148)</li>\\n<li>IBM EBCDIC Icelandic (20871 + Euro symbol) (1149)</li>\\n<li>IBM EBCDIC Germany (20273)</li>\\n<li>IBM EBCDIC Denmark-Norway (20277)</li>\\n<li>IBM EBCDIC Finland-Sweden (20278)</li>\\n<li>IBM EBCDIC Italy (20280)</li>\\n<li>IBM EBCDIC Latin America-Spain (20284)</li>\\n<li>IBM EBCDIC United Kingdom (20285)</li>\\n<li>IBM EBCDIC Japanese Katakana Extended (20290)</li>\\n<li>IBM EBCDIC France (20297)</li>\\n<li>IBM EBCDIC Arabic (20420)</li>\\n<li>IBM EBCDIC Greek (20423)</li>\\n<li>IBM EBCDIC Hebrew (20424)</li>\\n<li>IBM EBCDIC Korean Extended (20833)</li>\\n<li>IBM EBCDIC Thai (20838)</li>\\n<li>IBM EBCDIC Icelandic (20871)</li>\\n<li>IBM EBCDIC Cyrillic Russian (20880)</li>\\n<li>IBM EBCDIC Turkish (20905)</li>\\n<li>IBM EBCDIC Latin 1/Open System (1047 + Euro symbol) (20924)</li>\\n<li>IBM EBCDIC Cyrillic Serbian-Bulgarian (21025)</li>\\n<li>OEM United States (437)</li>\\n<li>OEM Greek (formerly 437G); Greek (DOS) (737)</li>\\n<li>OEM Baltic; Baltic (DOS) (775)</li>\\n<li>OEM Russian; Cyrillic + Euro symbol (808)</li>\\n<li>OEM Multilingual Latin 1; Western European (DOS) (850)</li>\\n<li>OEM Latin 2; Central European (DOS) (852)</li>\\n<li>OEM Cyrillic (primarily Russian) (855)</li>\\n<li>OEM Turkish; Turkish (DOS) (857)</li>\\n<li>OEM Multilingual Latin 1 + Euro symbol (858)</li>\\n<li>OEM Portuguese; Portuguese (DOS) (860)</li>\\n<li>OEM Icelandic; Icelandic (DOS) (861)</li>\\n<li>OEM Hebrew; Hebrew (DOS) (862)</li>\\n<li>OEM French Canadian; French Canadian (DOS) (863)</li>\\n<li>OEM Arabic; Arabic (864) (864)</li>\\n<li>OEM Nordic; Nordic (DOS) (865)</li>\\n<li>OEM Russian; Cyrillic (DOS) (866)</li>\\n<li>OEM Modern Greek; Greek, Modern (DOS) (869)</li>\\n<li>OEM Cyrillic (primarily Russian) + Euro Symbol (872)</li>\\n<li>Windows-874 Thai (874)</li>\\n<li>Windows-1250 Central European (1250)</li>\\n<li>Windows-1251 Cyrillic (1251)</li>\\n<li>Windows-1252 Latin (1252)</li>\\n<li>Windows-1253 Greek (1253)</li>\\n<li>Windows-1254 Turkish (1254)</li>\\n<li>Windows-1255 Hebrew (1255)</li>\\n<li>Windows-1256 Arabic (1256)</li>\\n<li>Windows-1257 Baltic (1257)</li>\\n<li>Windows-1258 Vietnam (1258)</li>\\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\\n<li>ISO-8859-7 Latin/Greek (28597)</li>\\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\\n<li>ISO 8859-8 Hebrew (ISO-Logical) (38598)</li>\\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\\n<li>ISO-8859-11 Latin/Thai (28601)</li>\\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\\n<li>ISO-8859-15 Latin 9 (28605)</li>\\n<li>ISO-8859-16 Latin 10 (28606)</li>\\n<li>ISO 2022 JIS Japanese with no halfwidth Katakana (50220)</li>\\n<li>ISO 2022 JIS Japanese with halfwidth Katakana (50221)</li>\\n<li>ISO 2022 Japanese JIS X 0201-1989 (1 byte Kana-SO/SI) (50222)</li>\\n<li>ISO 2022 Korean (50225)</li>\\n<li>ISO 2022 Simplified Chinese (50227)</li>\\n<li>ISO 6937 Non-Spacing Accent (20269)</li>\\n<li>EUC Japanese (51932)</li>\\n<li>EUC Simplified Chinese (51936)</li>\\n<li>EUC Korean (51949)</li>\\n<li>ISCII Devanagari (57002)</li>\\n<li>ISCII Bengali (57003)</li>\\n<li>ISCII Tamil (57004)</li>\\n<li>ISCII Telugu (57005)</li>\\n<li>ISCII Assamese (57006)</li>\\n<li>ISCII Oriya (57007)</li>\\n<li>ISCII Kannada (57008)</li>\\n<li>ISCII Malayalam (57009)</li>\\n<li>ISCII Gujarati (57010)</li>\\n<li>ISCII Punjabi (57011)</li>\\n<li>Japanese Shift-JIS (932)</li>\\n<li>简体中文 GBK (936)</li>\\n<li>Korean (949)</li>\\n<li>繁体中文 Big5 (950)</li>\\n<li>US-ASCII (7-bit) (20127)</li>\\n<li>简体中文 GB2312 (20936)</li>\\n<li>KOI8-R Russian Cyrillic (20866)</li>\\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\\n<li>Mazovia (Polish) MS-DOS (620)</li>\\n<li>Arabic (ASMO 708) (708)</li>\\n<li>Arabic (Transparent ASMO); Arabic (DOS) (720)</li>\\n<li>Kamenický (Czech) MS-DOS (895)</li>\\n<li>Korean (Johab) (1361)</li>\\n<li>MAC Roman (10000)</li>\\n<li>Japanese (Mac) (10001)</li>\\n<li>MAC繁体中文 (Big5) (10002)</li>\\n<li>Korean (Mac) (10003)</li>\\n<li>Arabic (Mac) (10004)</li>\\n<li>Hebrew (Mac) (10005)</li>\\n<li>Greek (Mac) (10006)</li>\\n<li>Cyrillic (Mac) (10007)</li>\\n<li>MAC简体中文 (GB 2312) (10008)</li>\\n<li>Romanian (Mac) (10010)</li>\\n<li>Ukrainian (Mac) (10017)</li>\\n<li>Thai (Mac) (10021)</li>\\n<li>MAC Latin 2 (Central European) (10029)</li>\\n<li>Icelandic (Mac) (10079)</li>\\n<li>Turkish (Mac) (10081)</li>\\n<li>Croatian (Mac) (10082)</li>\\n<li>CNS Taiwan (Chinese Traditional) (20000)</li>\\n<li>TCA Taiwan (20001)</li>\\n<li>ETEN Taiwan (Chinese Traditional) (20002)</li>\\n<li>IBM5550 Taiwan (20003)</li>\\n<li>TeleText Taiwan (20004)</li>\\n<li>Wang Taiwan (20005)</li>\\n<li>Western European IA5 (IRV International Alphabet 5) (20105)</li>\\n<li>IA5 German (7-bit) (20106)</li>\\n<li>IA5 Swedish (7-bit) (20107)</li>\\n<li>IA5 Norwegian (7-bit) (20108)</li>\\n<li>T.61 (20261)</li>\\n<li>Japanese (JIS 0208-1990 and 0212-1990) (20932)</li>\\n<li>Korean Wansung (20949)</li>\\n<li>Extended/Ext Alpha Lowercase (21027)</li>\\n<li>Europa 3 (29001)</li>\\n<li>Atari ST/TT (47451)</li>\\n<li>HZ-GB2312 简体中文 (52936)</li>\\n<li>简体中文 GB18030 (54936)</li>\\n</ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Character_encoding\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"编码\",\"解码\"]}]},\"BCD码编码\":{\"module\":\"Default\",\"description\":\"BCD码（Binary-Coded Decimal)是一种十进制数字编码的形式。在这种编码下，每个十进制数字用一串单独的二进制比特来存储与表示。常见的有以4位或8位表示1个十进制数字。有时会用特殊的码位表示特殊符号。\",\"infoURL\":\"https://wikipedia.org/wiki/Binary-coded_decimal\",\"inputType\":\"BigNumber\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码方式\",\"type\":\"option\",\"value\":[\"8 4 2 1\",\"7 4 2 1\",\"4 2 2 1\",\"2 4 2 1\",\"8 4 -2 -1\",\"余3码\",\"IBM 8 4 2 1\"]},{\"name\":\"压缩\",\"type\":\"boolean\",\"value\":true},{\"name\":\"有符号\",\"type\":\"boolean\",\"value\":false},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"半字节\",\"字节\",\"原始数据\"]}]},\"十进制数转其它进制\":{\"module\":\"Default\",\"description\":\"把十进制数转换成其它给定进制\",\"infoURL\":\"https://wikipedia.org/wiki/Radix\",\"inputType\":\"BigNumber\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"进制\",\"type\":\"number\",\"value\":36}]},\"Base32编码\":{\"module\":\"Default\",\"description\":\"Base32是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。Base32比Base64使用的字母表小一些，通常只包含大写字母和数字2到7。\",\"infoURL\":\"https://wikipedia.org/wiki/Base32\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"binaryString\",\"value\":\"A-Z2-7=\"}]},\"Base45编码\":{\"module\":\"Default\",\"description\":\"Base45是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。越高的Base数目会生成越短的字符串。Base45是为二维码优化的编码方式。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"string\",\"value\":\"0-9A-Z $%*+\\\\-./:\"}]},\"Base58编码\":{\"module\":\"Default\",\"description\":\"Base58（类似于Base64）是把字节数据转换成特定字符组合的编码方式。和Base64的区别是移除了形状相近的易混字符（例如l、I、0和O)来提高可读性。<br><br>此操作将原始数据编码成使用ASCII字符的Base64字符串。<br><br>例： <code>hello world</code> 编码为 <code>StV1DL6CwTryKyV</code><br><br>Base58常见于加密货币（比特币、Ripple等)。\",\"infoURL\":\"https://wikipedia.org/wiki/Base58\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"比特币\",\"value\":\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"},{\"name\":\"Ripple\",\"value\":\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"}]}]},\"Base62编码\":{\"module\":\"Default\",\"description\":\"Base62是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。<br><br>此操作将原始数据编码成使用ASCII字符的Base62字符串。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"string\",\"value\":\"0-9A-Za-z\"}]},\"Base64编码\":{\"module\":\"Default\",\"description\":\"Base64是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。<br><br>此操作将原始数据编码成使用ASCII字符的Base64字符串。<br><br>例： <code>hello</code> 编码成 <code>aGVsbG8=</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Base64\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"标准 (RFC 4648): A-Za-z0-9+/=\",\"value\":\"A-Za-z0-9+/=\"},{\"name\":\"URL安全 (RFC 4648 §5): A-Za-z0-9-_\",\"value\":\"A-Za-z0-9-_\"},{\"name\":\"文件名安全: A-Za-z0-9+-=\",\"value\":\"A-Za-z0-9+\\\\-=\"},{\"name\":\"itoa64: ./0-9A-Za-z=\",\"value\":\"./0-9A-Za-z=\"},{\"name\":\"XML: A-Za-z0-9_.\",\"value\":\"A-Za-z0-9_.\"},{\"name\":\"y64: A-Za-z0-9._-\",\"value\":\"A-Za-z0-9._-\"},{\"name\":\"z64: 0-9a-zA-Z+/=\",\"value\":\"0-9a-zA-Z+/=\"},{\"name\":\"Radix-64 (RFC 4880): 0-9A-Za-z+/=\",\"value\":\"0-9A-Za-z+/=\"},{\"name\":\"Uuencoding: [space]-_\",\"value\":\" -_\"},{\"name\":\"Xxencoding: +-0-9A-Za-z\",\"value\":\"+\\\\-0-9A-Za-z\"},{\"name\":\"BinHex: !-,-0-689@A-NP-VX-Z[`a-fh-mp-r\",\"value\":\"!-,-0-689@A-NP-VX-Z[`a-fh-mp-r\"},{\"name\":\"ROT13: N-ZA-Mn-za-m0-9+/=\",\"value\":\"N-ZA-Mn-za-m0-9+/=\"},{\"name\":\"UNIX crypt: ./0-9A-Za-z\",\"value\":\"./0-9A-Za-z\"},{\"name\":\"Atom128: /128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\",\"value\":\"/128GhIoPQROSTeUbADfgHijKLM+n0pFWXY456xyzB7=39VaqrstJklmNuZvwcdEC\"},{\"name\":\"Megan35: 3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\",\"value\":\"3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5\"},{\"name\":\"Zong22: ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\",\"value\":\"ZKj9n+yf0wDVX1s/5YbdxSo=ILaUpPBCHg8uvNO4klm6iJGhQ7eFrWczAMEq3RTt2\"},{\"name\":\"Hazz15: HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\",\"value\":\"HNO4klm6ij9n+J2hyf0gzA8uvwDEq3X1Q7ZKeFrWcVTts/MRGYbdxSo=ILaUpPBC5\"}]}]},\"Base85编码\":{\"module\":\"Default\",\"description\":\"Base85（也叫Ascii85）是把字节数据转换成特定字符组合的编码方式。通常比Base64效率更高。<br><br>此操作将原始数据编码成使用ASCII字符的Base64字符串。字符表可选，带有预设。<br><br>例如：<code>hello world</code> 编码成 <code>BOu!rD]j7BEbo7</code><br><br>Base85在Adobe的PostScript和PDF格式中较为常见。<br><br><strong>选项</strong><br><u>可用字符</u><ul><li>标准 - 标准字母表，又叫Ascii85</li><li>Z85 (ZeroMQ) - 不带有引号和反斜杠之类，适用于生成字符串。</li><li>IPv6 - 适合编码IPV6地址的变体 (RFC 1924)</li></ul><u>包括分隔符</u><br>在数据开头和结尾添加 '<~' 和 '~>'。Adobe的Base85一般采用此格式。\",\"infoURL\":\"https://wikipedia.org/wiki/Ascii85\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"可用字符\",\"type\":\"editableOption\",\"value\":[{\"name\":\"标准\",\"value\":\"!-u\"},{\"name\":\"Z85 (ZeroMQ)\",\"value\":\"0-9a-zA-Z.\\\\-:+=^!/*?&<>()[]{}@%$#\"},{\"name\":\"IPv6\",\"value\":\"0-9A-Za-z!#$%&()*+\\\\-;<=>?@^_`{|}~\"}]},{\"name\":\"包括分隔符\",\"type\":\"boolean\",\"value\":false}]},\"Base92编码\":{\"module\":\"Default\",\"description\":\"Base92是把字节数据转换成特定字符组合的编码方式，编码后便于人类阅读，也方便计算机读取。\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_numeral_systems\",\"inputType\":\"string\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"字符转二进制\":{\"module\":\"Default\",\"description\":\"将输入字符串转换为对应的二进制表示（使用给定的分隔符）。<br><br>例 <code>Hi</code> 编码为 <code>01001000 01101001</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Binary_code\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\",\"无\"]},{\"name\":\"字节长度\",\"type\":\"number\",\"value\":8}]},\"盲文编码\":{\"module\":\"Default\",\"description\":\"把文本编码为六点盲文符号。\",\"infoURL\":\"https://wikipedia.org/wiki/Braille\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"转换为大写数字\":{\"module\":\"Default\",\"description\":\"把简体中文汉字数字转换为对应的大写形式。<br><br>例如： <code>一十一万四千五百一十四</code> 转换为 <code>壹拾壹万肆仟伍佰壹拾肆</code>。\",\"infoURL\":\"https://zh.wikipedia.org/wiki/%E5%A4%A7%E5%86%99%E6%95%B0%E5%AD%97\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"转换为Camel case\":{\"module\":\"Code\",\"description\":\"将输入字符串转换为camel case。\\n<br><br>\\nCamel case是除了单词边界之外的字母全小写的格式。\\n<br><br>\\n例如： thisIsCamelCase\\n<br><br>\\n勾选“尝试识别上下文”后此操作将尝试只转换函数和变量名。\",\"infoURL\":\"https://wikipedia.org/wiki/Camel_case\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"尝试识别上下文\",\"type\":\"boolean\",\"value\":false}]},\"转换为大小写不敏感正则\":{\"module\":\"Default\",\"description\":\"把大小写敏感正则字符串转换为大小写不敏感形式，用于无法使用正则i选项的场合。<br><br>例如：<code>Mozilla/[0-9].[0-9] .*</code> 转换为 <code>[mM][oO][zZ][iI][lL][lL][aA]/[0-9].[0-9] .*</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Regular_expression\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"转换为字符码\":{\"module\":\"Default\",\"description\":\"把字符转换成对应的Unicode字符码<br><br>例： <code>Γειά σου</code> 编码为 <code>0393 03b5 03b9 03ac 20 03c3 03bf 03c5</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Plane_(Unicode)\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]},{\"name\":\"进制\",\"type\":\"number\",\"value\":16}]},\"字符转十进制\":{\"module\":\"Default\",\"description\":\"将输入字符串转换为对应的十进制表示（使用给定的分隔符）。<br><br>例： <code>Hello</code> 编码为 <code>72 101 108 108 111</code>\",\"infoURL\":null,\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]},{\"name\":\"支持带符号数值（signed int）\",\"type\":\"boolean\",\"value\":false}]},\"字符转浮点数\":{\"module\":\"Default\",\"description\":\"转换为 IEEE754 浮点数\",\"infoURL\":\"https://wikipedia.org/wiki/IEEE_754\",\"inputType\":\"byteArray\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"端序\",\"type\":\"option\",\"value\":[\"大端序\",\"小端序\"]},{\"name\":\"类型\",\"type\":\"option\",\"value\":[\"Float (4字节)\",\"Double (8字节)\"]},{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}]},\"HTML实体编码\":{\"module\":\"Encodings\",\"description\":\"把字符编码为HTML实体<br><br>例： <code>&amp;</code> 编码为 <code>&amp;<span>amp;</span></code>\",\"infoURL\":\"https://wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"转换所有字符\",\"type\":\"boolean\",\"value\":false},{\"name\":\"转换成\",\"type\":\"option\",\"value\":[\"名称\",\"十进制\",\"十六进制\"]}]},\"字符转十六进制\":{\"module\":\"Default\",\"description\":\"将输入字符串转换为对应的十六进制表示（使用给定的分隔符）。<br><br>例如：UTF-8字符串 <code>Γειά σου</code> 编码成 <code>ce 93 ce b5 ce b9 ce ac 20 cf 83 ce bf cf 85 0a</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Hexadecimal\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"百分号\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\",\"0x\",\"0x和逗号\",\"\\\\x\",\"无\"]},{\"name\":\"每行字节数\",\"type\":\"number\",\"value\":0}]},\"Snort Content编码\":{\"module\":\"Default\",\"description\":\"把字符串的特殊字符转换成十六进制。SNORT的Content关键字使用此格式。<br><br>例： <code>foo=bar</code> 编码为 <code>foo|3d|bar</code>.\",\"infoURL\":\"http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node32.html#SECTION00451000000000000000\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"转换\",\"type\":\"option\",\"value\":[\"仅特殊字符\",\"仅特殊字符（包括空格）\",\"所有字符\"]},{\"name\":\"字节间用空格分隔\",\"type\":\"boolean\",\"value\":false}]},\"转换到Hexdump\":{\"module\":\"Default\",\"description\":\"生成输入数据的hexdump，显示十六进制以及每个字节的ASCII字符。<br><br>'UNIX格式'参数用于确定显示哪些可打印的ASCII字符。\",\"infoURL\":\"https://wikipedia.org/wiki/Hex_dump\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"宽度\",\"type\":\"number\",\"value\":16,\"min\":1},{\"name\":\"十六进制大写\",\"type\":\"boolean\",\"value\":false},{\"name\":\"包括最终长度\",\"type\":\"boolean\",\"value\":false},{\"name\":\"UNIX格式\",\"type\":\"boolean\",\"value\":false}]},\"转换为Kebab case\":{\"module\":\"Code\",\"description\":\"将输入字符串转换为kebab case。\\n<br><br>\\nKebab case是全小写使用连字符作为单词边界的格式。\\n<br><br>\\n例如： this-is-kebab-case\\n<br><br>\\n勾选“尝试识别上下文”后此操作将尝试只转换函数和变量名。\",\"infoURL\":\"https://wikipedia.org/wiki/Kebab_case\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"尝试识别上下文\",\"type\":\"boolean\",\"value\":false}]},\"转换为小写\":{\"module\":\"Default\",\"description\":\"将输入中的所有字符转换为小写。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"MessagePack编码\":{\"module\":\"Code\",\"description\":\"把JSON转换成MessagePack编码的字节buffer。MessagePack是一种计算机数据交换格式。它是一种二进制形式，用于表示简单的数据结构，如数组和关联数组。\",\"infoURL\":\"https://wikipedia.org/wiki/MessagePack\",\"inputType\":\"JSON\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"摩尔斯电码编码\":{\"module\":\"Default\",\"description\":\"把字母编码为国际摩尔斯电码。<br><br>忽略非摩尔斯码字符。<br><br>例： <code>SOS</code> 编码为 <code>... --- ...</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Morse_code\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"格式\",\"type\":\"option\",\"value\":[\"-/.\",\"_/.\",\"Dash/Dot\",\"DASH/DOT\",\"dash/dot\"]},{\"name\":\"字母分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"换行\",\"CRLF\",\"斜杠\",\"反斜杠\",\"逗号\",\"分号\",\"冒号\"]},{\"name\":\"单词分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"斜杠\",\"反斜杠\",\"逗号\",\"分号\",\"冒号\"]}]},\"字符转八进制\":{\"module\":\"Default\",\"description\":\"将输入字符串转换为对应的八进制表示（使用给定的分隔符）。<br><br>例： UTF-8编码字符串 <code>Γειά σου</code> 编码为 <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Octal\",\"inputType\":\"byteArray\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"空格\",\"逗号\",\"分号\",\"冒号\",\"换行\",\"CRLF\"]}]},\"Punycode编码\":{\"module\":\"Encodings\",\"description\":\"Punycode是用ASCII字符的一个子集来编码Unicode域名的一种方法。<br><br>例： <code>münchen</code> 编码为 <code>mnchen-3ya</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Punycode\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"国际化域名（带xn--）\",\"type\":\"boolean\",\"value\":false}]},\"QP编码\":{\"module\":\"Default\",\"description\":\"Quoted-printable或QP encoding，没有规范的中文译名，可译为可打印字符引用编码或使用可打印字符的编码。Quoted-printable是使用可打印的ASCII字符（如字母、数字与“=”）表示各种编码格式下的字符，以便能在7-bit数据通路上传输8-bit数据, 或者更一般地说在非8-bit clean媒体上正确处理数据。它被定义为在E-mail中使用的MIME。<br><br>QP使用“=”开头的转义字符。一般限制行宽为76，因为有些软件限制了行宽。\",\"infoURL\":\"https://wikipedia.org/wiki/Quoted-printable\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"转换为Snake case\":{\"module\":\"Code\",\"description\":\"将输入字符串转换为snake case。\\n<br><br>\\nSnake case是全小写并使用下划线作为单词分隔的格式。\\n<br><br>\\n例如： this_is_snake_case\\n<br><br>\\n勾选“尝试识别上下文”后此操作将尝试只转换函数和变量名。\",\"infoURL\":\"https://wikipedia.org/wiki/Snake_case\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"尝试识别上下文\",\"type\":\"boolean\",\"value\":false}]},\"转换为表格\":{\"module\":\"Default\",\"description\":\"用给定的分隔符分隔数据后渲染成HTML、ASCII或Markdown表格，可以额外添加表头。<br><br>默认支持CSV（逗号分隔）格式。将单元格分隔符修改为 <code>\\\\t</code> 用于支持TSV（Tab分隔），修改为 <code>|</code> 用于支持PSV（管道符分隔）。<br><br>你可以输入任意个数的分隔符，每个字符都会用作单独的分隔符。\",\"infoURL\":\"https://wikipedia.org/wiki/Comma-separated_values\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"单元格分隔符\",\"type\":\"binaryShortString\",\"value\":\",\"},{\"name\":\"行分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\r\\\\n\"},{\"name\":\"第一行作为表头\",\"type\":\"boolean\",\"value\":false},{\"name\":\"格式\",\"type\":\"option\",\"value\":[\"ASCII\",\"HTML\",\"Markdown\"]}]},\"转换到UNIX时间戳\":{\"module\":\"Default\",\"description\":\"解析DateTime字符串（UTC时区）并返回对应的UNIX时间戳。<br><br>例： <code>Mon 1 January 2001 11:00:00</code> 转换为 <code>978346800</code><br><br>UNIX时间，或称POSIX时间是UNIX或类UNIX系统使用的时间表示方式：从UTC1970年1月1日0时0分0秒起至现在的总秒数，不考虑闰秒。\",\"infoURL\":\"https://wikipedia.org/wiki/Unix_time\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"单位\",\"type\":\"option\",\"value\":[\"秒 (s)\",\"毫秒 (ms)\",\"微秒 (μs)\",\"纳秒 (ns)\"]},{\"name\":\"当作UTC时间\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示解析后的DateTime\",\"type\":\"boolean\",\"value\":true}]},\"转换为大写\":{\"module\":\"Default\",\"description\":\"将输入字符串转换成大写，可选限制为每个单词、句子或段落首字母大写。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"粒度\",\"type\":\"option\",\"value\":[\"所有字符\",\"单词\",\"句子\",\"段落\"]}]},\"转换DateTime格式\":{\"module\":\"Default\",\"description\":\"将输入的DateTime转换成另一种格式。<br><br>不输入任何内容来查看格式示例字符串。\",\"infoURL\":\"https://momentjs.com/docs/#/parsing/string-format/\",\"inputType\":\"string\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"内置格式\",\"type\":\"populateOption\",\"value\":[{\"name\":\"标准日期时间格式\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"美式日期时间格式\",\"value\":\"MM/DD/YYYY HH:mm:ss\"},{\"name\":\"国际日期时间格式\",\"value\":\"YYYY-MM-DD HH:mm:ss\"},{\"name\":\"详尽日期时间格式\",\"value\":\"dddd Do MMMM YYYY HH:mm:ss Z z\"},{\"name\":\"UNIX时间戳 (秒)\",\"value\":\"X\"},{\"name\":\"UNIX时间戳 (毫秒)\",\"value\":\"x\"},{\"name\":\"自动\",\"value\":\"\"}],\"target\":1},{\"name\":\"输入格式\",\"type\":\"binaryString\",\"value\":\"DD/MM/YYYY HH:mm:ss\"},{\"name\":\"输入时区\",\"type\":\"option\",\"value\":[\"UTC\",\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Addis_Ababa\",\"Africa/Algiers\",\"Africa/Asmara\",\"Africa/Asmera\",\"Africa/Bamako\",\"Africa/Bangui\",\"Africa/Banjul\",\"Africa/Bissau\",\"Africa/Blantyre\",\"Africa/Brazzaville\",\"Africa/Bujumbura\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/Conakry\",\"Africa/Dakar\",\"Africa/Dar_es_Salaam\",\"Africa/Djibouti\",\"Africa/Douala\",\"Africa/El_Aaiun\",\"Africa/Freetown\",\"Africa/Gaborone\",\"Africa/Harare\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Kampala\",\"Africa/Khartoum\",\"Africa/Kigali\",\"Africa/Kinshasa\",\"Africa/Lagos\",\"Africa/Libreville\",\"Africa/Lome\",\"Africa/Luanda\",\"Africa/Lubumbashi\",\"Africa/Lusaka\",\"Africa/Malabo\",\"Africa/Maputo\",\"Africa/Maseru\",\"Africa/Mbabane\",\"Africa/Mogadishu\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Niamey\",\"Africa/Nouakchott\",\"Africa/Ouagadougou\",\"Africa/Porto-Novo\",\"Africa/Sao_Tome\",\"Africa/Timbuktu\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Anguilla\",\"America/Antigua\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/ComodRivadavia\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Aruba\",\"America/Asuncion\",\"America/Atikokan\",\"America/Atka\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Buenos_Aires\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Catamarca\",\"America/Cayenne\",\"America/Cayman\",\"America/Chicago\",\"America/Chihuahua\",\"America/Ciudad_Juarez\",\"America/Coral_Harbour\",\"America/Cordoba\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Dominica\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Ensenada\",\"America/Fort_Nelson\",\"America/Fort_Wayne\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Godthab\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Grenada\",\"America/Guadeloupe\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Indianapolis\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Jujuy\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/Knox_IN\",\"America/Kralendijk\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Louisville\",\"America/Lower_Princes\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Marigot\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Mendoza\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Montreal\",\"America/Montserrat\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Acre\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Rosario\",\"America/Santa_Isabel\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Shiprock\",\"America/Sitka\",\"America/St_Barthelemy\",\"America/St_Johns\",\"America/St_Kitts\",\"America/St_Lucia\",\"America/St_Thomas\",\"America/St_Vincent\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Tortola\",\"America/Vancouver\",\"America/Virgin\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/McMurdo\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/South_Pole\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Arctic/Longyearbyen\",\"Asia/Aden\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Ashkhabad\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Bahrain\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Calcutta\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Chongqing\",\"Asia/Chungking\",\"Asia/Colombo\",\"Asia/Dacca\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Harbin\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Istanbul\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kashgar\",\"Asia/Kathmandu\",\"Asia/Katmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Kuwait\",\"Asia/Macao\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Muscat\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Phnom_Penh\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Rangoon\",\"Asia/Riyadh\",\"Asia/Saigon\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Tel_Aviv\",\"Asia/Thimbu\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ujung_Pandang\",\"Asia/Ulaanbaatar\",\"Asia/Ulan_Bator\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vientiane\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faeroe\",\"Atlantic/Faroe\",\"Atlantic/Jan_Mayen\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/St_Helena\",\"Atlantic/Stanley\",\"Australia/ACT\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Canberra\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/LHI\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/NSW\",\"Australia/North\",\"Australia/Perth\",\"Australia/Queensland\",\"Australia/South\",\"Australia/Sydney\",\"Australia/Tasmania\",\"Australia/Victoria\",\"Australia/West\",\"Australia/Yancowinna\",\"Brazil/Acre\",\"Brazil/DeNoronha\",\"Brazil/East\",\"Brazil/West\",\"CET\",\"CST6CDT\",\"Canada/Atlantic\",\"Canada/Central\",\"Canada/Eastern\",\"Canada/Mountain\",\"Canada/Newfoundland\",\"Canada/Pacific\",\"Canada/Saskatchewan\",\"Canada/Yukon\",\"Chile/Continental\",\"Chile/EasterIsland\",\"Cuba\",\"EET\",\"EST\",\"EST5EDT\",\"Egypt\",\"Eire\",\"Etc/GMT\",\"Etc/GMT+0\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-0\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/GMT0\",\"Etc/Greenwich\",\"Etc/UCT\",\"Etc/UTC\",\"Etc/Universal\",\"Etc/Zulu\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belfast\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Bratislava\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Busingen\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Guernsey\",\"Europe/Helsinki\",\"Europe/Isle_of_Man\",\"Europe/Istanbul\",\"Europe/Jersey\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Kyiv\",\"Europe/Lisbon\",\"Europe/Ljubljana\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Mariehamn\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Nicosia\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Podgorica\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/San_Marino\",\"Europe/Sarajevo\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Skopje\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Tiraspol\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vaduz\",\"Europe/Vatican\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zagreb\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"GB\",\"GB-Eire\",\"GMT\",\"GMT+0\",\"GMT-0\",\"GMT0\",\"Greenwich\",\"HST\",\"Hongkong\",\"Iceland\",\"Indian/Antananarivo\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Comoro\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Mayotte\",\"Indian/Reunion\",\"Iran\",\"Israel\",\"Jamaica\",\"Japan\",\"Kwajalein\",\"Libya\",\"MET\",\"MST\",\"MST7MDT\",\"Mexico/BajaNorte\",\"Mexico/BajaSur\",\"Mexico/General\",\"NZ\",\"NZ-CHAT\",\"Navajo\",\"PRC\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Johnston\",\"Pacific/Kanton\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Midway\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Ponape\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Saipan\",\"Pacific/Samoa\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Truk\",\"Pacific/Wake\",\"Pacific/Wallis\",\"Pacific/Yap\",\"Poland\",\"Portugal\",\"ROC\",\"ROK\",\"Singapore\",\"Turkey\",\"UCT\",\"US/Alaska\",\"US/Aleutian\",\"US/Arizona\",\"US/Central\",\"US/East-Indiana\",\"US/Eastern\",\"US/Hawaii\",\"US/Indiana-Starke\",\"US/Michigan\",\"US/Mountain\",\"US/Pacific\",\"US/Samoa\",\"UTC\",\"Universal\",\"W-SU\",\"WET\",\"Zulu\"]},{\"name\":\"输出格式\",\"type\":\"binaryString\",\"value\":\"dddd Do MMMM YYYY HH:mm:ss Z z\"},{\"name\":\"输出时区\",\"type\":\"option\",\"value\":[\"UTC\",\"Africa/Abidjan\",\"Africa/Accra\",\"Africa/Addis_Ababa\",\"Africa/Algiers\",\"Africa/Asmara\",\"Africa/Asmera\",\"Africa/Bamako\",\"Africa/Bangui\",\"Africa/Banjul\",\"Africa/Bissau\",\"Africa/Blantyre\",\"Africa/Brazzaville\",\"Africa/Bujumbura\",\"Africa/Cairo\",\"Africa/Casablanca\",\"Africa/Ceuta\",\"Africa/Conakry\",\"Africa/Dakar\",\"Africa/Dar_es_Salaam\",\"Africa/Djibouti\",\"Africa/Douala\",\"Africa/El_Aaiun\",\"Africa/Freetown\",\"Africa/Gaborone\",\"Africa/Harare\",\"Africa/Johannesburg\",\"Africa/Juba\",\"Africa/Kampala\",\"Africa/Khartoum\",\"Africa/Kigali\",\"Africa/Kinshasa\",\"Africa/Lagos\",\"Africa/Libreville\",\"Africa/Lome\",\"Africa/Luanda\",\"Africa/Lubumbashi\",\"Africa/Lusaka\",\"Africa/Malabo\",\"Africa/Maputo\",\"Africa/Maseru\",\"Africa/Mbabane\",\"Africa/Mogadishu\",\"Africa/Monrovia\",\"Africa/Nairobi\",\"Africa/Ndjamena\",\"Africa/Niamey\",\"Africa/Nouakchott\",\"Africa/Ouagadougou\",\"Africa/Porto-Novo\",\"Africa/Sao_Tome\",\"Africa/Timbuktu\",\"Africa/Tripoli\",\"Africa/Tunis\",\"Africa/Windhoek\",\"America/Adak\",\"America/Anchorage\",\"America/Anguilla\",\"America/Antigua\",\"America/Araguaina\",\"America/Argentina/Buenos_Aires\",\"America/Argentina/Catamarca\",\"America/Argentina/ComodRivadavia\",\"America/Argentina/Cordoba\",\"America/Argentina/Jujuy\",\"America/Argentina/La_Rioja\",\"America/Argentina/Mendoza\",\"America/Argentina/Rio_Gallegos\",\"America/Argentina/Salta\",\"America/Argentina/San_Juan\",\"America/Argentina/San_Luis\",\"America/Argentina/Tucuman\",\"America/Argentina/Ushuaia\",\"America/Aruba\",\"America/Asuncion\",\"America/Atikokan\",\"America/Atka\",\"America/Bahia\",\"America/Bahia_Banderas\",\"America/Barbados\",\"America/Belem\",\"America/Belize\",\"America/Blanc-Sablon\",\"America/Boa_Vista\",\"America/Bogota\",\"America/Boise\",\"America/Buenos_Aires\",\"America/Cambridge_Bay\",\"America/Campo_Grande\",\"America/Cancun\",\"America/Caracas\",\"America/Catamarca\",\"America/Cayenne\",\"America/Cayman\",\"America/Chicago\",\"America/Chihuahua\",\"America/Ciudad_Juarez\",\"America/Coral_Harbour\",\"America/Cordoba\",\"America/Costa_Rica\",\"America/Creston\",\"America/Cuiaba\",\"America/Curacao\",\"America/Danmarkshavn\",\"America/Dawson\",\"America/Dawson_Creek\",\"America/Denver\",\"America/Detroit\",\"America/Dominica\",\"America/Edmonton\",\"America/Eirunepe\",\"America/El_Salvador\",\"America/Ensenada\",\"America/Fort_Nelson\",\"America/Fort_Wayne\",\"America/Fortaleza\",\"America/Glace_Bay\",\"America/Godthab\",\"America/Goose_Bay\",\"America/Grand_Turk\",\"America/Grenada\",\"America/Guadeloupe\",\"America/Guatemala\",\"America/Guayaquil\",\"America/Guyana\",\"America/Halifax\",\"America/Havana\",\"America/Hermosillo\",\"America/Indiana/Indianapolis\",\"America/Indiana/Knox\",\"America/Indiana/Marengo\",\"America/Indiana/Petersburg\",\"America/Indiana/Tell_City\",\"America/Indiana/Vevay\",\"America/Indiana/Vincennes\",\"America/Indiana/Winamac\",\"America/Indianapolis\",\"America/Inuvik\",\"America/Iqaluit\",\"America/Jamaica\",\"America/Jujuy\",\"America/Juneau\",\"America/Kentucky/Louisville\",\"America/Kentucky/Monticello\",\"America/Knox_IN\",\"America/Kralendijk\",\"America/La_Paz\",\"America/Lima\",\"America/Los_Angeles\",\"America/Louisville\",\"America/Lower_Princes\",\"America/Maceio\",\"America/Managua\",\"America/Manaus\",\"America/Marigot\",\"America/Martinique\",\"America/Matamoros\",\"America/Mazatlan\",\"America/Mendoza\",\"America/Menominee\",\"America/Merida\",\"America/Metlakatla\",\"America/Mexico_City\",\"America/Miquelon\",\"America/Moncton\",\"America/Monterrey\",\"America/Montevideo\",\"America/Montreal\",\"America/Montserrat\",\"America/Nassau\",\"America/New_York\",\"America/Nipigon\",\"America/Nome\",\"America/Noronha\",\"America/North_Dakota/Beulah\",\"America/North_Dakota/Center\",\"America/North_Dakota/New_Salem\",\"America/Nuuk\",\"America/Ojinaga\",\"America/Panama\",\"America/Pangnirtung\",\"America/Paramaribo\",\"America/Phoenix\",\"America/Port-au-Prince\",\"America/Port_of_Spain\",\"America/Porto_Acre\",\"America/Porto_Velho\",\"America/Puerto_Rico\",\"America/Punta_Arenas\",\"America/Rainy_River\",\"America/Rankin_Inlet\",\"America/Recife\",\"America/Regina\",\"America/Resolute\",\"America/Rio_Branco\",\"America/Rosario\",\"America/Santa_Isabel\",\"America/Santarem\",\"America/Santiago\",\"America/Santo_Domingo\",\"America/Sao_Paulo\",\"America/Scoresbysund\",\"America/Shiprock\",\"America/Sitka\",\"America/St_Barthelemy\",\"America/St_Johns\",\"America/St_Kitts\",\"America/St_Lucia\",\"America/St_Thomas\",\"America/St_Vincent\",\"America/Swift_Current\",\"America/Tegucigalpa\",\"America/Thule\",\"America/Thunder_Bay\",\"America/Tijuana\",\"America/Toronto\",\"America/Tortola\",\"America/Vancouver\",\"America/Virgin\",\"America/Whitehorse\",\"America/Winnipeg\",\"America/Yakutat\",\"America/Yellowknife\",\"Antarctica/Casey\",\"Antarctica/Davis\",\"Antarctica/DumontDUrville\",\"Antarctica/Macquarie\",\"Antarctica/Mawson\",\"Antarctica/McMurdo\",\"Antarctica/Palmer\",\"Antarctica/Rothera\",\"Antarctica/South_Pole\",\"Antarctica/Syowa\",\"Antarctica/Troll\",\"Antarctica/Vostok\",\"Arctic/Longyearbyen\",\"Asia/Aden\",\"Asia/Almaty\",\"Asia/Amman\",\"Asia/Anadyr\",\"Asia/Aqtau\",\"Asia/Aqtobe\",\"Asia/Ashgabat\",\"Asia/Ashkhabad\",\"Asia/Atyrau\",\"Asia/Baghdad\",\"Asia/Bahrain\",\"Asia/Baku\",\"Asia/Bangkok\",\"Asia/Barnaul\",\"Asia/Beirut\",\"Asia/Bishkek\",\"Asia/Brunei\",\"Asia/Calcutta\",\"Asia/Chita\",\"Asia/Choibalsan\",\"Asia/Chongqing\",\"Asia/Chungking\",\"Asia/Colombo\",\"Asia/Dacca\",\"Asia/Damascus\",\"Asia/Dhaka\",\"Asia/Dili\",\"Asia/Dubai\",\"Asia/Dushanbe\",\"Asia/Famagusta\",\"Asia/Gaza\",\"Asia/Harbin\",\"Asia/Hebron\",\"Asia/Ho_Chi_Minh\",\"Asia/Hong_Kong\",\"Asia/Hovd\",\"Asia/Irkutsk\",\"Asia/Istanbul\",\"Asia/Jakarta\",\"Asia/Jayapura\",\"Asia/Jerusalem\",\"Asia/Kabul\",\"Asia/Kamchatka\",\"Asia/Karachi\",\"Asia/Kashgar\",\"Asia/Kathmandu\",\"Asia/Katmandu\",\"Asia/Khandyga\",\"Asia/Kolkata\",\"Asia/Krasnoyarsk\",\"Asia/Kuala_Lumpur\",\"Asia/Kuching\",\"Asia/Kuwait\",\"Asia/Macao\",\"Asia/Macau\",\"Asia/Magadan\",\"Asia/Makassar\",\"Asia/Manila\",\"Asia/Muscat\",\"Asia/Nicosia\",\"Asia/Novokuznetsk\",\"Asia/Novosibirsk\",\"Asia/Omsk\",\"Asia/Oral\",\"Asia/Phnom_Penh\",\"Asia/Pontianak\",\"Asia/Pyongyang\",\"Asia/Qatar\",\"Asia/Qostanay\",\"Asia/Qyzylorda\",\"Asia/Rangoon\",\"Asia/Riyadh\",\"Asia/Saigon\",\"Asia/Sakhalin\",\"Asia/Samarkand\",\"Asia/Seoul\",\"Asia/Shanghai\",\"Asia/Singapore\",\"Asia/Srednekolymsk\",\"Asia/Taipei\",\"Asia/Tashkent\",\"Asia/Tbilisi\",\"Asia/Tehran\",\"Asia/Tel_Aviv\",\"Asia/Thimbu\",\"Asia/Thimphu\",\"Asia/Tokyo\",\"Asia/Tomsk\",\"Asia/Ujung_Pandang\",\"Asia/Ulaanbaatar\",\"Asia/Ulan_Bator\",\"Asia/Urumqi\",\"Asia/Ust-Nera\",\"Asia/Vientiane\",\"Asia/Vladivostok\",\"Asia/Yakutsk\",\"Asia/Yangon\",\"Asia/Yekaterinburg\",\"Asia/Yerevan\",\"Atlantic/Azores\",\"Atlantic/Bermuda\",\"Atlantic/Canary\",\"Atlantic/Cape_Verde\",\"Atlantic/Faeroe\",\"Atlantic/Faroe\",\"Atlantic/Jan_Mayen\",\"Atlantic/Madeira\",\"Atlantic/Reykjavik\",\"Atlantic/South_Georgia\",\"Atlantic/St_Helena\",\"Atlantic/Stanley\",\"Australia/ACT\",\"Australia/Adelaide\",\"Australia/Brisbane\",\"Australia/Broken_Hill\",\"Australia/Canberra\",\"Australia/Currie\",\"Australia/Darwin\",\"Australia/Eucla\",\"Australia/Hobart\",\"Australia/LHI\",\"Australia/Lindeman\",\"Australia/Lord_Howe\",\"Australia/Melbourne\",\"Australia/NSW\",\"Australia/North\",\"Australia/Perth\",\"Australia/Queensland\",\"Australia/South\",\"Australia/Sydney\",\"Australia/Tasmania\",\"Australia/Victoria\",\"Australia/West\",\"Australia/Yancowinna\",\"Brazil/Acre\",\"Brazil/DeNoronha\",\"Brazil/East\",\"Brazil/West\",\"CET\",\"CST6CDT\",\"Canada/Atlantic\",\"Canada/Central\",\"Canada/Eastern\",\"Canada/Mountain\",\"Canada/Newfoundland\",\"Canada/Pacific\",\"Canada/Saskatchewan\",\"Canada/Yukon\",\"Chile/Continental\",\"Chile/EasterIsland\",\"Cuba\",\"EET\",\"EST\",\"EST5EDT\",\"Egypt\",\"Eire\",\"Etc/GMT\",\"Etc/GMT+0\",\"Etc/GMT+1\",\"Etc/GMT+10\",\"Etc/GMT+11\",\"Etc/GMT+12\",\"Etc/GMT+2\",\"Etc/GMT+3\",\"Etc/GMT+4\",\"Etc/GMT+5\",\"Etc/GMT+6\",\"Etc/GMT+7\",\"Etc/GMT+8\",\"Etc/GMT+9\",\"Etc/GMT-0\",\"Etc/GMT-1\",\"Etc/GMT-10\",\"Etc/GMT-11\",\"Etc/GMT-12\",\"Etc/GMT-13\",\"Etc/GMT-14\",\"Etc/GMT-2\",\"Etc/GMT-3\",\"Etc/GMT-4\",\"Etc/GMT-5\",\"Etc/GMT-6\",\"Etc/GMT-7\",\"Etc/GMT-8\",\"Etc/GMT-9\",\"Etc/GMT0\",\"Etc/Greenwich\",\"Etc/UCT\",\"Etc/UTC\",\"Etc/Universal\",\"Etc/Zulu\",\"Europe/Amsterdam\",\"Europe/Andorra\",\"Europe/Astrakhan\",\"Europe/Athens\",\"Europe/Belfast\",\"Europe/Belgrade\",\"Europe/Berlin\",\"Europe/Bratislava\",\"Europe/Brussels\",\"Europe/Bucharest\",\"Europe/Budapest\",\"Europe/Busingen\",\"Europe/Chisinau\",\"Europe/Copenhagen\",\"Europe/Dublin\",\"Europe/Gibraltar\",\"Europe/Guernsey\",\"Europe/Helsinki\",\"Europe/Isle_of_Man\",\"Europe/Istanbul\",\"Europe/Jersey\",\"Europe/Kaliningrad\",\"Europe/Kiev\",\"Europe/Kirov\",\"Europe/Kyiv\",\"Europe/Lisbon\",\"Europe/Ljubljana\",\"Europe/London\",\"Europe/Luxembourg\",\"Europe/Madrid\",\"Europe/Malta\",\"Europe/Mariehamn\",\"Europe/Minsk\",\"Europe/Monaco\",\"Europe/Moscow\",\"Europe/Nicosia\",\"Europe/Oslo\",\"Europe/Paris\",\"Europe/Podgorica\",\"Europe/Prague\",\"Europe/Riga\",\"Europe/Rome\",\"Europe/Samara\",\"Europe/San_Marino\",\"Europe/Sarajevo\",\"Europe/Saratov\",\"Europe/Simferopol\",\"Europe/Skopje\",\"Europe/Sofia\",\"Europe/Stockholm\",\"Europe/Tallinn\",\"Europe/Tirane\",\"Europe/Tiraspol\",\"Europe/Ulyanovsk\",\"Europe/Uzhgorod\",\"Europe/Vaduz\",\"Europe/Vatican\",\"Europe/Vienna\",\"Europe/Vilnius\",\"Europe/Volgograd\",\"Europe/Warsaw\",\"Europe/Zagreb\",\"Europe/Zaporozhye\",\"Europe/Zurich\",\"GB\",\"GB-Eire\",\"GMT\",\"GMT+0\",\"GMT-0\",\"GMT0\",\"Greenwich\",\"HST\",\"Hongkong\",\"Iceland\",\"Indian/Antananarivo\",\"Indian/Chagos\",\"Indian/Christmas\",\"Indian/Cocos\",\"Indian/Comoro\",\"Indian/Kerguelen\",\"Indian/Mahe\",\"Indian/Maldives\",\"Indian/Mauritius\",\"Indian/Mayotte\",\"Indian/Reunion\",\"Iran\",\"Israel\",\"Jamaica\",\"Japan\",\"Kwajalein\",\"Libya\",\"MET\",\"MST\",\"MST7MDT\",\"Mexico/BajaNorte\",\"Mexico/BajaSur\",\"Mexico/General\",\"NZ\",\"NZ-CHAT\",\"Navajo\",\"PRC\",\"PST8PDT\",\"Pacific/Apia\",\"Pacific/Auckland\",\"Pacific/Bougainville\",\"Pacific/Chatham\",\"Pacific/Chuuk\",\"Pacific/Easter\",\"Pacific/Efate\",\"Pacific/Enderbury\",\"Pacific/Fakaofo\",\"Pacific/Fiji\",\"Pacific/Funafuti\",\"Pacific/Galapagos\",\"Pacific/Gambier\",\"Pacific/Guadalcanal\",\"Pacific/Guam\",\"Pacific/Honolulu\",\"Pacific/Johnston\",\"Pacific/Kanton\",\"Pacific/Kiritimati\",\"Pacific/Kosrae\",\"Pacific/Kwajalein\",\"Pacific/Majuro\",\"Pacific/Marquesas\",\"Pacific/Midway\",\"Pacific/Nauru\",\"Pacific/Niue\",\"Pacific/Norfolk\",\"Pacific/Noumea\",\"Pacific/Pago_Pago\",\"Pacific/Palau\",\"Pacific/Pitcairn\",\"Pacific/Pohnpei\",\"Pacific/Ponape\",\"Pacific/Port_Moresby\",\"Pacific/Rarotonga\",\"Pacific/Saipan\",\"Pacific/Samoa\",\"Pacific/Tahiti\",\"Pacific/Tarawa\",\"Pacific/Tongatapu\",\"Pacific/Truk\",\"Pacific/Wake\",\"Pacific/Wallis\",\"Pacific/Yap\",\"Poland\",\"Portugal\",\"ROC\",\"ROK\",\"Singapore\",\"Turkey\",\"UCT\",\"US/Alaska\",\"US/Aleutian\",\"US/Arizona\",\"US/Central\",\"US/East-Indiana\",\"US/Eastern\",\"US/Hawaii\",\"US/Indiana-Starke\",\"US/Michigan\",\"US/Mountain\",\"US/Pacific\",\"US/Samoa\",\"UTC\",\"Universal\",\"W-SU\",\"WET\",\"Zulu\"]}]},\"3DES解密\":{\"module\":\"Ciphers\",\"description\":\"三重DES（3DES）对每个块进行三次DES来增加key长度。<br><br><b>Key:</b> 3DES的key长度为24字节（192位）。<br>DES的key长度为8字节（64位）。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV:</b>初始化向量的长度是8字节。<br><br><b>填充:</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/Triple_DES\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\",\"CBC/NoPadding\",\"ECB/NoPadding\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]}]},\"3DES加密\":{\"module\":\"Ciphers\",\"description\":\"三重DES（3DES）对每个块进行三次DES来增加key长度。<br><br><b>Key:</b> 3DES的key长度为24字节（192位）。<br>DES的key长度为8字节（64位）。<br><br>你可以通过密钥派生操作来生成基于密码的key。<br><br><b>IV:</b>初始化向量的长度是8字节。<br><br><b>填充:</b>CBC和ECB模式下会使用PKCS#7填充。\",\"infoURL\":\"https://wikipedia.org/wiki/Triple_DES\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"IV\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"Hex\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"模式\",\"type\":\"option\",\"value\":[\"CBC\",\"CFB\",\"OFB\",\"CTR\",\"ECB\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"原始内容\",\"十六进制\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始内容\"]}]},\"Typex\":{\"module\":\"Bletchley\",\"description\":\"Encipher/decipher with the WW2 Typex machine.<br><br>Typex was originally built by the British Royal Air Force prior to WW2, and is based on the Enigma machine with some improvements made, including using five rotors with more stepping points and interchangeable wiring cores. It was used across the British and Commonwealth militaries. A number of later variants were produced; here we simulate a WW2 era Mark 22 Typex with plugboards for the reflector and input. Typex rotors were changed regularly and none are public: a random example set are provided.<br><br>To configure the reflector plugboard, enter a string of connected pairs of letters in the reflector box, e.g. <code>AB CD EF</code> connects A to B, C to D, and E to F (you'll need to connect every letter). There is also an input plugboard: unlike Enigma's plugboard, it's not restricted to pairs, so it's entered like a rotor (without stepping). To create your own rotor, enter the letters that the rotor maps A to Z to, in order, optionally followed by <code>&lt;</code> then a list of stepping points.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.\",\"infoURL\":\"https://wikipedia.org/wiki/Typex\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"1st (left-hand) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW\"},{\"name\":\"Example 2\",\"value\":\"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW\"},{\"name\":\"Example 3\",\"value\":\"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW\"},{\"name\":\"Example 4\",\"value\":\"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW\"},{\"name\":\"Example 5\",\"value\":\"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW\"},{\"name\":\"Example 6\",\"value\":\"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW\"},{\"name\":\"Example 7\",\"value\":\"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW\"},{\"name\":\"Example 8\",\"value\":\"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW\"}]},{\"name\":\"1st rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"1st rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"1st rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"2nd rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW\"},{\"name\":\"Example 2\",\"value\":\"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW\"},{\"name\":\"Example 3\",\"value\":\"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW\"},{\"name\":\"Example 4\",\"value\":\"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW\"},{\"name\":\"Example 5\",\"value\":\"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW\"},{\"name\":\"Example 6\",\"value\":\"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW\"},{\"name\":\"Example 7\",\"value\":\"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW\"},{\"name\":\"Example 8\",\"value\":\"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW\"}],\"defaultIndex\":1},{\"name\":\"2nd rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"2nd rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"2nd rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"3rd (middle) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW\"},{\"name\":\"Example 2\",\"value\":\"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW\"},{\"name\":\"Example 3\",\"value\":\"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW\"},{\"name\":\"Example 4\",\"value\":\"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW\"},{\"name\":\"Example 5\",\"value\":\"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW\"},{\"name\":\"Example 6\",\"value\":\"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW\"},{\"name\":\"Example 7\",\"value\":\"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW\"},{\"name\":\"Example 8\",\"value\":\"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW\"}],\"defaultIndex\":2},{\"name\":\"3rd rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"3rd rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"3rd rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"4th (static) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW\"},{\"name\":\"Example 2\",\"value\":\"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW\"},{\"name\":\"Example 3\",\"value\":\"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW\"},{\"name\":\"Example 4\",\"value\":\"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW\"},{\"name\":\"Example 5\",\"value\":\"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW\"},{\"name\":\"Example 6\",\"value\":\"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW\"},{\"name\":\"Example 7\",\"value\":\"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW\"},{\"name\":\"Example 8\",\"value\":\"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW\"}],\"defaultIndex\":3},{\"name\":\"4th rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"4th rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"4th rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"5th (right-hand, static) rotor\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example 1\",\"value\":\"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW\"},{\"name\":\"Example 2\",\"value\":\"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW\"},{\"name\":\"Example 3\",\"value\":\"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW\"},{\"name\":\"Example 4\",\"value\":\"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW\"},{\"name\":\"Example 5\",\"value\":\"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW\"},{\"name\":\"Example 6\",\"value\":\"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW\"},{\"name\":\"Example 7\",\"value\":\"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW\"},{\"name\":\"Example 8\",\"value\":\"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW\"}],\"defaultIndex\":4},{\"name\":\"5th rotor reversed\",\"type\":\"boolean\",\"value\":false},{\"name\":\"5th rotor ring setting\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"5th rotor initial value\",\"type\":\"option\",\"value\":[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]},{\"name\":\"Reflector\",\"type\":\"editableOption\",\"value\":[{\"name\":\"Example\",\"value\":\"AN BC FG IE KD LU MH OR TS VZ WQ XJ YP\"}]},{\"name\":\"Plugboard\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"Typex keyboard emulation\",\"type\":\"option\",\"value\":[\"None\",\"Encrypt\",\"Decrypt\"]},{\"name\":\"Strict output\",\"type\":\"boolean\",\"value\":true,\"hint\":\"Remove non-alphabet letters and group output\"}]},\"UNIX时间戳转Windows Filetime\":{\"module\":\"Default\",\"description\":\"将UNIX时间戳转换为Windows Filetime数值。br><br>Windows Filetime是对应从1601年1月1日（UTC）开始的以100纳秒为单位的64位数值。<br><br>UNIX 时间戳是对应从1970年1月1日（UTC）开始的以秒为单位的32位数值。<br><br>此操作也支持不同的UNIX时间单位如毫秒、微秒和纳秒。\",\"infoURL\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输入单位\",\"type\":\"option\",\"value\":[\"秒 (s)\",\"毫秒 (ms)\",\"微秒 (μs)\",\"纳秒 (ns)\"]},{\"name\":\"输出格式\",\"type\":\"option\",\"value\":[\"十进制\",\"十六进制 (大端序)\",\"十六进制 (小端序)\"]}]},\"URL解码\":{\"module\":\"URL\",\"description\":\"把URI/URL百分号编码的内容解码为原始内容。<br><br>例： <code>%3d</code> 解码为 <code>=</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Percent-encoding\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\".*(?:%[\\\\da-f]{2}.*){4}\",\"flags\":\"i\",\"args\":[]}]},\"URL编码\":{\"module\":\"URL\",\"description\":\"把特殊字符编码为百分号开头的形式，即URI/URL编码。<br><br>例： <code>=</code> 编码为 <code>%3d</code>\",\"infoURL\":\"https://wikipedia.org/wiki/Percent-encoding\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"编码所有特殊字符\",\"type\":\"boolean\",\"value\":false}]},\"字符串转义恢复\":{\"module\":\"Default\",\"description\":\"将已经转义的字符串恢复。例如，<code>Don\\\\'t stop me now</code> 恢复为 <code>Don't stop me now</code>。<br><br>支持以下的字符转义：<ul><li><code>\\\\n</code> （换行，LF）</li><li><code>\\\\r</code> （回车，CR）</li><li><code>\\\\t</code> （制表符）</li><li><code>\\\\b</code> （退格）</li><li><code>\\\\f</code> （换页，FF）</li><li><code>\\\\xnn</code> （十六进制，n是0到f）</li><li><code>\\\\\\\\</code> （反斜杠）</li><li><code>\\\\'</code> （单引号）</li><li><code>\\\\&quot;</code> （双引号）</li><li><code>\\\\unnnn</code> （Unicode字符）</li><li><code>\\\\u{nnnnnn}</code> （Unicode码点）</li></ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Escape_sequence\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"Unicode转义恢复\":{\"module\":\"Default\",\"description\":\"把转义后的Unicode字符恢复成原本形式。<br><br>支持以下前缀：<ul><li><code>\\\\u</code></li><li><code>%u</code></li><li><code>U+</code></li></ul>例： <code>\\\\u03c3\\\\u03bf\\\\u03c5</code> 解码为 <code>σου</code>\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"前缀\",\"type\":\"option\",\"value\":[\"\\\\u\",\"%u\",\"U+\"]}]},\"Unicode文本格式\":{\"module\":\"Default\",\"description\":\"使用Unicode组合字符为纯文本添加格式。\",\"infoURL\":\"https://wikipedia.org/wiki/Combining_character\",\"inputType\":\"byteArray\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"下划线\",\"type\":\"boolean\",\"value\":\"false\"},{\"name\":\"删除线\",\"type\":\"boolean\",\"value\":\"false\"}]},\"去重\":{\"module\":\"Default\",\"description\":\"从输入移除重复的字符串。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"分隔符\",\"type\":\"option\",\"value\":[\"换行\",\"CRLF\",\"空格\",\"逗号\",\"分号\",\"冒号\",\"无\"]},{\"name\":\"显示个数\",\"type\":\"boolean\",\"value\":false}]},\"Untar\":{\"module\":\"Compression\",\"description\":\"解包 tarball 并按文件展示内容。\",\"infoURL\":\"https://wikipedia.org/wiki/Tar_(computing)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[],\"checks\":[{\"pattern\":\"^.{257}\\\\x75\\\\x73\\\\x74\\\\x61\\\\x72\",\"flags\":\"\",\"args\":[]}]},\"Unzip\":{\"module\":\"Compression\",\"description\":\"使用PKZIP算法解压缩并按文件显示内容，支持密码。\",\"infoURL\":\"https://wikipedia.org/wiki/Zip_(file_format)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密码\",\"type\":\"binaryString\",\"value\":\"\"},{\"name\":\"验证结果\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^\\\\x50\\\\x4b(?:\\\\x03|\\\\x05|\\\\x07)(?:\\\\x04|\\\\x06|\\\\x08)\",\"flags\":\"\",\"args\":[\"\",false]}]},\"VarInt解码\":{\"module\":\"Default\",\"description\":\"把VarInt编码的整数进行解码。VarInt是效率较高的编码变长整数的方式，通常用于Protobuf。\",\"infoURL\":\"https://developers.google.com/protocol-buffers/docs/encoding#varints\",\"inputType\":\"byteArray\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"VarInt编码\":{\"module\":\"Default\",\"description\":\"把整数编码成VarInt。VarInt是效率较高的编码变长整数的方式，通常用于Protobuf。\",\"infoURL\":\"https://developers.google.com/protocol-buffers/docs/encoding#varints\",\"inputType\":\"number\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"查看位平面\":{\"module\":\"Image\",\"description\":\"提取并显示任何给定图像的位平面。每张图像显示原图像当中每个像素字节数据的给定一个位，通常用于图像隐写术。\",\"infoURL\":\"https://wikipedia.org/wiki/Bit_plane\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"html\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"颜色\",\"type\":\"option\",\"value\":[\"Red\",\"Green\",\"Blue\",\"Alpha\"]},{\"name\":\"位\",\"type\":\"number\",\"value\":0}]},\"维吉尼亚密码解密\":{\"module\":\"Ciphers\",\"description\":\"维吉尼亚密码（又译维热纳尔密码）是使用一系列凯撒密码组成密码字母表的加密算法，属于多表密码的一种简单形式。\",\"infoURL\":\"https://wikipedia.org/wiki/Vigenère_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"string\",\"value\":\"\"}]},\"维吉尼亚密码加密\":{\"module\":\"Ciphers\",\"description\":\"维吉尼亚密码（又译维热纳尔密码）是使用一系列凯撒密码组成密码字母表的加密算法，属于多表密码的一种简单形式。\",\"infoURL\":\"https://wikipedia.org/wiki/Vigenère_cipher\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"string\",\"value\":\"\"}]},\"Whirlpool\":{\"module\":\"Crypto\",\"description\":\"Whirlpool是由Vincent Rijmen和Paulo S. L. M. Barreto在2000年公开的加密算法。<br><br>存在多个变种：<ul><li>Whirlpool-0是2000年发布的最初版本。</li><li>Whirlpool-T是在2001年发布的第一个更新版本，改进了s-box的生成过程。</li><li>Whirlpool是最新版本，于2003年发布，修复了diffusion matrix中的缺陷。</li></ul>\",\"infoURL\":\"https://wikipedia.org/wiki/Whirlpool_(cryptography)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"变种\",\"type\":\"option\",\"value\":[\"Whirlpool\",\"Whirlpool-T\",\"Whirlpool-0\"]},{\"name\":\"轮数\",\"type\":\"number\",\"value\":10,\"min\":1,\"max\":10}]},\"Windows Filetime转UNIX时间戳\":{\"module\":\"Default\",\"description\":\"将Windows Filetime值转换为UNIX时间戳。<br><br>Windows Filetime是对应从1601年1月1日（UTC）开始的以100纳秒为单位的64位数值。<br><br>UNIX 时间戳是对应从1970年1月1日（UTC）开始的以秒为单位的32位数值。<br><br>此操作也支持不同的UNIX时间单位如毫秒、微秒和纳秒。\",\"infoURL\":\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"输出单位\",\"type\":\"option\",\"value\":[\"秒 (s)\",\"毫秒 (ms)\",\"微秒 (μs)\",\"纳秒 (ns)\"]},{\"name\":\"输入格式\",\"type\":\"option\",\"value\":[\"十进制\",\"十六进制 (大端序)\",\"十六进制 (小端序)\"]}]},\"XKCD Random Number\":{\"module\":\"Default\",\"description\":\"RFC 1149.5 specifies 4 as the standard IEEE-vetted random number.\",\"infoURL\":\"https://xkcd.com/221/\",\"inputType\":\"string\",\"outputType\":\"number\",\"flowControl\":false,\"manualBake\":false,\"args\":[]},\"XML美化\":{\"module\":\"Code\",\"description\":\"为eXtensible Markup Language (XML)代码添加缩进与美化。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"缩进\",\"type\":\"binaryShortString\",\"value\":\"\\\\t\"}]},\"XML压缩\":{\"module\":\"Code\",\"description\":\"压缩eXtensible Markup Language (XML)代码（Minify/Uglify）。\",\"infoURL\":null,\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"保留注释\",\"type\":\"boolean\",\"value\":false}]},\"XOR\":{\"module\":\"Default\",\"description\":\"用给定的key对输入做异或（XOR）操作。<br>例： <code>fe023da5</code><br><br><strong>选项：</strong><br><u>保留Null：</u>如果当前字节是0x00或者和key相同，则跳过不进行XOR操作。<br><br><u>加密方式：</u><ul><li>标准 - key保持不变</li><li>输入差分 - key设置为上一个处理前的字节</li><li>输出差分 - key设置为上一个处理后的字节</li><li>级联 - key设置成输入当前处理位置后移1个字节的内容</li></ul>\",\"infoURL\":\"https://wikipedia.org/wiki/XOR\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"byteArray\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"Decimal\",\"Binary\",\"Base64\",\"UTF8\",\"Latin1\"]},{\"name\":\"加密方式\",\"type\":\"option\",\"value\":[\"标准\",\"输入差分\",\"输出差分\",\"级联\"]},{\"name\":\"保留Null\",\"type\":\"boolean\",\"value\":false}]},\"XOR暴力破解\":{\"module\":\"Default\",\"description\":\"枚举所有的XOR解码结果。受限于浏览器性能，目前仅限key长度不超过2。<br><br>你可以输入一个已知的明文字符串来筛选结果（已知明文攻击中称为crib）。\",\"infoURL\":\"https://wikipedia.org/wiki/Exclusive_or\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"Key长度\",\"type\":\"number\",\"value\":1},{\"name\":\"样本长度\",\"type\":\"number\",\"value\":100},{\"name\":\"样本偏移量\",\"type\":\"number\",\"value\":0},{\"name\":\"加密方式\",\"type\":\"option\",\"value\":[\"标准\",\"输入差分\",\"输出差分\"]},{\"name\":\"保留Null\",\"type\":\"boolean\",\"value\":false},{\"name\":\"输出key\",\"type\":\"boolean\",\"value\":true},{\"name\":\"输出十六进制\",\"type\":\"boolean\",\"value\":false},{\"name\":\"Crib（已知明文部分）\",\"type\":\"binaryString\",\"value\":\"\"}]},\"XPath表达式\":{\"module\":\"Code\",\"description\":\"从XML文档中使用给定的XPath表达式进行查询并提取内容。\",\"infoURL\":\"https://wikipedia.org/wiki/XPath\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"XPath\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"查询结果分隔符\",\"type\":\"binaryShortString\",\"value\":\"\\\\n\"}]},\"XSalsa20\":{\"module\":\"Ciphers\",\"description\":\"XSalsa20是Salsa20流加密算法的变种，由丹尼尔·J·伯恩斯坦设计。XSalsa相比Salsa使用更长的nonce。<br><br><b>密钥：</b> XSalsa20使用16或32字节（128或256位）。<br><br><b>Nonce：</b> XSalsa20使用24字节（192位）长度的nonce。<br><br><b>计数：</b> XSalsa使用8字节（64位）长度的计数。计数在流的起始处为0，每64字节递增。\",\"infoURL\":\"https://en.wikipedia.org/wiki/Salsa20#XSalsa20_with_192-bit_nonce\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\"]},{\"name\":\"Nonce\",\"type\":\"toggleString\",\"value\":\"\",\"toggleValues\":[\"十六进制\",\"UTF8\",\"Latin1\",\"Base64\",\"整数\"]},{\"name\":\"计数\",\"type\":\"number\",\"value\":0,\"min\":0},{\"name\":\"轮数\",\"type\":\"option\",\"value\":[\"20\",\"12\",\"8\"]},{\"name\":\"输入\",\"type\":\"option\",\"value\":[\"十六进制\",\"原始\"]},{\"name\":\"输出\",\"type\":\"option\",\"value\":[\"原始\",\"十六进制\"]}]},\"XXTEA\":{\"module\":\"Default\",\"description\":\"Corrected Block TEA（改进版块TEA，通常被称作XXTEA）是设计用来改进原版块TEA密码弱点的块密码算法。XXTEA可以加密任意不少于64位、总长为32位倍数长度的块。执行的总循环数取决于块大小，但至少会有6次（对于较小的块提升到32次）。原版的块TEA算法将XTEA的轮算法应用于块中的每个词然后叠加到相邻最左侧，导致解密时的扩散速度较慢，这个弱点被用来破解此密码算法。Corrected Block TEA使用改进后的轮算法，利用块中相邻的两个词进行计算。\",\"infoURL\":\"https://wikipedia.org/wiki/XXTEA\",\"inputType\":\"string\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"密钥\",\"type\":\"string\",\"value\":\"\"}]},\"YARA规则\":{\"module\":\"Yara\",\"description\":\"YARA是VirusTotal制作的一个主要用于恶意软件研究和检测的工具。它提供了一种创建基于文本或二进制模式的恶意软件系列的描述方法。一个描述本质上是一个 YARA 规则名称，其中这些规则由字符串集和一个布尔表达式组成。使用的语言具有与 Perl 兼容的正则表达式的特点。对于规则编写，请参考：<a href='https://yara.readthedocs.io/en/latest/writingrules.html'>YARA文档</a>。\",\"infoURL\":\"https://wikipedia.org/wiki/YARA\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"string\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"规则\",\"type\":\"text\",\"value\":\"\",\"rows\":5},{\"name\":\"显示字符串\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示字符串长度\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示元数据\",\"type\":\"boolean\",\"value\":false},{\"name\":\"显示计数\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示规则警告\",\"type\":\"boolean\",\"value\":true},{\"name\":\"显示控制台模块消息\",\"type\":\"boolean\",\"value\":true}]},\"Zip\":{\"module\":\"Compression\",\"description\":\"将输入数据使用给定的文件名用PKZIP算法进行压缩。<br><br>当前不支持多个文件。\",\"infoURL\":\"https://wikipedia.org/wiki/Zip_(file_format)\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"File\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"文件名\",\"type\":\"string\",\"value\":\"file.txt\"},{\"name\":\"注释\",\"type\":\"string\",\"value\":\"\"},{\"name\":\"密码\",\"type\":\"binaryString\",\"value\":\"\"},{\"name\":\"压缩方式\",\"type\":\"option\",\"value\":[\"Deflate\",\"无压缩 (Store)\"]},{\"name\":\"操作系统\",\"type\":\"option\",\"value\":[\"MSDOS\",\"Unix\",\"Macintosh\"]},{\"name\":\"压缩类型\",\"type\":\"option\",\"value\":[\"动态霍夫曼压缩\",\"静态霍夫曼压缩\",\"无压缩 (Store)\"]}]},\"Zlib Deflate\":{\"module\":\"Compression\",\"description\":\"使用带有Zlib头部的deflate算法压缩数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Zlib\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"压缩类型\",\"type\":\"option\",\"value\":[\"动态霍夫曼压缩\",\"静态霍夫曼压缩\",\"无压缩 (Store)\"]}]},\"Zlib Inflate\":{\"module\":\"Compression\",\"description\":\"解压使用带有Zlib头部的deflate算法压缩的数据。\",\"infoURL\":\"https://wikipedia.org/wiki/Zlib\",\"inputType\":\"ArrayBuffer\",\"outputType\":\"ArrayBuffer\",\"flowControl\":false,\"manualBake\":false,\"args\":[{\"name\":\"起始索引\",\"type\":\"number\",\"value\":0},{\"name\":\"起始输出缓冲区尺寸\",\"type\":\"number\",\"value\":0},{\"name\":\"缓冲区扩展类型\",\"type\":\"option\",\"value\":[\"自适应\",\"块\"]},{\"name\":\"解压缩后重置缓冲区尺寸\",\"type\":\"boolean\",\"value\":false},{\"name\":\"验证结果\",\"type\":\"boolean\",\"value\":false}],\"checks\":[{\"pattern\":\"^\\\\x78(\\\\x01|\\\\x9c|\\\\xda|\\\\x5e)\",\"flags\":\"\",\"args\":[0,0,\"自适应\",false,false]}]}}}"